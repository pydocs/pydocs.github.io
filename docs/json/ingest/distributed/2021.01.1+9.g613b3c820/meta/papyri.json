{
  "distributed.actor.Actor": "distributed.Actor",
  "distributed.actor.ActorFuture": "distributed.ActorFuture",
  "distributed.deploy.adaptive.Adaptive": "distributed.Adaptive",
  "distributed.client.Client": "distributed.Client",
  "distributed.client.CompatibleExecutor": "distributed.CompatibleExecutor",
  "distributed.event.Event": "distributed.Event",
  "distributed.client.Executor": "distributed.Executor",
  "distributed.client.Future": "distributed.Future",
  "distributed.deploy.local.LocalCluster": "distributed.LocalCluster",
  "distributed.lock.Lock": "distributed.Lock",
  "distributed.nanny.Nanny": "distributed.Nanny",
  "distributed.diagnostics.plugin.PipInstall": "distributed.PipInstall",
  "distributed.pubsub.Pub": "distributed.Pub",
  "distributed.queues.Queue": "distributed.Queue",
  "distributed.worker.Reschedule": "distributed.Reschedule",
  "distributed.deploy.ssh.SSHCluster": "distributed.SSHCluster",
  "distributed.scheduler.Scheduler": "distributed.Scheduler",
  "distributed.diagnostics.plugin.SchedulerPlugin": "distributed.SchedulerPlugin",
  "distributed.security.Security": "distributed.Security",
  "distributed.semaphore.Semaphore": "distributed.Semaphore",
  "distributed.deploy.spec.SpecCluster": "distributed.SpecCluster",
  "distributed.core.Status": "distributed.Status",
  "distributed.pubsub.Sub": "distributed.Sub",
  "distributed.variable.Variable": "distributed.Variable",
  "distributed.worker.Worker": "distributed.Worker",
  "distributed.diagnostics.plugin.WorkerPlugin": "distributed.WorkerPlugin",
  "distributed.client.as_completed": "distributed.as_completed",
  "distributed.comm.core.connect": "distributed.connect",
  "distributed.client.default_client": "distributed.default_client",
  "distributed.client.fire_and_forget": "distributed.fire_and_forget",
  "distributed.client.futures_of": "distributed.futures_of",
  "distributed.worker.get_client": "distributed.get_client",
  "distributed.client.get_task_metadata": "distributed.get_task_metadata",
  "distributed.client.get_task_stream": "distributed.get_task_stream",
  "distributed.worker.get_worker": "distributed.get_worker",
  "distributed.worker_client.local_client": "distributed.local_client",
  "distributed.client.performance_report": "distributed.performance_report",
  "distributed.diagnostics.progressbar.progress": "distributed.progress",
  "distributed.threadpoolexecutor.rejoin": "distributed.rejoin",
  "distributed.core.rpc": "distributed.rpc",
  "distributed.worker.secede": "distributed.secede",
  "distributed.utils.sync": "distributed.sync",
  "distributed.client.wait": "distributed.wait",
  "distributed.worker_client.worker_client": "distributed.worker_client",
  "distributed.actor.Actor.__init__": "distributed.Actor.__init__",
  "distributed.actor.Actor.__repr__": "distributed.Actor.__repr__",
  "distributed.actor.Actor.__reduce__": "distributed.Actor.__reduce__",
  "distributed.actor.Actor.__dir__": "distributed.Actor.__dir__",
  "distributed.actor.Actor.__getattr__": "distributed.Actor.__getattr__",
  "distributed.actor.ActorFuture.__init__": "distributed.ActorFuture.__init__",
  "distributed.actor.ActorFuture.__await__": "distributed.ActorFuture.__await__",
  "distributed.actor.ActorFuture.result": "distributed.ActorFuture.result",
  "distributed.actor.ActorFuture.__repr__": "distributed.ActorFuture.__repr__",
  "distributed.deploy.adaptive.Adaptive.__init__": "distributed.Adaptive.__init__",
  "distributed.deploy.adaptive.Adaptive.target": "distributed.Adaptive.target",
  "distributed.deploy.adaptive.Adaptive.recommendations": "distributed.Adaptive.recommendations",
  "distributed.deploy.adaptive.Adaptive.workers_to_close": "distributed.Adaptive.workers_to_close",
  "distributed.deploy.adaptive.Adaptive.scale_down": "distributed.Adaptive.scale_down",
  "distributed.deploy.adaptive.Adaptive.scale_up": "distributed.Adaptive.scale_up",
  "distributed.client.Client.__init__": "distributed.Client.__init__",
  "distributed.client.Client.as_current": "distributed.Client.as_current",
  "distributed.client.Client.sync": "distributed.Client.sync",
  "distributed.client.Client.__repr__": "distributed.Client.__repr__",
  "distributed.client.Client.start": "distributed.Client.start",
  "distributed.client.Client.__await__": "distributed.Client.__await__",
  "distributed.client.Client.wait_for_workers": "distributed.Client.wait_for_workers",
  "distributed.client.Client.__enter__": "distributed.Client.__enter__",
  "distributed.client.Client.__aenter__": "distributed.Client.__aenter__",
  "distributed.client.Client.__aexit__": "distributed.Client.__aexit__",
  "distributed.client.Client.__exit__": "distributed.Client.__exit__",
  "distributed.client.Client.__del__": "distributed.Client.__del__",
  "distributed.client.Client.close": "distributed.Client.close",
  "distributed.client.Client.shutdown": "distributed.Client.shutdown",
  "distributed.client.Client.get_executor": "distributed.Client.get_executor",
  "distributed.client.Client.submit": "distributed.Client.submit",
  "distributed.client.Client.map": "distributed.Client.map",
  "distributed.client.Client.gather": "distributed.Client.gather",
  "distributed.client.Client.scatter": "distributed.Client.scatter",
  "distributed.client.Client.cancel": "distributed.Client.cancel",
  "distributed.client.Client.retry": "distributed.Client.retry",
  "distributed.client.Client.publish_dataset": "distributed.Client.publish_dataset",
  "distributed.client.Client.unpublish_dataset": "distributed.Client.unpublish_dataset",
  "distributed.client.Client.list_datasets": "distributed.Client.list_datasets",
  "distributed.client.Client.get_dataset": "distributed.Client.get_dataset",
  "distributed.client.Client.run_on_scheduler": "distributed.Client.run_on_scheduler",
  "distributed.client.Client.run": "distributed.Client.run",
  "distributed.client.Client.run_coroutine": "distributed.Client.run_coroutine",
  "distributed.client.Client.get": "distributed.Client.get",
  "distributed.client.Client.normalize_collection": "distributed.Client.normalize_collection",
  "distributed.client.Client.compute": "distributed.Client.compute",
  "distributed.client.Client.persist": "distributed.Client.persist",
  "distributed.client.Client.restart": "distributed.Client.restart",
  "distributed.client.Client.upload_file": "distributed.Client.upload_file",
  "distributed.client.Client.rebalance": "distributed.Client.rebalance",
  "distributed.client.Client.replicate": "distributed.Client.replicate",
  "distributed.client.Client.nthreads": "distributed.Client.nthreads",
  "distributed.client.Client.who_has": "distributed.Client.who_has",
  "distributed.client.Client.has_what": "distributed.Client.has_what",
  "distributed.client.Client.processing": "distributed.Client.processing",
  "distributed.client.Client.nbytes": "distributed.Client.nbytes",
  "distributed.client.Client.call_stack": "distributed.Client.call_stack",
  "distributed.client.Client.profile": "distributed.Client.profile",
  "distributed.client.Client.scheduler_info": "distributed.Client.scheduler_info",
  "distributed.client.Client.write_scheduler_file": "distributed.Client.write_scheduler_file",
  "distributed.client.Client.get_metadata": "distributed.Client.get_metadata",
  "distributed.client.Client.get_scheduler_logs": "distributed.Client.get_scheduler_logs",
  "distributed.client.Client.get_worker_logs": "distributed.Client.get_worker_logs",
  "distributed.client.Client.log_event": "distributed.Client.log_event",
  "distributed.client.Client.get_events": "distributed.Client.get_events",
  "distributed.client.Client.retire_workers": "distributed.Client.retire_workers",
  "distributed.client.Client.set_metadata": "distributed.Client.set_metadata",
  "distributed.client.Client.get_versions": "distributed.Client.get_versions",
  "distributed.client.Client.futures_of": "distributed.Client.futures_of",
  "distributed.client.Client.start_ipython": "distributed.Client.start_ipython",
  "distributed.client.Client.start_ipython_workers": "distributed.Client.start_ipython_workers",
  "distributed.client.Client.start_ipython_scheduler": "distributed.Client.start_ipython_scheduler",
  "distributed.client.Client.get_task_stream": "distributed.Client.get_task_stream",
  "distributed.client.Client.register_worker_callbacks": "distributed.Client.register_worker_callbacks",
  "distributed.client.Client.register_worker_plugin": "distributed.Client.register_worker_plugin",
  "distributed.event.Event.__init__": "distributed.Event.__init__",
  "distributed.event.Event.__await__": "distributed.Event.__await__",
  "distributed.event.Event.wait": "distributed.Event.wait",
  "distributed.event.Event.clear": "distributed.Event.clear",
  "distributed.event.Event.set": "distributed.Event.set",
  "distributed.event.Event.is_set": "distributed.Event.is_set",
  "distributed.event.Event.__reduce__": "distributed.Event.__reduce__",
  "distributed.client.Executor.__init__": "distributed.Executor.__init__",
  "distributed.client.Future.__init__": "distributed.Future.__init__",
  "distributed.client.Future.done": "distributed.Future.done",
  "distributed.client.Future.result": "distributed.Future.result",
  "distributed.client.Future.exception": "distributed.Future.exception",
  "distributed.client.Future.add_done_callback": "distributed.Future.add_done_callback",
  "distributed.client.Future.cancel": "distributed.Future.cancel",
  "distributed.client.Future.retry": "distributed.Future.retry",
  "distributed.client.Future.cancelled": "distributed.Future.cancelled",
  "distributed.client.Future.traceback": "distributed.Future.traceback",
  "distributed.client.Future.release": "distributed.Future.release",
  "distributed.client.Future.__getstate__": "distributed.Future.__getstate__",
  "distributed.client.Future.__setstate__": "distributed.Future.__setstate__",
  "distributed.client.Future.__del__": "distributed.Future.__del__",
  "distributed.client.Future.__repr__": "distributed.Future.__repr__",
  "distributed.client.Future.__await__": "distributed.Future.__await__",
  "distributed.deploy.local.LocalCluster.__init__": "distributed.LocalCluster.__init__",
  "distributed.deploy.local.LocalCluster.start_worker": "distributed.LocalCluster.start_worker",
  "distributed.lock.Lock.__init__": "distributed.Lock.__init__",
  "distributed.lock.Lock.acquire": "distributed.Lock.acquire",
  "distributed.lock.Lock.release": "distributed.Lock.release",
  "distributed.lock.Lock.locked": "distributed.Lock.locked",
  "distributed.lock.Lock.__enter__": "distributed.Lock.__enter__",
  "distributed.lock.Lock.__exit__": "distributed.Lock.__exit__",
  "distributed.lock.Lock.__aenter__": "distributed.Lock.__aenter__",
  "distributed.lock.Lock.__aexit__": "distributed.Lock.__aexit__",
  "distributed.lock.Lock.__reduce__": "distributed.Lock.__reduce__",
  "distributed.nanny.Nanny.__init__": "distributed.Nanny.__init__",
  "distributed.nanny.Nanny.__repr__": "distributed.Nanny.__repr__",
  "distributed.nanny.Nanny.start": "distributed.Nanny.start",
  "distributed.nanny.Nanny.kill": "distributed.Nanny.kill",
  "distributed.nanny.Nanny.instantiate": "distributed.Nanny.instantiate",
  "distributed.nanny.Nanny.restart": "distributed.Nanny.restart",
  "distributed.nanny.Nanny.memory_monitor": "distributed.Nanny.memory_monitor",
  "distributed.nanny.Nanny.is_alive": "distributed.Nanny.is_alive",
  "distributed.nanny.Nanny.run": "distributed.Nanny.run",
  "distributed.nanny.Nanny.close_gracefully": "distributed.Nanny.close_gracefully",
  "distributed.nanny.Nanny.close": "distributed.Nanny.close",
  "distributed.diagnostics.plugin.PipInstall.__init__": "distributed.PipInstall.__init__",
  "distributed.diagnostics.plugin.PipInstall.setup": "distributed.PipInstall.setup",
  "distributed.pubsub.Pub.__init__": "distributed.Pub.__init__",
  "distributed.pubsub.Pub.put": "distributed.Pub.put",
  "distributed.pubsub.Pub.__repr__": "distributed.Pub.__repr__",
  "distributed.queues.Queue.__init__": "distributed.Queue.__init__",
  "distributed.queues.Queue.__await__": "distributed.Queue.__await__",
  "distributed.queues.Queue.put": "distributed.Queue.put",
  "distributed.queues.Queue.get": "distributed.Queue.get",
  "distributed.queues.Queue.qsize": "distributed.Queue.qsize",
  "distributed.queues.Queue.close": "distributed.Queue.close",
  "distributed.queues.Queue.__getstate__": "distributed.Queue.__getstate__",
  "distributed.queues.Queue.__setstate__": "distributed.Queue.__setstate__",
  "distributed.scheduler.Scheduler.__init__": "distributed.Scheduler.__init__",
  "distributed.scheduler.Scheduler.__repr__": "distributed.Scheduler.__repr__",
  "distributed.scheduler.Scheduler.identity": "distributed.Scheduler.identity",
  "distributed.scheduler.Scheduler.get_worker_service_addr": "distributed.Scheduler.get_worker_service_addr",
  "distributed.scheduler.Scheduler.start": "distributed.Scheduler.start",
  "distributed.scheduler.Scheduler.close": "distributed.Scheduler.close",
  "distributed.scheduler.Scheduler.close_worker": "distributed.Scheduler.close_worker",
  "distributed.scheduler.Scheduler.heartbeat_worker": "distributed.Scheduler.heartbeat_worker",
  "distributed.scheduler.Scheduler.add_worker": "distributed.Scheduler.add_worker",
  "distributed.scheduler.Scheduler.update_graph_hlg": "distributed.Scheduler.update_graph_hlg",
  "distributed.scheduler.Scheduler.update_graph": "distributed.Scheduler.update_graph",
  "distributed.scheduler.Scheduler.new_task": "distributed.Scheduler.new_task",
  "distributed.scheduler.Scheduler.stimulus_task_finished": "distributed.Scheduler.stimulus_task_finished",
  "distributed.scheduler.Scheduler.stimulus_task_erred": "distributed.Scheduler.stimulus_task_erred",
  "distributed.scheduler.Scheduler.stimulus_missing_data": "distributed.Scheduler.stimulus_missing_data",
  "distributed.scheduler.Scheduler.stimulus_retry": "distributed.Scheduler.stimulus_retry",
  "distributed.scheduler.Scheduler.remove_worker": "distributed.Scheduler.remove_worker",
  "distributed.scheduler.Scheduler.stimulus_cancel": "distributed.Scheduler.stimulus_cancel",
  "distributed.scheduler.Scheduler.cancel_key": "distributed.Scheduler.cancel_key",
  "distributed.scheduler.Scheduler.client_desires_keys": "distributed.Scheduler.client_desires_keys",
  "distributed.scheduler.Scheduler.client_releases_keys": "distributed.Scheduler.client_releases_keys",
  "distributed.scheduler.Scheduler.client_heartbeat": "distributed.Scheduler.client_heartbeat",
  "distributed.scheduler.Scheduler.validate_released": "distributed.Scheduler.validate_released",
  "distributed.scheduler.Scheduler.validate_waiting": "distributed.Scheduler.validate_waiting",
  "distributed.scheduler.Scheduler.validate_processing": "distributed.Scheduler.validate_processing",
  "distributed.scheduler.Scheduler.validate_memory": "distributed.Scheduler.validate_memory",
  "distributed.scheduler.Scheduler.validate_no_worker": "distributed.Scheduler.validate_no_worker",
  "distributed.scheduler.Scheduler.validate_erred": "distributed.Scheduler.validate_erred",
  "distributed.scheduler.Scheduler.validate_key": "distributed.Scheduler.validate_key",
  "distributed.scheduler.Scheduler.validate_state": "distributed.Scheduler.validate_state",
  "distributed.scheduler.Scheduler.report": "distributed.Scheduler.report",
  "distributed.scheduler.Scheduler.add_client": "distributed.Scheduler.add_client",
  "distributed.scheduler.Scheduler.remove_client": "distributed.Scheduler.remove_client",
  "distributed.scheduler.Scheduler.send_task_to_worker": "distributed.Scheduler.send_task_to_worker",
  "distributed.scheduler.Scheduler.handle_uncaught_error": "distributed.Scheduler.handle_uncaught_error",
  "distributed.scheduler.Scheduler.handle_task_finished": "distributed.Scheduler.handle_task_finished",
  "distributed.scheduler.Scheduler.handle_task_erred": "distributed.Scheduler.handle_task_erred",
  "distributed.scheduler.Scheduler.handle_release_data": "distributed.Scheduler.handle_release_data",
  "distributed.scheduler.Scheduler.handle_missing_data": "distributed.Scheduler.handle_missing_data",
  "distributed.scheduler.Scheduler.release_worker_data": "distributed.Scheduler.release_worker_data",
  "distributed.scheduler.Scheduler.handle_long_running": "distributed.Scheduler.handle_long_running",
  "distributed.scheduler.Scheduler.handle_worker": "distributed.Scheduler.handle_worker",
  "distributed.scheduler.Scheduler.add_plugin": "distributed.Scheduler.add_plugin",
  "distributed.scheduler.Scheduler.remove_plugin": "distributed.Scheduler.remove_plugin",
  "distributed.scheduler.Scheduler.worker_send": "distributed.Scheduler.worker_send",
  "distributed.scheduler.Scheduler.client_send": "distributed.Scheduler.client_send",
  "distributed.scheduler.Scheduler.scatter": "distributed.Scheduler.scatter",
  "distributed.scheduler.Scheduler.gather": "distributed.Scheduler.gather",
  "distributed.scheduler.Scheduler.clear_task_state": "distributed.Scheduler.clear_task_state",
  "distributed.scheduler.Scheduler.restart": "distributed.Scheduler.restart",
  "distributed.scheduler.Scheduler.broadcast": "distributed.Scheduler.broadcast",
  "distributed.scheduler.Scheduler.proxy": "distributed.Scheduler.proxy",
  "distributed.scheduler.Scheduler.rebalance": "distributed.Scheduler.rebalance",
  "distributed.scheduler.Scheduler.replicate": "distributed.Scheduler.replicate",
  "distributed.scheduler.Scheduler.workers_to_close": "distributed.Scheduler.workers_to_close",
  "distributed.scheduler.Scheduler.retire_workers": "distributed.Scheduler.retire_workers",
  "distributed.scheduler.Scheduler.add_keys": "distributed.Scheduler.add_keys",
  "distributed.scheduler.Scheduler.update_data": "distributed.Scheduler.update_data",
  "distributed.scheduler.Scheduler.report_on_key": "distributed.Scheduler.report_on_key",
  "distributed.scheduler.Scheduler.feed": "distributed.Scheduler.feed",
  "distributed.scheduler.Scheduler.log_worker_event": "distributed.Scheduler.log_worker_event",
  "distributed.scheduler.Scheduler.subscribe_worker_status": "distributed.Scheduler.subscribe_worker_status",
  "distributed.scheduler.Scheduler.get_processing": "distributed.Scheduler.get_processing",
  "distributed.scheduler.Scheduler.get_who_has": "distributed.Scheduler.get_who_has",
  "distributed.scheduler.Scheduler.get_has_what": "distributed.Scheduler.get_has_what",
  "distributed.scheduler.Scheduler.get_ncores": "distributed.Scheduler.get_ncores",
  "distributed.scheduler.Scheduler.get_call_stack": "distributed.Scheduler.get_call_stack",
  "distributed.scheduler.Scheduler.get_nbytes": "distributed.Scheduler.get_nbytes",
  "distributed.scheduler.Scheduler.run_function": "distributed.Scheduler.run_function",
  "distributed.scheduler.Scheduler.set_metadata": "distributed.Scheduler.set_metadata",
  "distributed.scheduler.Scheduler.get_metadata": "distributed.Scheduler.get_metadata",
  "distributed.scheduler.Scheduler.get_task_status": "distributed.Scheduler.get_task_status",
  "distributed.scheduler.Scheduler.get_task_stream": "distributed.Scheduler.get_task_stream",
  "distributed.scheduler.Scheduler.start_task_metadata": "distributed.Scheduler.start_task_metadata",
  "distributed.scheduler.Scheduler.stop_task_metadata": "distributed.Scheduler.stop_task_metadata",
  "distributed.scheduler.Scheduler.register_worker_plugin": "distributed.Scheduler.register_worker_plugin",
  "distributed.scheduler.Scheduler.transition": "distributed.Scheduler.transition",
  "distributed.scheduler.Scheduler.transitions": "distributed.Scheduler.transitions",
  "distributed.scheduler.Scheduler.story": "distributed.Scheduler.story",
  "distributed.scheduler.Scheduler.reschedule": "distributed.Scheduler.reschedule",
  "distributed.scheduler.Scheduler.add_resources": "distributed.Scheduler.add_resources",
  "distributed.scheduler.Scheduler.remove_resources": "distributed.Scheduler.remove_resources",
  "distributed.scheduler.Scheduler.coerce_address": "distributed.Scheduler.coerce_address",
  "distributed.scheduler.Scheduler.workers_list": "distributed.Scheduler.workers_list",
  "distributed.scheduler.Scheduler.start_ipython": "distributed.Scheduler.start_ipython",
  "distributed.scheduler.Scheduler.get_profile": "distributed.Scheduler.get_profile",
  "distributed.scheduler.Scheduler.get_profile_metadata": "distributed.Scheduler.get_profile_metadata",
  "distributed.scheduler.Scheduler.performance_report": "distributed.Scheduler.performance_report",
  "distributed.scheduler.Scheduler.get_worker_logs": "distributed.Scheduler.get_worker_logs",
  "distributed.scheduler.Scheduler.log_event": "distributed.Scheduler.log_event",
  "distributed.scheduler.Scheduler.get_events": "distributed.Scheduler.get_events",
  "distributed.scheduler.Scheduler.reevaluate_occupancy": "distributed.Scheduler.reevaluate_occupancy",
  "distributed.scheduler.Scheduler.check_worker_ttl": "distributed.Scheduler.check_worker_ttl",
  "distributed.scheduler.Scheduler.check_idle": "distributed.Scheduler.check_idle",
  "distributed.scheduler.Scheduler.adaptive_target": "distributed.Scheduler.adaptive_target",
  "distributed.diagnostics.plugin.SchedulerPlugin.start": "distributed.SchedulerPlugin.start",
  "distributed.diagnostics.plugin.SchedulerPlugin.close": "distributed.SchedulerPlugin.close",
  "distributed.diagnostics.plugin.SchedulerPlugin.update_graph": "distributed.SchedulerPlugin.update_graph",
  "distributed.diagnostics.plugin.SchedulerPlugin.restart": "distributed.SchedulerPlugin.restart",
  "distributed.diagnostics.plugin.SchedulerPlugin.transition": "distributed.SchedulerPlugin.transition",
  "distributed.diagnostics.plugin.SchedulerPlugin.add_worker": "distributed.SchedulerPlugin.add_worker",
  "distributed.diagnostics.plugin.SchedulerPlugin.remove_worker": "distributed.SchedulerPlugin.remove_worker",
  "distributed.diagnostics.plugin.SchedulerPlugin.add_client": "distributed.SchedulerPlugin.add_client",
  "distributed.diagnostics.plugin.SchedulerPlugin.remove_client": "distributed.SchedulerPlugin.remove_client",
  "distributed.security.Security.__init__": "distributed.Security.__init__",
  "distributed.security.Security.__repr__": "distributed.Security.__repr__",
  "distributed.security.Security.get_tls_config_for_role": "distributed.Security.get_tls_config_for_role",
  "distributed.security.Security.get_connection_args": "distributed.Security.get_connection_args",
  "distributed.security.Security.get_listen_args": "distributed.Security.get_listen_args",
  "distributed.semaphore.Semaphore.__init__": "distributed.Semaphore.__init__",
  "distributed.semaphore.Semaphore.register": "distributed.Semaphore.register",
  "distributed.semaphore.Semaphore.__await__": "distributed.Semaphore.__await__",
  "distributed.semaphore.Semaphore.sync": "distributed.Semaphore.sync",
  "distributed.semaphore.Semaphore.acquire": "distributed.Semaphore.acquire",
  "distributed.semaphore.Semaphore.release": "distributed.Semaphore.release",
  "distributed.semaphore.Semaphore.get_value": "distributed.Semaphore.get_value",
  "distributed.semaphore.Semaphore.__enter__": "distributed.Semaphore.__enter__",
  "distributed.semaphore.Semaphore.__exit__": "distributed.Semaphore.__exit__",
  "distributed.semaphore.Semaphore.__aenter__": "distributed.Semaphore.__aenter__",
  "distributed.semaphore.Semaphore.__aexit__": "distributed.Semaphore.__aexit__",
  "distributed.semaphore.Semaphore.__getstate__": "distributed.Semaphore.__getstate__",
  "distributed.semaphore.Semaphore.__setstate__": "distributed.Semaphore.__setstate__",
  "distributed.semaphore.Semaphore.close": "distributed.Semaphore.close",
  "distributed.semaphore.Semaphore.__del__": "distributed.Semaphore.__del__",
  "distributed.deploy.spec.SpecCluster.__init__": "distributed.SpecCluster.__init__",
  "distributed.deploy.spec.SpecCluster.__await__": "distributed.SpecCluster.__await__",
  "distributed.deploy.spec.SpecCluster.__aenter__": "distributed.SpecCluster.__aenter__",
  "distributed.deploy.spec.SpecCluster.__exit__": "distributed.SpecCluster.__exit__",
  "distributed.deploy.spec.SpecCluster.scale": "distributed.SpecCluster.scale",
  "distributed.deploy.spec.SpecCluster.new_worker_spec": "distributed.SpecCluster.new_worker_spec",
  "distributed.deploy.spec.SpecCluster.scale_down": "distributed.SpecCluster.scale_down",
  "distributed.deploy.spec.SpecCluster.adapt": "distributed.SpecCluster.adapt",
  "distributed.pubsub.Sub.__init__": "distributed.Sub.__init__",
  "distributed.pubsub.Sub.get": "distributed.Sub.get",
  "distributed.pubsub.Sub.__iter__": "distributed.Sub.__iter__",
  "distributed.pubsub.Sub.__aiter__": "distributed.Sub.__aiter__",
  "distributed.pubsub.Sub.__repr__": "distributed.Sub.__repr__",
  "distributed.variable.Variable.__init__": "distributed.Variable.__init__",
  "distributed.variable.Variable.set": "distributed.Variable.set",
  "distributed.variable.Variable.get": "distributed.Variable.get",
  "distributed.variable.Variable.delete": "distributed.Variable.delete",
  "distributed.variable.Variable.__getstate__": "distributed.Variable.__getstate__",
  "distributed.variable.Variable.__setstate__": "distributed.Variable.__setstate__",
  "distributed.worker.Worker.__init__": "distributed.Worker.__init__",
  "distributed.worker.Worker.__repr__": "distributed.Worker.__repr__",
  "distributed.worker.Worker.log_event": "distributed.Worker.log_event",
  "distributed.worker.Worker.get_metrics": "distributed.Worker.get_metrics",
  "distributed.worker.Worker.get_startup_information": "distributed.Worker.get_startup_information",
  "distributed.worker.Worker.identity": "distributed.Worker.identity",
  "distributed.worker.Worker.heartbeat": "distributed.Worker.heartbeat",
  "distributed.worker.Worker.handle_scheduler": "distributed.Worker.handle_scheduler",
  "distributed.worker.Worker.start_ipython": "distributed.Worker.start_ipython",
  "distributed.worker.Worker.upload_file": "distributed.Worker.upload_file",
  "distributed.worker.Worker.keys": "distributed.Worker.keys",
  "distributed.worker.Worker.gather": "distributed.Worker.gather",
  "distributed.worker.Worker.start": "distributed.Worker.start",
  "distributed.worker.Worker.close": "distributed.Worker.close",
  "distributed.worker.Worker.close_gracefully": "distributed.Worker.close_gracefully",
  "distributed.worker.Worker.terminate": "distributed.Worker.terminate",
  "distributed.worker.Worker.wait_until_closed": "distributed.Worker.wait_until_closed",
  "distributed.worker.Worker.send_to_worker": "distributed.Worker.send_to_worker",
  "distributed.worker.Worker.get_data": "distributed.Worker.get_data",
  "distributed.worker.Worker.update_data": "distributed.Worker.update_data",
  "distributed.worker.Worker.delete_data": "distributed.Worker.delete_data",
  "distributed.worker.Worker.set_resources": "distributed.Worker.set_resources",
  "distributed.worker.Worker.add_task": "distributed.Worker.add_task",
  "distributed.worker.Worker.transition": "distributed.Worker.transition",
  "distributed.worker.Worker.transition_waiting_flight": "distributed.Worker.transition_waiting_flight",
  "distributed.worker.Worker.transition_flight_waiting": "distributed.Worker.transition_flight_waiting",
  "distributed.worker.Worker.transition_flight_memory": "distributed.Worker.transition_flight_memory",
  "distributed.worker.Worker.transition_waiting_ready": "distributed.Worker.transition_waiting_ready",
  "distributed.worker.Worker.transition_waiting_done": "distributed.Worker.transition_waiting_done",
  "distributed.worker.Worker.transition_ready_executing": "distributed.Worker.transition_ready_executing",
  "distributed.worker.Worker.transition_ready_error": "distributed.Worker.transition_ready_error",
  "distributed.worker.Worker.transition_ready_memory": "distributed.Worker.transition_ready_memory",
  "distributed.worker.Worker.transition_ready_waiting": "distributed.Worker.transition_ready_waiting",
  "distributed.worker.Worker.transition_constrained_executing": "distributed.Worker.transition_constrained_executing",
  "distributed.worker.Worker.transition_executing_done": "distributed.Worker.transition_executing_done",
  "distributed.worker.Worker.transition_executing_long_running": "distributed.Worker.transition_executing_long_running",
  "distributed.worker.Worker.maybe_transition_long_running": "distributed.Worker.maybe_transition_long_running",
  "distributed.worker.Worker.stateof": "distributed.Worker.stateof",
  "distributed.worker.Worker.story": "distributed.Worker.story",
  "distributed.worker.Worker.ensure_communicating": "distributed.Worker.ensure_communicating",
  "distributed.worker.Worker.send_task_state_to_scheduler": "distributed.Worker.send_task_state_to_scheduler",
  "distributed.worker.Worker.put_key_in_memory": "distributed.Worker.put_key_in_memory",
  "distributed.worker.Worker.select_keys_for_gather": "distributed.Worker.select_keys_for_gather",
  "distributed.worker.Worker.gather_dep": "distributed.Worker.gather_dep",
  "distributed.worker.Worker.bad_dep": "distributed.Worker.bad_dep",
  "distributed.worker.Worker.handle_missing_dep": "distributed.Worker.handle_missing_dep",
  "distributed.worker.Worker.query_who_has": "distributed.Worker.query_who_has",
  "distributed.worker.Worker.update_who_has": "distributed.Worker.update_who_has",
  "distributed.worker.Worker.steal_request": "distributed.Worker.steal_request",
  "distributed.worker.Worker.release_key": "distributed.Worker.release_key",
  "distributed.worker.Worker.rescind_key": "distributed.Worker.rescind_key",
  "distributed.worker.Worker.executor_submit": "distributed.Worker.executor_submit",
  "distributed.worker.Worker.run": "distributed.Worker.run",
  "distributed.worker.Worker.run_coroutine": "distributed.Worker.run_coroutine",
  "distributed.worker.Worker.plugin_add": "distributed.Worker.plugin_add",
  "distributed.worker.Worker.actor_execute": "distributed.Worker.actor_execute",
  "distributed.worker.Worker.actor_attribute": "distributed.Worker.actor_attribute",
  "distributed.worker.Worker.meets_resource_constraints": "distributed.Worker.meets_resource_constraints",
  "distributed.worker.Worker.ensure_computing": "distributed.Worker.ensure_computing",
  "distributed.worker.Worker.execute": "distributed.Worker.execute",
  "distributed.worker.Worker.memory_monitor": "distributed.Worker.memory_monitor",
  "distributed.worker.Worker.cycle_profile": "distributed.Worker.cycle_profile",
  "distributed.worker.Worker.trigger_profile": "distributed.Worker.trigger_profile",
  "distributed.worker.Worker.get_profile": "distributed.Worker.get_profile",
  "distributed.worker.Worker.get_profile_metadata": "distributed.Worker.get_profile_metadata",
  "distributed.worker.Worker.get_call_stack": "distributed.Worker.get_call_stack",
  "distributed.worker.Worker.validate_task_memory": "distributed.Worker.validate_task_memory",
  "distributed.worker.Worker.validate_task_executing": "distributed.Worker.validate_task_executing",
  "distributed.worker.Worker.validate_task_ready": "distributed.Worker.validate_task_ready",
  "distributed.worker.Worker.validate_task_waiting": "distributed.Worker.validate_task_waiting",
  "distributed.worker.Worker.validate_task_flight": "distributed.Worker.validate_task_flight",
  "distributed.worker.Worker.validate_task": "distributed.Worker.validate_task",
  "distributed.worker.Worker.validate_state": "distributed.Worker.validate_state",
  "distributed.worker.Worker.get_current_task": "distributed.Worker.get_current_task",
  "distributed.diagnostics.plugin.WorkerPlugin.setup": "distributed.WorkerPlugin.setup",
  "distributed.diagnostics.plugin.WorkerPlugin.teardown": "distributed.WorkerPlugin.teardown",
  "distributed.diagnostics.plugin.WorkerPlugin.transition": "distributed.WorkerPlugin.transition",
  "distributed.diagnostics.plugin.WorkerPlugin.release_key": "distributed.WorkerPlugin.release_key",
  "distributed.diagnostics.plugin.WorkerPlugin.release_dep": "distributed.WorkerPlugin.release_dep",
  "distributed.utils_comm.WrappedKey": "distributed.actor.WrappedKey",
  "distributed.protocol.serialize.Serialize": "distributed.actor.to_serialize",
  "distributed.client.as_completed.__init__": "distributed.as_completed.__init__",
  "distributed.client.as_completed.update": "distributed.as_completed.update",
  "distributed.client.as_completed.add": "distributed.as_completed.add",
  "distributed.client.as_completed.is_empty": "distributed.as_completed.is_empty",
  "distributed.client.as_completed.has_ready": "distributed.as_completed.has_ready",
  "distributed.client.as_completed.count": "distributed.as_completed.count",
  "distributed.client.as_completed.__repr__": "distributed.as_completed.__repr__",
  "distributed.client.as_completed.__iter__": "distributed.as_completed.__iter__",
  "distributed.client.as_completed.__aiter__": "distributed.as_completed.__aiter__",
  "distributed.client.as_completed.__next__": "distributed.as_completed.__next__",
  "distributed.client.as_completed.__anext__": "distributed.as_completed.__anext__",
  "distributed.client.as_completed.next_batch": "distributed.as_completed.next_batch",
  "distributed.client.as_completed.batches": "distributed.as_completed.batches",
  "distributed.client.as_completed.clear": "distributed.as_completed.clear",
  "distributed.comm.core.CommClosedError": "distributed.batched.CommClosedError",
  "distributed.utils.All": "distributed.client.All",
  "distributed.utils.Any": "distributed.client.Any",
  "distributed.core.ConnectionPool": "distributed.client.ConnectionPool",
  "distributed.publish.Datasets": "distributed.client.Datasets",
  "distributed.utils.LoopRunner": "distributed.client.LoopRunner",
  "distributed.core.PooledRPCCall": "distributed.client.PooledRPCCall",
  "distributed.pubsub.PubSubClientExtension": "distributed.client.PubSubClientExtension",
  "distributed.diagnostics.plugin.UploadFile": "distributed.client.UploadFile",
  "distributed.core.clean_exception": "distributed.client.clean_exception",
  "distributed.protocol.pickle.dumps": "distributed.client.dumps",
  "distributed.utils.format_dashboard_link": "distributed.client.format_dashboard_link",
  "distributed.utils_comm.gather_from_workers": "distributed.client.gather_from_workers",
  "distributed.utils.has_keyword": "distributed.client.has_keyword",
  "distributed.protocol.highlevelgraph.highlevelgraph_pack": "distributed.client.highlevelgraph_pack",
  "distributed.utils.key_split": "distributed.client.key_split",
  "distributed.protocol.pickle.loads": "distributed.client.loads",
  "distributed.utils.log_errors": "distributed.client.log_errors",
  "distributed.utils_comm.pack_data": "distributed.client.pack_data",
  "distributed.utils_comm.retry_operation": "distributed.client.retry_operation",
  "distributed.utils_comm.scatter_to_workers": "distributed.client.scatter_to_workers",
  "distributed.utils.shutting_down": "distributed.client.shutting_down",
  "distributed.utils_comm.unpack_remotedata": "distributed.client.unpack_remotedata",
  "distributed.comm.core.Comm": "distributed.comm.Comm",
  "distributed.comm.addressing.get_address_host": "distributed.comm.get_address_host",
  "distributed.comm.addressing.get_address_host_port": "distributed.comm.get_address_host_port",
  "distributed.comm.addressing.get_local_address_for": "distributed.comm.get_local_address_for",
  "distributed.comm.utils.get_tcp_server_address": "distributed.comm.get_tcp_server_address",
  "distributed.comm.core.listen": "distributed.comm.listen",
  "distributed.comm.addressing.normalize_address": "distributed.comm.normalize_address",
  "distributed.comm.addressing.parse_address": "distributed.comm.parse_address",
  "distributed.comm.addressing.parse_host_port": "distributed.comm.parse_host_port",
  "distributed.comm.addressing.resolve_address": "distributed.comm.resolve_address",
  "distributed.comm.addressing.unparse_address": "distributed.comm.unparse_address",
  "distributed.comm.addressing.unparse_host_port": "distributed.comm.unparse_host_port",
  "distributed.system_monitor.SystemMonitor": "distributed.core.SystemMonitor",
  "distributed.utils.get_traceback": "distributed.core.get_traceback",
  "distributed.utils.is_coroutine_function": "distributed.core.is_coroutine_function",
  "distributed.utils.truncate_exception": "distributed.core.truncate_exception",
  "distributed.deploy.cluster.Cluster": "distributed.deploy.Cluster",
  "distributed.deploy.spec.ProcessInterface": "distributed.deploy.ProcessInterface",
  "distributed.diagnostics.graph_layout.GraphLayout": "distributed.diagnostics.GraphLayout",
  "distributed.client.get_task_metadata.__init__": "distributed.get_task_metadata.__init__",
  "distributed.client.get_task_metadata.__aenter__": "distributed.get_task_metadata.__aenter__",
  "distributed.client.get_task_metadata.__aexit__": "distributed.get_task_metadata.__aexit__",
  "distributed.client.get_task_metadata.__enter__": "distributed.get_task_metadata.__enter__",
  "distributed.client.get_task_metadata.__exit__": "distributed.get_task_metadata.__exit__",
  "distributed.client.get_task_stream.__init__": "distributed.get_task_stream.__init__",
  "distributed.client.get_task_stream.__enter__": "distributed.get_task_stream.__enter__",
  "distributed.client.get_task_stream.__exit__": "distributed.get_task_stream.__exit__",
  "distributed.client.get_task_stream.__aenter__": "distributed.get_task_stream.__aenter__",
  "distributed.client.get_task_stream.__aexit__": "distributed.get_task_stream.__aexit__",
  "distributed.http.utils.get_handlers": "distributed.http.get_handlers",
  "distributed.process.AsyncProcess": "distributed.nanny.AsyncProcess",
  "distributed.node.ServerNode": "distributed.nanny.ServerNode",
  "distributed.comm.addressing.address_from_user_args": "distributed.nanny.address_from_user_args",
  "distributed.proctitle.enable_proctitle_on_children": "distributed.nanny.enable_proctitle_on_children",
  "distributed.utils.get_ip": "distributed.nanny.get_ip",
  "distributed.utils.json_load_robust": "distributed.nanny.json_load_robust",
  "distributed.worker.parse_memory_limit": "distributed.nanny.parse_memory_limit",
  "distributed.utils.parse_ports": "distributed.nanny.parse_ports",
  "distributed.worker.run": "distributed.nanny.run",
  "distributed.utils.silence_logging": "distributed.nanny.silence_logging",
  "distributed.utils.DequeHandler": "distributed.node.DequeHandler",
  "distributed.http.routing.RoutingApplication": "distributed.node.RoutingApplication",
  "distributed.utils.clean_dashboard_address": "distributed.node.clean_dashboard_address",
  "distributed.versions.get_versions": "distributed.node.get_versions",
  "distributed.client.performance_report.__init__": "distributed.performance_report.__init__",
  "distributed.client.performance_report.__aenter__": "distributed.performance_report.__aenter__",
  "distributed.client.performance_report.__aexit__": "distributed.performance_report.__aexit__",
  "distributed.client.performance_report.__enter__": "distributed.performance_report.__enter__",
  "distributed.client.performance_report.__exit__": "distributed.performance_report.__exit__",
  "distributed.utils.import_file": "distributed.preloading.import_file",
  "distributed.protocol.serialize.Serialized": "distributed.protocol.Serialized",
  "distributed.protocol.compression.decompress": "distributed.protocol.decompress",
  "distributed.protocol.serialize.deserialize": "distributed.protocol.deserialize",
  "distributed.protocol.serialize.deserialize_bytes": "distributed.protocol.deserialize_bytes",
  "distributed.protocol.core.dumps": "distributed.protocol.dumps",
  "distributed.protocol.core.loads": "distributed.protocol.loads",
  "distributed.protocol.compression.maybe_compress": "distributed.protocol.maybe_compress",
  "distributed.protocol.serialize.nested_deserialize": "distributed.protocol.nested_deserialize",
  "distributed.protocol.serialize.register_generic": "distributed.protocol.register_generic",
  "distributed.protocol.serialize.register_serialization": "distributed.protocol.register_serialization",
  "distributed.protocol.serialize.register_serialization_family": "distributed.protocol.register_serialization_family",
  "distributed.protocol.serialize.serialize": "distributed.protocol.serialize",
  "distributed.protocol.serialize.serialize_bytelist": "distributed.protocol.serialize_bytelist",
  "distributed.protocol.serialize.serialize_bytes": "distributed.protocol.serialize_bytes",
  "distributed.core.rpc.__init__": "distributed.rpc.__init__",
  "distributed.core.rpc.live_comm": "distributed.rpc.live_comm",
  "distributed.core.rpc.close_comms": "distributed.rpc.close_comms",
  "distributed.core.rpc.__getattr__": "distributed.rpc.__getattr__",
  "distributed.core.rpc.close_rpc": "distributed.rpc.close_rpc",
  "distributed.core.rpc.__enter__": "distributed.rpc.__enter__",
  "distributed.core.rpc.__exit__": "distributed.rpc.__exit__",
  "distributed.core.rpc.__aenter__": "distributed.rpc.__aenter__",
  "distributed.core.rpc.__aexit__": "distributed.rpc.__aexit__",
  "distributed.core.rpc.__del__": "distributed.rpc.__del__",
  "distributed.core.rpc.__repr__": "distributed.rpc.__repr__",
  "distributed.semaphore.SemaphoreExtension": "distributed.scheduler.SemaphoreExtension",
  "distributed.variable.VariableExtension": "distributed.scheduler.VariableExtension",
  "distributed.stealing.WorkStealing": "distributed.scheduler.WorkStealing",
  "distributed.comm.addressing.addresses_from_user_args": "distributed.scheduler.addresses_from_user_args",
  "distributed.utils_perf.disable_gc_diagnosis": "distributed.scheduler.disable_gc_diagnosis",
  "distributed.utils_perf.enable_gc_diagnosis": "distributed.scheduler.enable_gc_diagnosis",
  "distributed.utils.get_fileno_limit": "distributed.scheduler.get_fileno_limit",
  "distributed.protocol.highlevelgraph.highlevelgraph_unpack": "distributed.scheduler.highlevelgraph_unpack",
  "distributed.utils.key_split_group": "distributed.scheduler.key_split_group",
  "distributed.utils.tmpfile": "distributed.scheduler.tmpfile",
  "distributed.utils.validate_key": "distributed.scheduler.validate_key",
  "distributed.utils_comm.WrappedKey.__init__": "distributed.actor.WrappedKey.__init__",
  "distributed.utils_comm.WrappedKey.__repr__": "distributed.actor.WrappedKey.__repr__",
  "distributed.protocol.serialize.Serialize.__init__": "distributed.actor.to_serialize.__init__",
  "distributed.protocol.serialize.Serialize.__repr__": "distributed.actor.to_serialize.__repr__",
  "distributed.protocol.serialize.Serialize.__eq__": "distributed.actor.to_serialize.__eq__",
  "distributed.protocol.serialize.Serialize.__ne__": "distributed.actor.to_serialize.__ne__",
  "distributed.protocol.serialize.Serialize.__hash__": "distributed.actor.to_serialize.__hash__",
  "distributed.core.ConnectionPool.__init__": "distributed.client.ConnectionPool.__init__",
  "distributed.core.ConnectionPool.__repr__": "distributed.client.ConnectionPool.__repr__",
  "distributed.core.ConnectionPool.__call__": "distributed.client.ConnectionPool.__call__",
  "distributed.core.ConnectionPool.__await__": "distributed.client.ConnectionPool.__await__",
  "distributed.core.ConnectionPool.start": "distributed.client.ConnectionPool.start",
  "distributed.core.ConnectionPool.connect": "distributed.client.ConnectionPool.connect",
  "distributed.core.ConnectionPool.reuse": "distributed.client.ConnectionPool.reuse",
  "distributed.core.ConnectionPool.collect": "distributed.client.ConnectionPool.collect",
  "distributed.core.ConnectionPool.remove": "distributed.client.ConnectionPool.remove",
  "distributed.core.ConnectionPool.close": "distributed.client.ConnectionPool.close",
  "distributed.publish.Datasets.__init__": "distributed.client.Datasets.__init__",
  "distributed.publish.Datasets.__getitem__": "distributed.client.Datasets.__getitem__",
  "distributed.publish.Datasets.__setitem__": "distributed.client.Datasets.__setitem__",
  "distributed.publish.Datasets.__delitem__": "distributed.client.Datasets.__delitem__",
  "distributed.publish.Datasets.__iter__": "distributed.client.Datasets.__iter__",
  "distributed.publish.Datasets.__aiter__": "distributed.client.Datasets.__aiter__",
  "distributed.publish.Datasets.__len__": "distributed.client.Datasets.__len__",
  "distributed.utils.LoopRunner.__init__": "distributed.client.LoopRunner.__init__",
  "distributed.utils.LoopRunner.start": "distributed.client.LoopRunner.start",
  "distributed.utils.LoopRunner.stop": "distributed.client.LoopRunner.stop",
  "distributed.utils.LoopRunner.is_started": "distributed.client.LoopRunner.is_started",
  "distributed.utils.LoopRunner.run_sync": "distributed.client.LoopRunner.run_sync",
  "distributed.core.PooledRPCCall.__init__": "distributed.client.PooledRPCCall.__init__",
  "distributed.core.PooledRPCCall.__getattr__": "distributed.client.PooledRPCCall.__getattr__",
  "distributed.core.PooledRPCCall.close_rpc": "distributed.client.PooledRPCCall.close_rpc",
  "distributed.core.PooledRPCCall.__enter__": "distributed.client.PooledRPCCall.__enter__",
  "distributed.core.PooledRPCCall.__exit__": "distributed.client.PooledRPCCall.__exit__",
  "distributed.core.PooledRPCCall.__repr__": "distributed.client.PooledRPCCall.__repr__",
  "distributed.pubsub.PubSubClientExtension.__init__": "distributed.client.PubSubClientExtension.__init__",
  "distributed.pubsub.PubSubClientExtension.handle_message": "distributed.client.PubSubClientExtension.handle_message",
  "distributed.pubsub.PubSubClientExtension.trigger_cleanup": "distributed.client.PubSubClientExtension.trigger_cleanup",
  "distributed.pubsub.PubSubClientExtension.cleanup": "distributed.client.PubSubClientExtension.cleanup",
  "distributed.diagnostics.plugin.UploadFile.__init__": "distributed.client.UploadFile.__init__",
  "distributed.diagnostics.plugin.UploadFile.setup": "distributed.client.UploadFile.setup",
  "distributed.comm.core.Comm.__init__": "distributed.comm.Comm.__init__",
  "distributed.comm.core.Comm.read": "distributed.comm.Comm.read",
  "distributed.comm.core.Comm.write": "distributed.comm.Comm.write",
  "distributed.comm.core.Comm.close": "distributed.comm.Comm.close",
  "distributed.comm.core.Comm.abort": "distributed.comm.Comm.abort",
  "distributed.comm.core.Comm.closed": "distributed.comm.Comm.closed",
  "distributed.comm.core.Comm.__repr__": "distributed.comm.Comm.__repr__",
  "distributed.protocol.compression.get_default_compression": "distributed.comm.core.get_default_compression",
  "distributed.comm.registry.Backend": "distributed.comm.inproc.Backend",
  "distributed.comm.utils.ensure_concrete_host": "distributed.comm.tcp.ensure_concrete_host",
  "distributed.comm.utils.from_frames": "distributed.comm.tcp.from_frames",
  "distributed.comm.utils.to_frames": "distributed.comm.tcp.to_frames",
  "distributed.system_monitor.SystemMonitor.__init__": "distributed.core.SystemMonitor.__init__",
  "distributed.system_monitor.SystemMonitor.recent": "distributed.core.SystemMonitor.recent",
  "distributed.system_monitor.SystemMonitor.update": "distributed.core.SystemMonitor.update",
  "distributed.system_monitor.SystemMonitor.__repr__": "distributed.core.SystemMonitor.__repr__",
  "distributed.system_monitor.SystemMonitor.range_query": "distributed.core.SystemMonitor.range_query",
  "distributed.deploy.cluster.Cluster.__init__": "distributed.deploy.Cluster.__init__",
  "distributed.deploy.cluster.Cluster.close": "distributed.deploy.Cluster.close",
  "distributed.deploy.cluster.Cluster.__del__": "distributed.deploy.Cluster.__del__",
  "distributed.deploy.cluster.Cluster.adapt": "distributed.deploy.Cluster.adapt",
  "distributed.deploy.cluster.Cluster.scale": "distributed.deploy.Cluster.scale",
  "distributed.deploy.cluster.Cluster.sync": "distributed.deploy.Cluster.sync",
  "distributed.deploy.cluster.Cluster.get_logs": "distributed.deploy.Cluster.get_logs",
  "distributed.deploy.cluster.Cluster.logs": "distributed.deploy.Cluster.logs",
  "distributed.deploy.cluster.Cluster.__enter__": "distributed.deploy.Cluster.__enter__",
  "distributed.deploy.cluster.Cluster.__exit__": "distributed.deploy.Cluster.__exit__",
  "distributed.deploy.cluster.Cluster.__aenter__": "distributed.deploy.Cluster.__aenter__",
  "distributed.deploy.cluster.Cluster.__aexit__": "distributed.deploy.Cluster.__aexit__",
  "distributed.deploy.cluster.Cluster.__repr__": "distributed.deploy.Cluster.__repr__",
  "distributed.deploy.cluster.Cluster.__eq__": "distributed.deploy.Cluster.__eq__",
  "distributed.deploy.cluster.Cluster.__hash__": "distributed.deploy.Cluster.__hash__",
  "distributed.deploy.spec.ProcessInterface.__init__": "distributed.deploy.ProcessInterface.__init__",
  "distributed.deploy.spec.ProcessInterface.__await__": "distributed.deploy.ProcessInterface.__await__",
  "distributed.deploy.spec.ProcessInterface.start": "distributed.deploy.ProcessInterface.start",
  "distributed.deploy.spec.ProcessInterface.close": "distributed.deploy.ProcessInterface.close",
  "distributed.deploy.spec.ProcessInterface.finished": "distributed.deploy.ProcessInterface.finished",
  "distributed.deploy.spec.ProcessInterface.__repr__": "distributed.deploy.ProcessInterface.__repr__",
  "distributed.deploy.spec.ProcessInterface.__aenter__": "distributed.deploy.ProcessInterface.__aenter__",
  "distributed.deploy.spec.ProcessInterface.__aexit__": "distributed.deploy.ProcessInterface.__aexit__",
  "distributed.deploy.adaptive_core.AdaptiveCore": "distributed.deploy.adaptive.AdaptiveCore",
  "distributed.deploy.utils.nprocesses_nthreads": "distributed.deploy.local.nprocesses_nthreads",
  "distributed.diagnostics.graph_layout.GraphLayout.__init__": "distributed.diagnostics.GraphLayout.__init__",
  "distributed.diagnostics.graph_layout.GraphLayout.update_graph": "distributed.diagnostics.GraphLayout.update_graph",
  "distributed.diagnostics.graph_layout.GraphLayout.transition": "distributed.diagnostics.GraphLayout.transition",
  "distributed.diagnostics.graph_layout.GraphLayout.reset_index": "distributed.diagnostics.GraphLayout.reset_index",
  "distributed.process.AsyncProcess.__init__": "distributed.nanny.AsyncProcess.__init__",
  "distributed.process.AsyncProcess.__repr__": "distributed.nanny.AsyncProcess.__repr__",
  "distributed.process.AsyncProcess.start": "distributed.nanny.AsyncProcess.start",
  "distributed.process.AsyncProcess.terminate": "distributed.nanny.AsyncProcess.terminate",
  "distributed.process.AsyncProcess.join": "distributed.nanny.AsyncProcess.join",
  "distributed.process.AsyncProcess.close": "distributed.nanny.AsyncProcess.close",
  "distributed.process.AsyncProcess.set_exit_callback": "distributed.nanny.AsyncProcess.set_exit_callback",
  "distributed.process.AsyncProcess.is_alive": "distributed.nanny.AsyncProcess.is_alive",
  "distributed.node.ServerNode.versions": "distributed.nanny.ServerNode.versions",
  "distributed.node.ServerNode.start_services": "distributed.nanny.ServerNode.start_services",
  "distributed.node.ServerNode.stop_services": "distributed.nanny.ServerNode.stop_services",
  "distributed.node.ServerNode.get_logs": "distributed.nanny.ServerNode.get_logs",
  "distributed.node.ServerNode.start_http_server": "distributed.nanny.ServerNode.start_http_server",
  "distributed.utils.DequeHandler.__init__": "distributed.node.DequeHandler.__init__",
  "distributed.utils.DequeHandler.emit": "distributed.node.DequeHandler.emit",
  "distributed.utils.DequeHandler.clear": "distributed.node.DequeHandler.clear",
  "distributed.http.routing.RoutingApplication.__init__": "distributed.node.RoutingApplication.__init__",
  "distributed.http.routing.RoutingApplication.find_handler": "distributed.node.RoutingApplication.find_handler",
  "distributed.http.routing.RoutingApplication.add_application": "distributed.node.RoutingApplication.add_application",
  "distributed.protocol.serialize.Serialized.__init__": "distributed.protocol.Serialized.__init__",
  "distributed.protocol.serialize.Serialized.__eq__": "distributed.protocol.Serialized.__eq__",
  "distributed.protocol.serialize.Serialized.__ne__": "distributed.protocol.Serialized.__ne__",
  "distributed.protocol.serialize.extract_serialize": "distributed.protocol.core.extract_serialize",
  "distributed.protocol.utils.frame_split_size": "distributed.protocol.core.frame_split_size",
  "distributed.protocol.utils.merge_frames": "distributed.protocol.core.merge_frames",
  "distributed.protocol.serialize.msgpack_decode_default": "distributed.protocol.core.msgpack_decode_default",
  "distributed.protocol.serialize.msgpack_encode_default": "distributed.protocol.core.msgpack_encode_default",
  "distributed.protocol.serialize.ObjectDictSerializer": "distributed.protocol.cuda.ObjectDictSerializer",
  "distributed.protocol.serialize.import_allowed_module": "distributed.protocol.highlevelgraph.import_allowed_module",
  "distributed.semaphore.SemaphoreExtension.__init__": "distributed.scheduler.SemaphoreExtension.__init__",
  "distributed.semaphore.SemaphoreExtension.get_value": "distributed.scheduler.SemaphoreExtension.get_value",
  "distributed.semaphore.SemaphoreExtension.create": "distributed.scheduler.SemaphoreExtension.create",
  "distributed.semaphore.SemaphoreExtension.refresh_leases": "distributed.scheduler.SemaphoreExtension.refresh_leases",
  "distributed.semaphore.SemaphoreExtension.acquire": "distributed.scheduler.SemaphoreExtension.acquire",
  "distributed.semaphore.SemaphoreExtension.release": "distributed.scheduler.SemaphoreExtension.release",
  "distributed.semaphore.SemaphoreExtension.close": "distributed.scheduler.SemaphoreExtension.close",
  "distributed.variable.VariableExtension.__init__": "distributed.scheduler.VariableExtension.__init__",
  "distributed.variable.VariableExtension.set": "distributed.scheduler.VariableExtension.set",
  "distributed.variable.VariableExtension.release": "distributed.scheduler.VariableExtension.release",
  "distributed.variable.VariableExtension.future_release": "distributed.scheduler.VariableExtension.future_release",
  "distributed.variable.VariableExtension.get": "distributed.scheduler.VariableExtension.get",
  "distributed.variable.VariableExtension.delete": "distributed.scheduler.VariableExtension.delete",
  "distributed.stealing.WorkStealing.__init__": "distributed.scheduler.WorkStealing.__init__",
  "distributed.stealing.WorkStealing.log": "distributed.scheduler.WorkStealing.log",
  "distributed.stealing.WorkStealing.add_worker": "distributed.scheduler.WorkStealing.add_worker",
  "distributed.stealing.WorkStealing.remove_worker": "distributed.scheduler.WorkStealing.remove_worker",
  "distributed.stealing.WorkStealing.teardown": "distributed.scheduler.WorkStealing.teardown",
  "distributed.stealing.WorkStealing.transition": "distributed.scheduler.WorkStealing.transition",
  "distributed.stealing.WorkStealing.put_key_in_stealable": "distributed.scheduler.WorkStealing.put_key_in_stealable",
  "distributed.stealing.WorkStealing.remove_key_from_stealable": "distributed.scheduler.WorkStealing.remove_key_from_stealable",
  "distributed.stealing.WorkStealing.steal_time_ratio": "distributed.scheduler.WorkStealing.steal_time_ratio",
  "distributed.stealing.WorkStealing.move_task_request": "distributed.scheduler.WorkStealing.move_task_request",
  "distributed.stealing.WorkStealing.move_task_confirm": "distributed.scheduler.WorkStealing.move_task_confirm",
  "distributed.stealing.WorkStealing.balance": "distributed.scheduler.WorkStealing.balance",
  "distributed.stealing.WorkStealing.restart": "distributed.scheduler.WorkStealing.restart",
  "distributed.stealing.WorkStealing.story": "distributed.scheduler.WorkStealing.story",
  "distributed.comm.registry.Backend.get_connector": "distributed.comm.inproc.Backend.get_connector",
  "distributed.comm.registry.Backend.get_listener": "distributed.comm.inproc.Backend.get_listener",
  "distributed.comm.registry.Backend.get_address_host": "distributed.comm.inproc.Backend.get_address_host",
  "distributed.comm.registry.Backend.resolve_address": "distributed.comm.inproc.Backend.resolve_address",
  "distributed.comm.registry.Backend.get_address_host_port": "distributed.comm.inproc.Backend.get_address_host_port",
  "distributed.comm.registry.Backend.get_local_address_for": "distributed.comm.inproc.Backend.get_local_address_for",
  "distributed.deploy.adaptive_core.AdaptiveCore.__init__": "distributed.deploy.adaptive.AdaptiveCore.__init__",
  "distributed.deploy.adaptive_core.AdaptiveCore.stop": "distributed.deploy.adaptive.AdaptiveCore.stop",
  "distributed.deploy.adaptive_core.AdaptiveCore.target": "distributed.deploy.adaptive.AdaptiveCore.target",
  "distributed.deploy.adaptive_core.AdaptiveCore.workers_to_close": "distributed.deploy.adaptive.AdaptiveCore.workers_to_close",
  "distributed.deploy.adaptive_core.AdaptiveCore.safe_target": "distributed.deploy.adaptive.AdaptiveCore.safe_target",
  "distributed.deploy.adaptive_core.AdaptiveCore.recommendations": "distributed.deploy.adaptive.AdaptiveCore.recommendations",
  "distributed.deploy.adaptive_core.AdaptiveCore.adapt": "distributed.deploy.adaptive.AdaptiveCore.adapt",
  "distributed.protocol.serialize.ObjectDictSerializer.__init__": "distributed.protocol.cuda.ObjectDictSerializer.__init__",
  "distributed.protocol.serialize.ObjectDictSerializer.serialize": "distributed.protocol.cuda.ObjectDictSerializer.serialize",
  "distributed.protocol.serialize.ObjectDictSerializer.deserialize": "distributed.protocol.cuda.ObjectDictSerializer.deserialize"
}