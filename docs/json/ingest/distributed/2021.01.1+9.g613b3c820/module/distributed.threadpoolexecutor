{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Modified ThreadPoolExecutor to support threads leaving the thread pool"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This includes a global "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "secede"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method that a submitted function can call to have its thread leave the ThreadPoolExecutor's thread pool.  This allows the thread pool to allocate another thread if necessary and so is useful when a function realises that it is going to be a long-running job that doesn't want to take up space.  When the function finishes its thread will terminate gracefully."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This code copies and modifies two functions from the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "concurrent.futures.thread"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " module, notably "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_",
                    "worker"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and ThreadPoolExecutor._adjust_thread_count` to allow for checking against a global "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "threading.local"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " state.  These functions are subject to the following license, which is included as a comment at the end of this file:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "    https://docs.python.org/3/license.html"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "... and are under copyright by the Python Software Foundation"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "   Copyright 2001-2016 Python Software Foundation; All Rights Reserved"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/threadpoolexecutor.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "aliases": [
    "distributed.threadpoolexecutor"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.01.1+9.g613b3c820",
  "signature": null,
  "references": null,
  "logo": "logo.png",
  "qa": "distributed.threadpoolexecutor",
  "arbitrary": [
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Modified ThreadPoolExecutor to support threads leaving the thread pool "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This includes a global "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "secede"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method that a submitted function can call to have its thread leave the ThreadPoolExecutor' s thread pool. This allows the thread pool to allocate another thread if necessary and so is useful when a function realises that it is going to be a long - running job that doesn' t want to take up space. When the function finishes its thread will terminate gracefully. "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This code copies and modifies two functions from the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "concurrent.futures.thread"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " module, notably "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_worker"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and ThreadPoolExecutor._adjust_thread_count` to allow for checking against a global "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "threading.local"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " state. These functions are subject to the following license, which is included as a comment at the end of this file : "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "https://docs.python.org/3/license.html"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "... and are under copyright by the Python Software Foundation "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "Copyright 2001-2016 Python Software Foundation; All Rights Reserved"
            ]
          }
        }
      ],
      "title": null
    }
  ]
}