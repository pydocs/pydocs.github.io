{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Superclass for cluster objects"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This class contains common functionality for Dask Cluster manager classes."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "To implement this class, you must provide"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "1.  A "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "scheduler",
                    "_",
                    "comm"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " attribute, which is a connection to the scheduler"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "    following the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "distributed.core.rpc"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " API."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "2.  Implement "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "scale"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", which takes an integer and scales the cluster to"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "    that many workers, or else set "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "_",
                    "supports",
                    "_",
                    "scaling"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to False"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For that, you should get the following:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "1.  A standard "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "_",
                    "_",
                    "repr",
                    "_",
                    "_"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " 2.  A live IPython widget 3.  Adaptive scaling 4.  Integration with dask-labextension 5.  A "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "scheduler",
                    "_",
                    "info"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " attribute which contains an up-to-date copy of"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "    "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "Scheduler.identity()"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", which is used for much of the above"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "6.  Methods to gather logs"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/deploy/cluster.py",
  "item_line": 30,
  "item_type": "<class 'type'>",
  "aliases": [
    "distributed.deploy.Cluster"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.01.1+9.g613b3c820",
  "signature": "Cluster(asynchronous, quiet=False, name=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "distributed.deploy.cluster.Cluster",
  "arbitrary": []
}