{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Register (de)serialize to traverse through __dict__"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Normally when registering new classes for Dask's custom serialization you need to manage headers and frames, which can be tedious.  If all you want to do is traverse through your object and apply serialize to all of your object's attributes then this function may provide an easier path."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This registers a class for the custom Dask serialization family.  It serializes it by traversing through its __dict__ of attributes and applying "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "serialize"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "deserialize"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " recursively.  It collects a set of frames and keeps small attributes in the header.  Deserialization reverses this process."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This is a good idea if the following hold:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "1.  Most of the bytes of your object are composed of data types that Dask's",
                      "_number": 13,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    custom serializtion already handles well, like Numpy arrays.",
                      "_number": 14,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "1.  Most of the bytes of your object are composed of data types that Dask's"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "custom serializtion already handles well, like Numpy arrays."
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "2.  Your object doesn't require any special constructor logic, other than",
                      "_number": 15,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    object.__new__(cls)",
                      "_number": 16,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "2.  Your object doesn't require any special constructor logic, other than"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "object.__new__(cls)"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "distributed",
      "version": "2021.01.1+9.g613b3c820",
      "kind": "module",
      "path": "distributed.protocol"
    },
    {
      "module": "distributed",
      "version": "2021.01.1+9.g613b3c820",
      "kind": "module",
      "path": "distributed.protocol.serialize.register_generic"
    },
    {
      "module": "distributed",
      "version": "2021.01.1+9.g613b3c820",
      "kind": "module",
      "path": "distributed"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples",
    "See Also"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/protocol/serialize.py",
  "item_line": 778,
  "item_type": "<class 'function'>",
  "aliases": [
    "distributed.protocol.register_generic"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "import"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "str",
                "data": "sklearn"
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "str",
                "data": "base"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "from"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "distributed",
                  "reference": {
                    "module": "distributed",
                    "version": "2021.01.1+9.g613b3c820",
                    "kind": "module",
                    "path": "distributed"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "protocol",
                  "reference": {
                    "module": "distributed",
                    "version": "2021.01.1+9.g613b3c820",
                    "kind": "module",
                    "path": "distributed.protocol"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "import"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "register_generic",
                  "reference": {
                    "module": "distributed",
                    "version": "2021.01.1+9.g613b3c820",
                    "kind": "module",
                    "path": "distributed.protocol.serialize.register_generic"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "register_generic",
                  "reference": {
                    "module": "distributed",
                    "version": "2021.01.1+9.g613b3c820",
                    "kind": "module",
                    "path": "distributed.protocol.serialize.register_generic"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "sklearn"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "base"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "BaseEstimator"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "",
          "ce_status": "compiled"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "dask_deserialize",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "dask_serialize",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "2021.01.1+9.g613b3c820",
  "signature": "register_generic(cls, serializer_name='dask', serialize_func=<dask.utils.Dispatch object at 0x13ef4f6a0>, deserialize_func=<dask.utils.Dispatch object at 0x13ef4f7f0>)",
  "references": null,
  "logo": "logo.png",
  "qa": "distributed.protocol.serialize.register_generic",
  "arbitrary": []
}