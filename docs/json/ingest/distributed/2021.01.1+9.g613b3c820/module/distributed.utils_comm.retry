{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return the result of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "await",
                    " ",
                    "coro()"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", re-trying in case of exceptions"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The delay between attempts is "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "delay",
                    "_",
                    "min",
                    " ",
                    "*",
                    " ",
                    "(2",
                    " ",
                    "*",
                    "*",
                    " ",
                    "i",
                    " ",
                    "-",
                    " ",
                    "1)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " where "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "i"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " enumerates the attempt that just failed (starting at 0), but never larger than "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "delay",
                    "_",
                    "max"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". This yields no delay between the first and second attempt, then "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "delay",
                    "_",
                    "min"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "3",
                    " ",
                    "*",
                    " ",
                    "delay",
                    "_",
                    "min"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", etc. (The reason to re-try with no delay is that in most cases this is sufficient and will thus recover faster from a communication failure)."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "coro",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The coroutine function to call and await"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "count",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The maximum number of re-tries before giving up. 0 means no re-try; must be >= 0."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "delay_min",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The base factor for the delay (in seconds); this is the first non-zero delay between re-tries."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "delay_max",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The maximum delay (in seconds) between consecutive re-tries (without jitter)"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "jitter_fraction",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The maximum jitter to add to the delay, as fraction of the total delay. No jitter is added if this value is <= 0. Using a non-zero value here avoids \"herd effects\" of many operations re-tried at the same time"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "retry_on_exceptions",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A tuple of exception classes to retry. Other exceptions are not caught and re-tried, but propagate immediately."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "operation",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A human-readable description of the operation attempted; used only for logging failures"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "Any",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whatever "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "await",
                          " "
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "coro()` returned"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/utils_comm.py",
  "item_line": 314,
  "item_type": "<class 'function'>",
  "aliases": [
    "distributed.utils_comm.retry"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.01.1+9.g613b3c820",
  "signature": "retry(coro, count, delay_min, delay_max, jitter_fraction=0.1, retry_on_exceptions=(<class 'OSError'>, <class 'OSError'>), operation=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "distributed.utils_comm.retry",
  "arbitrary": []
}