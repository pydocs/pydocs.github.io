{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Superclass for endpoints in a distributed cluster, such as Worker and Scheduler objects."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Strong",
                "data": {
                  "content": {
                    "value": "Handlers"
                  }
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Servers define operations with a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "handlers"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " dict mapping operation names to functions.  The first argument of a handler function will be a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "Comm"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for the communication established with the client.  Other arguments will receive inputs from the keys of the incoming message which will always be a dictionary."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> def pingpong(comm):\n...     return b'pong'"
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> def add(comm, x, y):\n...     return x + y"
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> handlers = {'ping': pingpong, 'add': add}\n>>> server = Server(handlers)  # doctest: +SKIP\n>>> server.listen('tcp://0.0.0.0:8000')  # doctest: +SKIP"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Strong",
                "data": {
                  "content": {
                    "value": "Message Format"
                  }
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The server expects messages to be dictionaries with a special key, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "'op'",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that corresponds to the name of the operation, and other key-value pairs as required by the function."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "So in the example above the following would be good messages."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{'op': 'ping'}"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{'op': 'add', 'x': 10, 'y': 20}"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Dask Distributed Server"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/distributed/core.py",
  "item_line": 93,
  "item_type": "<class 'type'>",
  "aliases": [
    "distributed.core.Server"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.10.0",
  "signature": "Server(handlers, blocked_handlers=None, stream_handlers=None, connection_limit=512, deserialize=True, serializers=None, deserializers=None, connection_args=None, timeout=None, io_loop=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "distributed.core.Server",
  "arbitrary": []
}