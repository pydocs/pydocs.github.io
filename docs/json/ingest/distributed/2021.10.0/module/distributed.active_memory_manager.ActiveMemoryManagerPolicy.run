{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "\"replicate\", <TaskState>, None"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "\"replicate\", <TaskState>, {subset of potential workers to replicate to}"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "\"drop\", <TaskState>, None"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "\"drop\", <TaskState>, {subset of potential workers to drop from}"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Each element yielded indicates the desire to create or destroy a single replica of a key. If a subset of workers is not provided, it defaults to all workers on the cluster. Either the ActiveMemoryManager or the Worker may later decide to disregard the request, e.g. because it would delete the last copy of a key or because the key is currently needed on that worker."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "You may optionally retrieve which worker it was decided the key will be replicated to or dropped from, as follows:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "directive_name": "code-block",
            "args0": [
              "python"
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "choice = ( yield \" replicate \" , ts, None) "
                  }
                }
              ],
              "inner": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "choice"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is either a WorkerState or None; the latter is returned if the ActiveMemoryManager chose to disregard the request."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The current pending (accepted) commands can be inspected on "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "self.manager.pending"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "; this includes the commands previously yielded by this same method."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The current memory usage on each worker, "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "downstream of all pending commands"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", can be inspected on "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "self.manager.workers_memory"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This method is invoked by the ActiveMemoryManager every few seconds, or whenever the user invokes scheduler.amm_run_once(). It is an iterator that must emit any of the following:"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/distributed/active_memory_manager.py",
  "item_line": 282,
  "item_type": "<class 'function'>",
  "aliases": [
    "distributed.active_memory_manager.ActiveMemoryManagerPolicy.run"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.10.0",
  "signature": "run(self) -> 'Generator[tuple[str, TaskState, set[WorkerState] | None], WorkerState | None, None]'",
  "references": null,
  "logo": "logo.png",
  "qa": "distributed.active_memory_manager.ActiveMemoryManagerPolicy.run",
  "arbitrary": []
}