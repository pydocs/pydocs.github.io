{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This trades parallelism opportunities for faster scheduling by making tasks less granular.  It can replace "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "fuse_linear"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in optimization passes."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This optimization applies to all reductions--tasks that have at most one dependent--so it may be viewed as fusing \"multiple input, single output\" groups of tasks into a single task.  There are many parameters to fine tune the behavior, which are described below.  "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "ave_width"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the natural parameter with which to compare parallelism to granularity, so it should always be specified.  Reasonable values for other parameters will be determined using "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "ave_width"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " if necessary."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "dsk: dict",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "dask graph"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "keys: list or set, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Keys that must remain in the returned dask graph"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dependencies: dict, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "{key: [list-of-keys]}.  Must be a list to provide count of each key This optional input often comes from "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "cull"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ave_width: float (default 1)",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Upper limit for "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "width = num_nodes / height"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", a good measure of parallelizability. dask.config key: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "optimization.fuse.ave-width"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "max_width: int (default infinite)",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Don't fuse if total width is greater than this. dask.config key: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "optimization.fuse.max-width"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "max_height: int or None (default None)",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Don't fuse more than this many levels. Set to None to dynamically adjust to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "1.5 + ave_width * log(ave_width + 1)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". dask.config key: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "optimization.fuse.max-height"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "max_depth_new_edges: int or None (default None)",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Don't fuse if new dependencies are added after this many levels. Set to None to dynamically adjust to ave_width * 1.5. dask.config key: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "optimization.fuse.max-depth-new-edges"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rename_keys: bool or func, optional (default True)",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to rename the fused keys with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "default_fused_keys_renamer"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or not.  Renaming fused keys can keep the graph more understandable and comprehensive, but it comes at the cost of additional processing. If False, then the top-most key will be used.  For advanced usage, a function to create the new name is also accepted. dask.config key: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "optimization.fuse.rename-keys"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fuse_subgraphs",
            "type_": "bool or None, optional (default None)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to fuse multiple tasks into "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "SubgraphCallable"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " objects. Set to None to let the default optimizer of individual dask collections decide. If no collection-specific default exists, None defaults to False. dask.config key: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "optimization.fuse.subgraphs"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "dsk",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "output graph with keys fused"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "dependencies",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "dict mapping dependencies after fusion.  Useful side effect to accelerate other downstream optimizations."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Fuse tasks that form reductions; more advanced than "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "fuse_linear"
                  ]
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/dask/optimization.py",
  "item_line": 429,
  "item_type": "<class 'function'>",
  "aliases": [
    "dask.blockwise.fuse"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.10.0",
  "signature": "fuse(dsk, keys=None, dependencies=None, ave_width=<default>, max_width=<default>, max_height=<default>, max_depth_new_edges=<default>, rename_keys=<default>, fuse_subgraphs=<default>)",
  "references": null,
  "logo": "logo.png",
  "qa": "dask.optimization.fuse",
  "arbitrary": []
}