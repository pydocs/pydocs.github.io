{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> x = np.array([1, 2])",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": ">>> chunks_from_arrays([x, x])",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "((2, 2),)",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> x = np.array([[1, 2]])",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": ">>> chunks_from_arrays([[x], [x]])",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "((1, 1), (2,))",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> x = np.array([[1, 2]])",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": ">>> chunks_from_arrays([[x, x]])",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "((1,), (2, 2))",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> chunks_from_arrays([1, 1])",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "((1, 1),)",
                  "_number": 1,
                  "_offset": 0
                }
              ]
            }
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Chunks tuple from nested list of arrays"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dask/array/core.py",
  "item_line": 4665,
  "item_type": "<class 'function'>",
  "aliases": [
    "dask.array.core.chunks_from_arrays"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.10.0",
  "signature": "chunks_from_arrays(arrays)",
  "references": null,
  "logo": "logo.png",
  "qa": "dask.array.core.chunks_from_arrays",
  "arbitrary": []
}