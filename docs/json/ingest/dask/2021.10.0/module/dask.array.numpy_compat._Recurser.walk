{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "index"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": a tuple of indices up to this point"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "dt": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "value"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ": equal to "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "x[index[0]][...][index[-1]]"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ". On the first iteration, is"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "x"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " itself"
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "entering"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": bool. The result of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "recurse_if(value)"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Iterate over x, yielding (index, value, entering), where"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dask/array/numpy_compat.py",
  "item_line": 111,
  "item_type": "<class 'function'>",
  "aliases": [
    "dask.array.core._Recurser.walk"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.10.0",
  "signature": "walk(self, x, index=())",
  "references": null,
  "logo": "logo.png",
  "qa": "dask.array.numpy_compat._Recurser.walk",
  "arbitrary": []
}