{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function does "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "not"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " initialize the returned array; to do that use "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "zeros_like",
                  "reference": {
                    "module": "dask",
                    "version": "2021.10.0",
                    "kind": "module",
                    "path": "dask.array.creation.zeros_like"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "ones_like",
                  "reference": {
                    "module": "dask",
                    "version": "2021.10.0",
                    "kind": "module",
                    "path": "dask.array.creation.ones_like"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " instead.  It may be marginally faster than the functions that do set the array values."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The shape and data-type of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "a",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "a"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " define these same attributes of the returned array."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dtype",
            "type_": "data-type, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Overrides the data type of the result."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "order",
            "type_": "{'C', 'F'}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to store multidimensional data in C- or Fortran-contiguous (row- or column-wise) order in memory."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "chunks",
            "type_": "sequence of ints",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of samples on each block. Note that the last block will have fewer samples if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "len(array) % chunks != 0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "name",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An optional keyname for the array. Defaults to hashing the input keyword arguments."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "shape",
            "type_": "int or sequence of ints, optional.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Overrides the shape of the result."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Array of uninitialized (arbitrary) data with the same shape and type as "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "a",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "a"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return a new array with the same shape and type as a given array."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "dask",
      "version": "2021.10.0",
      "kind": "module",
      "path": "dask.array.creation.zeros_like"
    },
    {
      "module": "dask",
      "version": "2021.10.0",
      "kind": "module",
      "path": "dask.array.creation.ones_like"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes"
  ],
  "item_file": "/dask/array/creation.py",
  "item_line": 33,
  "item_type": "<class 'function'>",
  "aliases": [
    "dask.array.empty_like"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "empty",
        "ref": "dask.utils.empty",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Return a new uninitialized array."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "ones",
        "ref": "dask.array.creation.ones_like",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Return a new array setting values to one."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "ones_like",
        "ref": "dask.array.creation.ones_like",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Return an array of ones with shape and type of input."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "zeros",
        "ref": "dask.array.creation.zeros_like",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Return a new array setting values to zero."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "zeros_like",
        "ref": "dask.array.creation.zeros_like",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Return an array of zeros with shape and type of input."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "2021.10.0",
  "signature": "empty_like(a, dtype=None, order='C', chunks=None, name=None, shape=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "dask.array.creation.empty_like",
  "arbitrary": []
}