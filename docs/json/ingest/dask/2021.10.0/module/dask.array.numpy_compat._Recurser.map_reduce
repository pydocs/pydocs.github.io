{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For instance, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "map_reduce([[1, 2], 3, 4])"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "f_reduce([",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "  f_reduce([",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "    f_map(1),",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "    f_map(2)",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "  ]),",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "  f_map(3),",
                  "_number": 5,
                  "_offset": 0
                },
                {
                  "_line": "  f_map(4)",
                  "_number": 6,
                  "_offset": 0
                },
                {
                  "_line": "]])",
                  "_number": 7,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "State can be passed down through the calls with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "f_kwargs"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", to iterables of mapped items. When kwargs are passed, as in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "map_reduce([[1, 2], 3, 4], **kw)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", this becomes::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "kw1 = f_kwargs(**kw)",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "kw2 = f_kwargs(**kw1)",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "f_reduce([",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "  f_reduce([",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "    f_map(1), **kw2)",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "    f_map(2,  **kw2)",
                  "_number": 5,
                  "_offset": 0
                },
                {
                  "_line": "  ],      **kw1),",
                  "_number": 6,
                  "_offset": 0
                },
                {
                  "_line": "  f_map(3, **kw1),",
                  "_number": 7,
                  "_offset": 0
                },
                {
                  "_line": "  f_map(4, **kw1)",
                  "_number": 8,
                  "_offset": 0
                },
                {
                  "_line": "]],     **kw)",
                  "_number": 9,
                  "_offset": 0
                }
              ]
            }
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Iterate over the nested list, applying: * "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "f_map"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (T -> U) to items * "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "f_reduce"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (Iterable[U] -> U) to mapped items"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dask/array/numpy_compat.py",
  "item_line": 61,
  "item_type": "<class 'function'>",
  "aliases": [
    "dask.array.core._Recurser.map_reduce"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.10.0",
  "signature": "map_reduce(self, x, f_map=<function _Recurser.<lambda> at 0x137d03d30>, f_reduce=<function _Recurser.<lambda> at 0x137d03dc0>, f_kwargs=<function _Recurser.<lambda> at 0x137d03e50>, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "dask.array.numpy_compat._Recurser.map_reduce",
  "arbitrary": []
}