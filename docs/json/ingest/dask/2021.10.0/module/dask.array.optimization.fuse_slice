{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Fuse a pair of repeated slices into a single slice:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> fuse_slice(slice(1000, 2000), slice(10, 15))\nslice(1010, 1015, None)"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This also works for tuples of slices"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> fuse_slice((slice(100, 200), slice(100, 200, 10)),\n...            (slice(10, 15), [5, 2]))\n(slice(110, 115, None), [150, 120])"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "And a variety of other interesting cases"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> fuse_slice(slice(1000, 2000), 10)  # integers\n1010"
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> fuse_slice(slice(1000, 2000, 5), slice(10, 20, 2))\nslice(1050, 1100, 10)"
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> fuse_slice(slice(1000, 2000, 5), [1, 2, 3])  # lists\n[1005, 1010, 1015]"
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> fuse_slice(None, slice(None, None))  # doctest: +SKIP\nNone"
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Fuse stacked slices together"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dask/array/optimization.py",
  "item_line": 237,
  "item_type": "<class 'function'>",
  "aliases": [
    "dask.array.core.fuse_slice"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "2021.10.0",
  "signature": "fuse_slice(a, b)",
  "references": null,
  "logo": "logo.png",
  "qa": "dask.array.optimization.fuse_slice",
  "arbitrary": []
}