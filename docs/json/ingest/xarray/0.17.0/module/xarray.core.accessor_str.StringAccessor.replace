{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Replace occurrences of pattern/regex in the array with some string."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "pat",
            "type_": "str or re.Pattern",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "String can be a character sequence or regular expression."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "repl",
            "type_": "str or callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Replacement string or a callable. The callable is passed the regex match object and must return a replacement string to be used. See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "re.sub"
                        ],
                        "domain": null,
                        "role": "func"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "n",
            "type_": "int, default: -1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of replacements to make from start. Use "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to replace all."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "case",
            "type_": "bool, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- If True, case sensitive (the default if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "pat",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "pat"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a string) - Set to False for case insensitive - Cannot be set if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "pat",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "pat"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a compiled regex"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "flags",
            "type_": "int, default: 0",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- re module flags, e.g. re.IGNORECASE. Use "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for no flags. - Cannot be set if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "pat",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "pat"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a compiled regex"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "regex",
            "type_": "bool, default: True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- If True, assumes the passed-in pattern is a regular expression. - If False, treats the pattern as a literal string - Cannot be set to False if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "pat",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "pat"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a compiled regex or "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "repl",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "repl"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  a callable."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "replaced",
            "type_": "same type as values",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A copy of the object with all matching occurrences of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "pat",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "pat"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " replaced by "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "repl",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "repl"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/xarray/core/accessor_str.py",
  "item_line": 835,
  "item_type": "<class 'function'>",
  "aliases": [
    "xarray.core.accessor_str.StringAccessor.replace"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "0.17.0",
  "signature": "replace(self, pat, repl, n=-1, case=None, flags=0, regex=True)",
  "references": null,
  "logo": "logo.png",
  "qa": "xarray.core.accessor_str.StringAccessor.replace",
  "arbitrary": []
}