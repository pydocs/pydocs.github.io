{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Pad this dataset along one or more dimensions."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Admonition",
          "data": {
            "kind": "warning",
            "title": "",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "This function is experimental and its behaviour is likely to change especially regarding padding of dimension coordinates (or IndexVariables). "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "When using one of the modes (\"edge\", \"reflect\", \"symmetric\", \"wrap\"), coordinates will be padded with the same mode, otherwise coordinates are padded using the \"constant\" mode with fill_value dtypes.NA."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "pad_width",
            "type_": "mapping of hashable to tuple of int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Mapping with the form of {dim: (pad_before, pad_after)} describing the number of values padded along each dimension. {dim: pad} is a shortcut for pad_before = pad_after = pad"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mode",
            "type_": "str, default: \"constant\"",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "One of the following string values (taken from numpy docs)."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'constant' (default)",
                            "_number": 2,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with a constant value.",
                            "_number": 3,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'constant' (default)"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with a constant value."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'edge'",
                            "_number": 4,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the edge values of array.",
                            "_number": 5,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'edge'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the edge values of array."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'linear_ramp'",
                            "_number": 6,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the linear ramp between end_value and the",
                            "_number": 7,
                            "_offset": 4
                          },
                          {
                            "_line": "    array edge value.",
                            "_number": 8,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'linear_ramp'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the linear ramp between end_value and the array edge value."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'maximum'",
                            "_number": 9,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the maximum value of all or part of the",
                            "_number": 10,
                            "_offset": 4
                          },
                          {
                            "_line": "    vector along each axis.",
                            "_number": 11,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'maximum'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the maximum value of all or part of the vector along each axis."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'mean'",
                            "_number": 12,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the mean value of all or part of the",
                            "_number": 13,
                            "_offset": 4
                          },
                          {
                            "_line": "    vector along each axis.",
                            "_number": 14,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'mean'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the mean value of all or part of the vector along each axis."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'median'",
                            "_number": 15,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the median value of all or part of the",
                            "_number": 16,
                            "_offset": 4
                          },
                          {
                            "_line": "    vector along each axis.",
                            "_number": 17,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'median'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the median value of all or part of the vector along each axis."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'minimum'",
                            "_number": 18,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the minimum value of all or part of the",
                            "_number": 19,
                            "_offset": 4
                          },
                          {
                            "_line": "    vector along each axis.",
                            "_number": 20,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'minimum'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the minimum value of all or part of the vector along each axis."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'reflect'",
                            "_number": 21,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the reflection of the vector mirrored on",
                            "_number": 22,
                            "_offset": 4
                          },
                          {
                            "_line": "    the first and last values of the vector along each",
                            "_number": 23,
                            "_offset": 4
                          },
                          {
                            "_line": "    axis.",
                            "_number": 24,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'reflect'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the reflection of the vector mirrored on the first and last values of the vector along each axis."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'symmetric'",
                            "_number": 25,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the reflection of the vector mirrored",
                            "_number": 26,
                            "_offset": 4
                          },
                          {
                            "_line": "    along the edge of the array.",
                            "_number": 27,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'symmetric'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the reflection of the vector mirrored along the edge of the array."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'wrap'",
                            "_number": 28,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Pads with the wrap of the vector along the axis.",
                            "_number": 29,
                            "_offset": 4
                          },
                          {
                            "_line": "    The first values are used to pad the end and the",
                            "_number": 30,
                            "_offset": 4
                          },
                          {
                            "_line": "    end values are used to pad the beginning.",
                            "_number": 31,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'wrap'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Pads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "stat_length",
            "type_": "int, tuple or mapping of hashable to tuple, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Used in 'maximum', 'mean', 'median', and 'minimum'.  Number of values at edge of each axis used to calculate the statistic value. {dim_1: (before_1, after_1), ... dim_N: (before_N, after_N)} unique statistic lengths along each dimension. ((before, after),) yields same before and after statistic lengths for each dimension. (stat_length,) or int is a shortcut for before = after = statistic length for all axes. Default is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", to use the entire axis."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "constant_values",
            "type_": "scalar, tuple or mapping of hashable to tuple, default: 0",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Used in 'constant'.  The values to set the padded values for each axis. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{dim",
                          "_",
                          "1",
                          ":",
                          " ",
                          "(before",
                          "_",
                          "1,",
                          " ",
                          "after",
                          "_",
                          "1),",
                          " ",
                          "...",
                          " ",
                          "dim",
                          "_",
                          "N",
                          ":",
                          " ",
                          "(before",
                          "_",
                          "N,",
                          " ",
                          "after",
                          "_",
                          "N)}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " unique pad constants along each dimension. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "((before,",
                          " ",
                          "after),)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " yields same before and after constants for each dimension. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(constant,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "constant"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a shortcut for "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "before",
                          " ",
                          "=",
                          " ",
                          "after",
                          " ",
                          "=",
                          " ",
                          "constant"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for all dimensions. Default is 0."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "end_values",
            "type_": "scalar, tuple or mapping of hashable to tuple, default: 0",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Used in 'linear_ramp'.  The values used for the ending value of the linear_ramp and that will form the edge of the padded array. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{dim",
                          "_",
                          "1",
                          ":",
                          " ",
                          "(before",
                          "_",
                          "1,",
                          " ",
                          "after",
                          "_",
                          "1),",
                          " ",
                          "...",
                          " ",
                          "dim",
                          "_",
                          "N",
                          ":",
                          " ",
                          "(before",
                          "_",
                          "N,",
                          " ",
                          "after",
                          "_",
                          "N)}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " unique end values along each dimension. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "((before,",
                          " ",
                          "after),)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " yields same before and after end values for each axis. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(constant,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "constant"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a shortcut for "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "before",
                          " ",
                          "=",
                          " ",
                          "after",
                          " ",
                          "=",
                          " ",
                          "constant"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for all axes. Default is 0."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "reflect_type",
            "type_": "{\"even\", \"odd\"}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Used in \"reflect\", and \"symmetric\".  The \"even\" style is the default with an unaltered reflection around the edge value.  For the \"odd\" style, the extended part of the array is created by subtracting the reflected values from two times the edge value."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**pad_width_kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The keyword arguments form of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pad",
                          "_",
                          "width"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". One of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pad",
                          "_",
                          "width"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pad",
                          "_",
                          "width",
                          "_",
                          "kwargs"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be provided."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "padded",
            "type_": "Dataset",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dataset with the padded coordinates and data."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "By default when "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "mode=\"constant\""
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "constant",
                    "_",
                    "values=None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", integer types will be promoted to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "float"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and padded with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.nan"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". To avoid type promotion specify "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "constant",
                    "_",
                    "values=np.nan"
                  ]
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "xarray",
      "version": "0.17.0",
      "kind": "module",
      "path": "xarray.core.dataset.Dataset"
    },
    {
      "module": "xarray",
      "version": "0.17.0",
      "kind": "module",
      "path": "xarray.core.dataset.Dataset.pad"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/xarray/core/dataset.py",
  "item_line": 6497,
  "item_type": "<class 'function'>",
  "aliases": [
    "xarray.Dataset.pad"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "ds"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "xr"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "Dataset",
                  "reference": {
                    "module": "xarray",
                    "version": "0.17.0",
                    "kind": "module",
                    "path": "xarray.core.dataset.Dataset"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "{"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "foo"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ":"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "x"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nb",
              "link": {
                "type": "str",
                "data": "range"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "5"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "}"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "ds"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "pad",
                  "reference": {
                    "module": "xarray",
                    "version": "0.17.0",
                    "kind": "module",
                    "path": "xarray.core.dataset.Dataset.pad"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "x"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "<xarray.Dataset>\nDimensions:  (x: 8)\nDimensions without coordinates: x\nData variables:\n    foo      (x) float64 nan 0.0 1.0 2.0 3.0 4.0 nan nan",
          "ce_status": "compiled"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "Dataset.bfill",
        "ref": "xarray.core.dataset.Dataset.bfill",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "Dataset.ffill",
        "ref": "xarray.core.dataset.Dataset.ffill",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "Dataset.roll",
        "ref": "xarray.core.dataset.Dataset.roll",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "Dataset.shift",
        "ref": "xarray.core.dataset.Dataset.shift",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "dask.array.pad",
        "ref": "dask.array.creation.pad",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "numpy.pad",
        "ref": "numpy.pad",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "0.17.0",
  "signature": "pad(self, pad_width: Mapping[Hashable, Union[int, Tuple[int, int]]] = None, mode: str = 'constant', stat_length: Union[int, Tuple[int, int], Mapping[Hashable, Tuple[int, int]]] = None, constant_values: Union[int, Tuple[int, int], Mapping[Hashable, Tuple[int, int]]] = None, end_values: Union[int, Tuple[int, int], Mapping[Hashable, Tuple[int, int]]] = None, reflect_type: str = None, **pad_width_kwargs: Any) -> 'Dataset'",
  "references": null,
  "logo": "logo.png",
  "qa": "xarray.core.dataset.Dataset.pad",
  "arbitrary": []
}