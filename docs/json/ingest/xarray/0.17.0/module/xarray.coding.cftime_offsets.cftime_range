{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return a fixed frequency CFTimeIndex."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "start",
            "type_": "str or cftime.datetime, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Left bound for generating dates."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "end",
            "type_": "str or cftime.datetime, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Right bound for generating dates."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "periods",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of periods to generate."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "freq",
            "type_": "str or None, default: \"D\"",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Frequency strings can have multiples, e.g. \"5H\"."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "normalize",
            "type_": "bool, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Normalize start/end dates to midnight before generating date range."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "name",
            "type_": "str, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Name of the resulting index"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "closed",
            "type_": "{\"left\", \"right\"} or None, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Make the interval closed with respect to the given frequency to the \"left\", \"right\", or both sides (None)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "calendar",
            "type_": "str, default: \"standard\"",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Calendar type for the datetimes."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "CFTimeIndex",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function is an analog of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "pandas.date",
                    "_",
                    "range"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for use in generating sequences of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime.datetime"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " objects.  It supports most of the features of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "pandas.date",
                    "_",
                    "range"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (e.g. specifying how the index is "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "closed"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " on either side, or whether or not to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "normalize"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " the start and end bounds); however, there are some notable exceptions:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- You cannot specify a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "tz"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (time zone) argument. - Start or end dates specified as partial-datetime strings must use the"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "ISO-8601",
                    " ",
                    "format",
                    " ",
                    "<https",
                    ":",
                    "//en.wikipedia.org/wiki/ISO",
                    "_",
                    "8601>"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "_."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "- It supports many, but not all, frequencies supported by",
                      "_number": 9,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  ``pandas.date_range``.  For example it does not currently support any of",
                      "_number": 10,
                      "_offset": 2
                    },
                    {
                      "_line": "  the business-related or semi-monthly frequencies.",
                      "_number": 11,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- It supports many, but not all, frequencies supported by"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "pandas.date",
                              "_",
                              "range"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ".  For example it does not currently support any of the business-related or semi-monthly frequencies."
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "- Compound sub-monthly frequencies are not supported, e.g. '1H1min', as",
                      "_number": 12,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  these can easily be written in terms of the finest common resolution,",
                      "_number": 13,
                      "_offset": 2
                    },
                    {
                      "_line": "  e.g. '61min'.",
                      "_number": 14,
                      "_offset": 2
                    },
                    {
                      "_line": "",
                      "_number": 15,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- Compound sub-monthly frequencies are not supported, e.g. '1H1min', as"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "these can easily be written in terms of the finest common resolution, e.g. '61min'. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Valid simple frequency strings for use with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "-calendars include any multiples of the following."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "+--------+--------------------------+ | Alias  | Description              | +========+==========================+ | A, Y   | Year-end frequency       | +--------+--------------------------+ | AS, YS | Year-start frequency     | +--------+--------------------------+ | Q      | Quarter-end frequency    | +--------+--------------------------+ | QS     | Quarter-start frequency  | +--------+--------------------------+ | M      | Month-end frequency      | +--------+--------------------------+ | MS     | Month-start frequency    | +--------+--------------------------+ | D      | Day frequency            | +--------+--------------------------+ | H      | Hour frequency           | +--------+--------------------------+ | T, min | Minute frequency         | +--------+--------------------------+ | S      | Second frequency         | +--------+--------------------------+ | L, ms  | Millisecond frequency    | +--------+--------------------------+ | U, us  | Microsecond frequency    | +--------+--------------------------+"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Any multiples of the following anchored offsets are also supported."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "+----------+--------------------------------------------------------------------+ | Alias    | Description                                                        | +==========+====================================================================+ | A(S)-JAN | Annual frequency, anchored at the end (or beginning) of January    | +----------+--------------------------------------------------------------------+ | A(S)-FEB | Annual frequency, anchored at the end (or beginning) of February   | +----------+--------------------------------------------------------------------+ | A(S)-MAR | Annual frequency, anchored at the end (or beginning) of March      | +----------+--------------------------------------------------------------------+ | A(S)-APR | Annual frequency, anchored at the end (or beginning) of April      | +----------+--------------------------------------------------------------------+ | A(S)-MAY | Annual frequency, anchored at the end (or beginning) of May        | +----------+--------------------------------------------------------------------+ | A(S)-JUN | Annual frequency, anchored at the end (or beginning) of June       | +----------+--------------------------------------------------------------------+ | A(S)-JUL | Annual frequency, anchored at the end (or beginning) of July       | +----------+--------------------------------------------------------------------+ | A(S)-AUG | Annual frequency, anchored at the end (or beginning) of August     | +----------+--------------------------------------------------------------------+ | A(S)-SEP | Annual frequency, anchored at the end (or beginning) of September  | +----------+--------------------------------------------------------------------+ | A(S)-OCT | Annual frequency, anchored at the end (or beginning) of October    | +----------+--------------------------------------------------------------------+ | A(S)-NOV | Annual frequency, anchored at the end (or beginning) of November   | +----------+--------------------------------------------------------------------+ | A(S)-DEC | Annual frequency, anchored at the end (or beginning) of December   | +----------+--------------------------------------------------------------------+ | Q(S)-JAN | Quarter frequency, anchored at the end (or beginning) of January   | +----------+--------------------------------------------------------------------+ | Q(S)-FEB | Quarter frequency, anchored at the end (or beginning) of February  | +----------+--------------------------------------------------------------------+ | Q(S)-MAR | Quarter frequency, anchored at the end (or beginning) of March     | +----------+--------------------------------------------------------------------+ | Q(S)-APR | Quarter frequency, anchored at the end (or beginning) of April     | +----------+--------------------------------------------------------------------+ | Q(S)-MAY | Quarter frequency, anchored at the end (or beginning) of May       | +----------+--------------------------------------------------------------------+ | Q(S)-JUN | Quarter frequency, anchored at the end (or beginning) of June      | +----------+--------------------------------------------------------------------+ | Q(S)-JUL | Quarter frequency, anchored at the end (or beginning) of July      | +----------+--------------------------------------------------------------------+ | Q(S)-AUG | Quarter frequency, anchored at the end (or beginning) of August    | +----------+--------------------------------------------------------------------+ | Q(S)-SEP | Quarter frequency, anchored at the end (or beginning) of September | +----------+--------------------------------------------------------------------+ | Q(S)-OCT | Quarter frequency, anchored at the end (or beginning) of October   | +----------+--------------------------------------------------------------------+ | Q(S)-NOV | Quarter frequency, anchored at the end (or beginning) of November  | +----------+--------------------------------------------------------------------+ | Q(S)-DEC | Quarter frequency, anchored at the end (or beginning) of December  | +----------+--------------------------------------------------------------------+"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Finally, the following calendar aliases are supported."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "+--------------------------------+---------------------------------------+ | Alias                          | Date type                             | +================================+=======================================+ | standard, gregorian            | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime.DatetimeGregorian"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          | +--------------------------------+---------------------------------------+ | proleptic_gregorian            | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime.DatetimeProlepticGregorian"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " | +--------------------------------+---------------------------------------+ | noleap, 365_day                | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime.DatetimeNoLeap"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "             | +--------------------------------+---------------------------------------+ | all_leap, 366_day              | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime.DatetimeAllLeap"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "            | +--------------------------------+---------------------------------------+ | 360_day                        | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime.Datetime360Day"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "             | +--------------------------------+---------------------------------------+ | julian                         | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cftime.DatetimeJulian"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "             | +--------------------------------+---------------------------------------+"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "xarray",
      "version": "0.17.0",
      "kind": "module",
      "path": "xarray.coding.cftime_offsets.cftime_range"
    },
    {
      "module": "xarray",
      "version": "0.17.0",
      "kind": "module",
      "path": "xarray.core.duck_array_ops.np_timedelta64_to_float"
    },
    {
      "module": "xarray",
      "version": "0.17.0",
      "kind": "module",
      "path": "xarray.core.accessor_str.StringAccessor.startswith"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples",
    "See Also"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/xarray/coding/cftime_offsets.py",
  "item_line": 802,
  "item_type": "<class 'function'>",
  "aliases": [
    "xarray.cftime_range"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "This function returns a "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "CFTimeIndex"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", populated with "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "cftime.datetime"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " objects associated with the specified calendar type, e.g."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "xr"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "cftime_range",
                  "reference": {
                    "module": "xarray",
                    "version": "0.17.0",
                    "kind": "module",
                    "path": "xarray.coding.cftime_offsets.cftime_range"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "start",
                  "reference": {
                    "module": "xarray",
                    "version": "0.17.0",
                    "kind": "module",
                    "path": "xarray.core.accessor_str.StringAccessor.startswith"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "2000"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "periods"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "Link",
                "data": {
                  "value": "6",
                  "reference": {
                    "module": "xarray",
                    "version": "0.17.0",
                    "kind": "module",
                    "path": "xarray.core.duck_array_ops.np_timedelta64_to_float"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "freq"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "2MS"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "calendar"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "noleap"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "CFTimeIndex([2000-01-01 00:00:00, 2000-03-01 00:00:00, 2000-05-01 00:00:00,\n             2000-07-01 00:00:00, 2000-09-01 00:00:00, 2000-11-01 00:00:00],\n            dtype='object', length=6, calendar='noleap', freq='2MS')",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "As in the standard pandas function, three of the "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "start"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "end"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "periods"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", or "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "freq"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " arguments must be specified at a given time, with the other set to "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "None"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ".  See the "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "pandas",
                  " ",
                  "documentation",
                  " ",
                  "<https",
                  ":",
                  "//pandas.pydata.org/pandas-docs/stable/reference/api/pandas.date",
                  "_",
                  "range.html>"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "_ for more examples of the behavior of "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "date",
                  "_",
                  "range"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " with each of the parameters."
              }
            }
          ],
          "inner": []
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "pandas.date_range",
        "ref": "pandas.core.indexes.datetimes.date_range",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "0.17.0",
  "signature": "cftime_range(start=None, end=None, periods=None, freq='D', normalize=False, name=None, closed=None, calendar='standard')",
  "references": null,
  "logo": "logo.png",
  "qa": "xarray.coding.cftime_offsets.cftime_range",
  "arbitrary": []
}