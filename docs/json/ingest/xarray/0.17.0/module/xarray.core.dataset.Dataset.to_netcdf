{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Write dataset contents to a netCDF file."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "path",
            "type_": "str, Path or file-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Path to which to save this dataset. File-like objects are only supported by the scipy engine. If no path is provided, this function returns the resulting netCDF file as bytes; in this case, we need to use scipy, which does not support netCDF version 4 (the default format becomes NETCDF3_64BIT)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mode",
            "type_": "{\"w\", \"a\"}, default: \"w\"",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Write ('w') or append ('a') mode. If mode='w', any existing file at this location will be overwritten. If mode='a', existing variables will be overwritten."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "format",
            "type_": "{\"NETCDF4\", \"NETCDF4_CLASSIC\", \"NETCDF3_64BIT\",                   \"NETCDF3_CLASSIC\"}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "File format for the resulting netCDF file:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "* NETCDF4: Data is stored in an HDF5 file, using netCDF4 API",
                            "_number": 2,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  features.",
                            "_number": 3,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "* NETCDF4: Data is stored in an HDF5 file, using netCDF4 API"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "features."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "* NETCDF4_CLASSIC: Data is stored in an HDF5 file, using only",
                            "_number": 4,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  netCDF 3 compatible API features.",
                            "_number": 5,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "* NETCDF4_CLASSIC: Data is stored in an HDF5 file, using only"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "netCDF 3 compatible API features."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "* NETCDF3_64BIT: 64-bit offset version of the netCDF 3 file format,",
                            "_number": 6,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  which fully supports 2+ GB files, but is only compatible with",
                            "_number": 7,
                            "_offset": 2
                          },
                          {
                            "_line": "  clients linked against netCDF version 3.6.0 or later.",
                            "_number": 8,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "* NETCDF3_64BIT: 64-bit offset version of the netCDF 3 file format,"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "which fully supports 2+ GB files, but is only compatible with clients linked against netCDF version 3.6.0 or later."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "* NETCDF3_CLASSIC: The classic netCDF 3 file format. It does not",
                            "_number": 9,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  handle 2+ GB files very well.",
                            "_number": 10,
                            "_offset": 2
                          },
                          {
                            "_line": "",
                            "_number": 11,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "* NETCDF3_CLASSIC: The classic netCDF 3 file format. It does not"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "handle 2+ GB files very well. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "All formats are supported by the netCDF4-python library. scipy.io.netcdf only supports the last two formats."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The default format is NETCDF4 if you are saving a file to disk and have the netCDF4-python library available. Otherwise, xarray falls back to using scipy to write netCDF files and defaults to the NETCDF3_64BIT format (scipy does not support netCDF4)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "group",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Path to the netCDF4 group in the given file to open (only works for format='NETCDF4'). The group(s) will be created if necessary."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "engine",
            "type_": "{\"netcdf4\", \"scipy\", \"h5netcdf\"}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Engine to use when writing netCDF files. If not provided, the default engine is chosen based on available dependencies, with a preference for 'netcdf4' if writing to a file on disk."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "encoding",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Nested dictionary with variable names as keys and dictionaries of variable specific encodings as values, e.g., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{\"my",
                          "_",
                          "variable\"",
                          ":",
                          " ",
                          "{\"dtype\"",
                          ":",
                          " ",
                          "\"int16\",",
                          " ",
                          "\"scale",
                          "_",
                          "factor\"",
                          ":",
                          " ",
                          "0.1,",
                          " ",
                          "\"zlib\"",
                          ":",
                          " ",
                          "True},",
                          " ",
                          "...}"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "h5netcdf"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " engine supports both the NetCDF4-style compression encoding parameters "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{\"zlib\"",
                          ":",
                          " ",
                          "True,",
                          " ",
                          "\"complevel\"",
                          ":",
                          " ",
                          "9}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and the h5py ones "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{\"compression\"",
                          ":",
                          " ",
                          "\"gzip\",",
                          " ",
                          "\"compression",
                          "_",
                          "opts\"",
                          ":",
                          " ",
                          "9}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". This allows using any compression plugin installed in the HDF5 library, e.g. LZF."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "unlimited_dims",
            "type_": "iterable of hashable, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dimension(s) that should be serialized as unlimited dimensions. By default, no dimensions are treated as unlimited dimensions. Note that unlimited_dims may also be set via "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "dataset.encoding[\"unlimited",
                          "_",
                          "dims\"]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "compute: bool, default: True",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If true compute immediately, otherwise return a "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "dask.delayed.Delayed"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " object that can be computed later."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "invalid_netcdf: bool, default: False",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Only valid along with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "engine=\"h5netcdf\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If True, allow writing hdf5 files which are invalid netcdf as described in https://github.com/shoyer/h5netcdf."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/xarray/core/dataset.py",
  "item_line": 1606,
  "item_type": "<class 'function'>",
  "aliases": [
    "xarray.Dataset.to_netcdf"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "0.17.0",
  "signature": "to_netcdf(self, path=None, mode: str = 'w', format: str = None, group: str = None, engine: str = None, encoding: Mapping = None, unlimited_dims: Iterable[Hashable] = None, compute: bool = True, invalid_netcdf: bool = False) -> Union[bytes, ForwardRef('Delayed'), NoneType]",
  "references": null,
  "logo": "logo.png",
  "qa": "xarray.core.dataset.Dataset.to_netcdf",
  "arbitrary": []
}