{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Set options for xarray in a controlled context."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Currently supported options:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "display",
                    "_",
                    "width"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": maximum display width for "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "repr"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " on xarray objects."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  Default: "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "80"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "arithmetic",
                    "_",
                    "join"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": DataArray/Dataset alignment in binary operations."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  Default: "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'inner'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "file",
                    "_",
                    "cache",
                    "_",
                    "maxsize"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": maximum number of open files to hold in xarray's"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  global least-recently-usage cached. This should be smaller than your   system's per-process file descriptor limit, e.g., "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "ulimit",
                    " ",
                    "-n"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " on Linux.   Default: 128."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "warn",
                    "_",
                    "for",
                    "_",
                    "unclosed",
                    "_",
                    "files"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": whether or not to issue a warning when"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  unclosed files are deallocated (default False). This is mostly useful   for debugging."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cmap",
                    "_",
                    "sequential"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": colormap to use for nondivergent data plots."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  Default: "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "viridis"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". If string, must be matplotlib built-in colormap.   Can also be a Colormap object (e.g. mpl.cm.magma)"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cmap",
                    "_",
                    "divergent"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": colormap to use for divergent data plots."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  Default: "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "RdBu",
                    "_",
                    "r"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". If string, must be matplotlib built-in colormap.   Can also be a Colormap object (e.g. mpl.cm.magma)"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "keep",
                    "_",
                    "attrs"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": rule for whether to keep attributes on xarray"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  Datasets/dataarrays after operations. Either "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to always keep   attrs, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to always discard them, or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'default'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to use original   logic that attrs should only be kept in unambiguous circumstances.   Default: "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'default'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "display",
                    "_",
                    "style"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ": display style to use in jupyter for xarray objects."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  Default: "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'text'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". Other options are "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'html'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "You can use "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "set",
                    "_",
                    "options"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " either as a context manager:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> ds = xr.Dataset({\"x\": np.arange(1000)})",
                  "_number": 29,
                  "_offset": 0
                },
                {
                  "_line": ">>> with xr.set_options(display_width=40):",
                  "_number": 30,
                  "_offset": 0
                },
                {
                  "_line": "...     print(ds)",
                  "_number": 31,
                  "_offset": 0
                },
                {
                  "_line": "...",
                  "_number": 32,
                  "_offset": 0
                },
                {
                  "_line": "<xarray.Dataset>",
                  "_number": 33,
                  "_offset": 0
                },
                {
                  "_line": "Dimensions:  (x: 1000)",
                  "_number": 34,
                  "_offset": 0
                },
                {
                  "_line": "Coordinates:",
                  "_number": 35,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "  * x        (x) int64 0 1 2 ... 998 999",
                  "_number": 36,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "Data variables:",
                      "_number": 37,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    *empty*",
                      "_number": 38,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 39,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Data variables:"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "*empty* "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Or to set global options:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> xr.set_options(display_width=80)  # doctest: +ELLIPSIS",
                  "_number": 42,
                  "_offset": 0
                },
                {
                  "_line": "<xarray.core.options.set_options object at 0x...>",
                  "_number": 43,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            }
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/xarray/core/options.py",
  "item_line": 81,
  "item_type": "<class 'type'>",
  "aliases": [
    "xarray.set_options"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "0.17.0",
  "signature": "set_options(**kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "xarray.core.options.set_options",
  "arbitrary": []
}