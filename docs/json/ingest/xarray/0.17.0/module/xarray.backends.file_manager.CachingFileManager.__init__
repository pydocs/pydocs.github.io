{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Initialize a FileManager."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The cache and ref_counts arguments exist solely to facilitate dependency injection, and should only be set for tests."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "opener",
            "type_": "callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Function that when called like "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "opener(",
                          "*",
                          "args,",
                          " ",
                          "*",
                          "*",
                          "kwargs)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " returns an open file object. The file object must implement a "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "close()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " method."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "*args",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Positional arguments for opener. A "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "mode"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " argument should be provided as a keyword argument (see below). All arguments must be hashable."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mode",
            "type_": "optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If provided, passed as a keyword argument to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "opener"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " along with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "*",
                          "*",
                          "kwargs"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "mode='w'",
                          " "
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " has special treatment: after the first call it is replaced by "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "mode='a'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " in all subsequent function to avoid overriding the newly created file."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "kwargs",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Keyword arguments for opener, excluding "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "mode"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". All values must be hashable."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "lock",
            "type_": "duck-compatible threading.Lock, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Lock to use when modifying the cache inside acquire() and close(). By default, uses a new threading.Lock() object. If set, this object should be pickleable."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cache",
            "type_": "MutableMapping, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Mapping to use as a cache for open files. By default, uses xarray's global LRU file cache. Because "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "cache"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " typically points to a global variable and contains non-picklable file objects, an unpickled FileManager objects will be restored with the default cache."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ref_counts",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Optional dict to use for keeping track the number of references to the same file."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/xarray/backends/file_manager.py",
  "item_line": 78,
  "item_type": "<class 'function'>",
  "aliases": [
    "xarray.backends.CachingFileManager.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "0.17.0",
  "signature": "__init__(self, opener, *args, mode=<unused>, kwargs=None, lock=None, cache=None, ref_counts=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "xarray.backends.file_manager.CachingFileManager.__init__",
  "arbitrary": []
}