{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The IPython prefilter is run on all user input before it is run.  The prefilter consumes lines of input and produces transformed lines of input."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The implementation consists of two phases:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "EnumeratedList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Transformers"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Checkers and handlers"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Over time, we plan on deprecating the checkers and handlers and doing everything in the transformers."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The transformers are instances of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "PrefilterTransformer",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.core.prefilter.PrefilterTransformer"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and have a single method "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "transform",
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that takes a line and returns a transformed line.  The transformation can be accomplished using any tool, but our current ones use regular expressions for speed."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "After all the transformers have been run, the line is fed to the checkers, which are instances of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "PrefilterChecker",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.core.prefilter.PrefilterChecker"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".  The line is passed to the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "check",
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method, which either returns "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "PrefilterHandler",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.core.prefilter.PrefilterHandler.handle"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " instance.  If "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is returned, the other checkers are tried.  If an "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "PrefilterHandler",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.core.prefilter.PrefilterHandler.handle"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " instance is returned, the line is passed to the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "handle",
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method of the returned handler and no further checkers are tried."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Both transformers and checkers have a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "priority",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " attribute, that determines the order in which they are called.  Smaller priorities are tried first."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Both transformers and checkers also have "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "enabled",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " attribute, which is a boolean that determines if the instance is used."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Users or developers can change the priority or enabled attribute of transformers or checkers, but they must call the "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "sort_checkers",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.core.prefilter.PrefilterManager.sort_checkers"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "sort_transformers",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.core.prefilter.PrefilterManager.sort_transformers"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method after changing the priority."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Main prefilter component."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "IPython",
      "version": "8.1.0.dev",
      "kind": "module",
      "path": "IPython.core.prefilter.PrefilterManager.sort_transformers"
    },
    {
      "module": "IPython",
      "version": "8.1.0.dev",
      "kind": "module",
      "path": "IPython.core.prefilter.PrefilterChecker"
    },
    {
      "module": "IPython",
      "version": "8.1.0.dev",
      "kind": "module",
      "path": "IPython.core.prefilter.PrefilterHandler.handle"
    },
    {
      "module": "IPython",
      "version": "8.1.0.dev",
      "kind": "module",
      "path": "IPython.core.prefilter.PrefilterManager.sort_checkers"
    },
    {
      "module": "IPython",
      "version": "8.1.0.dev",
      "kind": "module",
      "path": "IPython.core.prefilter.PrefilterTransformer"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dev/ipython/IPython/core/prefilter.py",
  "item_line": 78,
  "item_type": "<class 'traitlets.traitlets.MetaHasTraits'>",
  "aliases": [
    "IPython.core.interactiveshell.PrefilterManager"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "8.1.0.dev",
  "signature": "PrefilterManager(*args, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "IPython.core.prefilter.PrefilterManager",
  "arbitrary": []
}