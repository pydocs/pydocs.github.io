{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "To remove in the future \u2013\u2013 IPython.core.debugger"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dev/ipython/IPython/core/debugger.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "aliases": [
    "IPython.core.debugger"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "8.1.0.dev",
  "signature": null,
  "references": null,
  "logo": "logo.png",
  "qa": "IPython.core.debugger",
  "arbitrary": [
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Pdb debugger class."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This is an extension to PDB which adds a number of new features. Note that there is also the "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "IPython.terminal.debugger",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.terminal.debugger"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " class which provides UI improvements."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "We also strongly recommend to use this via the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "ipdb",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " package, which provides extra configuration options."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Among other things, this subclass of PDB:"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "BulletList",
                    "data": {
                      "value": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "supports many IPython magics like pdef/psource"
                                }
                              }
                            ],
                            "inner": []
                          }
                        },
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "hide frames in tracebacks based on "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": "__tracebackhide__",
                                  "domain": null,
                                  "role": null
                                }
                              }
                            ],
                            "inner": []
                          }
                        },
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "allows to skip frames based on "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": "__debuggerskip__",
                                  "domain": null,
                                  "role": null
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The skipping and hiding frames are configurable via the "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "skip_predicates",
                  "reference": {
                    "module": "IPython",
                    "version": "8.1.0.dev",
                    "kind": "module",
                    "path": "IPython.core.debugger.Pdb.do_skip_predicates"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " command."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "By default, frames from readonly files will be hidden, frames containing "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "__tracebackhide__=True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will be hidden."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Frames containing "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "__debuggerskip__"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will be stepped over, frames who's parent frames value of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "__debuggerskip__"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will be skipped."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              ">>> def helpers_helper():",
              "...     pass",
              "...",
              "... def helper_1():",
              "...     print(\"don't step in me\")",
              "...     helpers_helpers() # will be stepped over unless breakpoint set.",
              "...",
              "...",
              "... def helper_2():",
              "...     print(\"in me neither\")",
              "..."
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "One can define a decorator that wraps a function between the two helpers:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              ">>> def pdb_skipped_decorator(function):",
              "...",
              "...",
              "...     def wrapped_fn(*args, **kwargs):",
              "...         __debuggerskip__ = True",
              "...         helper_1()",
              "...         __debuggerskip__ = False",
              "...         result = function(*args, **kwargs)",
              "...         __debuggerskip__ = True",
              "...         helper_2()",
              "...         # setting __debuggerskip__ to False again is not necessary",
              "...         return result",
              "...",
              "...     return wrapped_fn"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "When decorating a function, ipdb will directly step into "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "bar()"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " by default:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              ">>> @foo_decorator",
              "... def bar(x, y):",
              "...     return x * y"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "You can toggle the behavior with"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "ipdb> skip_predicates debuggerskip false"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "or configure it in your "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    ".pdbrc"
                  ]
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Modified from the standard pdb.Pdb class to avoid including readline, so that the command line completion of other programs which include this isn't damaged."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "In the future, this class will be expanded with improvements over the standard pdb."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The original code in this file is mainly lifted out of cmd.py in Python 2.2, with minor changes. Licensing should therefore be under the standard Python terms.  For details on the PSF (Python Software Foundation) standard license, see:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "https://docs.python.org/2/license.html"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "All the changes since then are under the same license as IPython."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": "License"
    }
  ]
}