{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Take one or more classes or instances of classes that subclass the main "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "core.Magic",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " class, and register them with IPython to use the magic functions they provide.  The registration process will then ensure that any methods that have decorated to provide line and/or cell magics will be recognized with the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "%x",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "/"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "%%x",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " syntax as a line/cell magic respectively."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If classes are given, they will be instantiated with the default constructor.  If your classes need a custom constructor, you should instanitate them first and pass the instance."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The provided arguments can be an arbitrary mix of classes and instances."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "*magic_objects",
            "type_": "one or more classes or instances",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Register one or more instances of Magics."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "item_file": "/dev/ipython/IPython/core/magic.py",
  "item_line": 415,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.magic.MagicsManager.register"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "8.1.0.dev",
  "signature": "register(self, *magic_objects)",
  "references": null,
  "logo": "logo.png",
  "qa": "IPython.core.magic.MagicsManager.register",
  "arbitrary": []
}