{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "To remove in the future \u2013\u2013 IPython.core.ultratb"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dev/ipython/IPython/core/ultratb.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "aliases": [
    "IPython.core.ultratb"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "8.1.0.dev",
  "signature": null,
  "references": null,
  "logo": "logo.png",
  "qa": "IPython.core.ultratb",
  "arbitrary": [
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Verbose and colourful traceback formatting."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Strong",
                "data": {
                  "content": {
                    "value": "ColorTB"
                  }
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "I've always found it a bit hard to visually parse tracebacks in Python.  The ColorTB class is a solution to that problem.  It colors the different parts of a traceback in a manner similar to what you would expect from a syntax-highlighting text editor."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Installation instructions for ColorTB::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "import sys,ultratb\nsys.excepthook = ultratb.ColorTB()"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Strong",
                "data": {
                  "content": {
                    "value": "VerboseTB"
                  }
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "I've also included a port of Ka-Ping Yee's \"cgitb.py\" that produces all kinds of useful info when a traceback occurs.  Ping originally had it spit out HTML and intended it for CGI programmers, but why should they have all the fun?  I altered it to spit out colored text to the terminal.  It's a bit overwhelming, but kind of neat, and maybe useful for long-running programs that you believe are bug-free.  If a crash "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "does"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " occur in that type of program you want details. Give it a shot--you'll love it or you'll hate it."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Admonition",
          "data": {
            "kind": "note",
            "title": "",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "The Verbose mode prints the variables currently visible where the exception happened ( shortening their strings if too long). This can potentially be very slow, if you happen to have a huge data structure whose string representation is complex to compute. Your computer may appear to freeze for a while with cpu usage at 100%. If this occurs, you can cancel the traceback with Ctrl - C ( maybe hitting it more than once). If you encounter this kind of situation often, you may want to use the Verbose_novars mode instead of the regular Verbose, which avoids formatting variables ( but otherwise includes the information and context given by Verbose). "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        },
        {
          "type": "Admonition",
          "data": {
            "kind": "note",
            "title": "",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "The verbose mode print all variables in the stack, which means it can potentially leak sensitive information like access keys, or unencrypted password. "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Installation instructions for VerboseTB::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "import sys,ultratb\nsys.excepthook = ultratb.VerboseTB()"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Note:  Much of the code in this module was lifted verbatim from the standard library module 'traceback.py' and Ka-Ping Yee's 'cgitb.py'."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The colors are defined in the class TBTools through the use of the ColorSchemeTable class. Currently the following exist:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "- NoColor: allows all of this module to be used in any terminal (the color",
              "  escapes are just dummy blank strings).",
              "",
              "- Linux: is meant to look good in a terminal like the Linux console (black",
              "  or very dark background).",
              "",
              "- LightBG: similar to Linux but swaps dark/light colors to be more readable",
              "  in light background terminals.",
              "",
              "- Neutral: a neutral color scheme that should be readable on both light and",
              "  dark background"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "You can implement other color schemes easily, the syntax is fairly self-explanatory. Please send back new schemes you develop to the author for possible inclusion in future releases."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Inheritance diagram:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "directive_name": "inheritance-diagram",
            "args0": [
              "IPython.core.ultratb"
            ],
            "inner": {
              "inline": [],
              "inner": []
            }
          }
        }
      ],
      "title": "Color schemes"
    }
  ]
}