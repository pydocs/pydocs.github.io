{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Any class that subclasses Magics "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "must"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " also apply this decorator, to ensure that all the methods that have been decorated as line/cell magics get correctly registered in the class instance.  This is necessary because when method decorators run, the class does not exist yet, so they temporarily store their information into a module global.  Application of this class decorator copies that global data to the class instance and clears the global."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Obviously, this mechanism is not thread-safe, which means that the "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "creation"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of subclasses of Magic should only be done in a single-thread context.  Instantiation of the classes has no restrictions.  Given that these classes are typically created at IPython startup time and before user application code becomes active, in practice this should not pose any problems."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Class decorator for all subclasses of the main Magics class."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dev/ipython/IPython/core/magic.py",
  "item_line": 85,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.magic.magics_class"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "8.1.0.dev",
  "signature": "magics_class(cls)",
  "references": null,
  "logo": "logo.png",
  "qa": "IPython.core.magic.magics_class",
  "arbitrary": []
}