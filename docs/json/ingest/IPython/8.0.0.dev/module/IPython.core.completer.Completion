{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Admonition",
          "data": {
            "kind": "warning",
            "title": "",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "Unstable This function is unstable, API may change without warning. It will also raise unless use in proper context manager. "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This act as a middle ground "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Completion",
                  "reference": {
                    "module": "IPython",
                    "version": "8.0.0.dev",
                    "kind": "module",
                    "path": "IPython.core.completer.Completion"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " object between the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "jedi.api.classes.Completion"
                  ],
                  "domain": null,
                  "role": "any"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " object and the Prompt Toolkit completion object. While Jedi need a lot of information about evaluator and how the code should be ran/inspected, PromptToolkit (and other frontend) mostly need user facing information."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Which range should be replaced replaced by what."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Some metadata (like completion type), or meta information to displayed to   the use user."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For debugging purpose we can also store the origin of the completion ("
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "jedi"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "IPython.python_matches"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "IPython.magics_matches"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "...)."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Completion object used and return by IPython completers."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "IPython",
      "version": "8.0.0.dev",
      "kind": "module",
      "path": "IPython.core.completer.Completion"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/dev/ipython/IPython/core/completer.py",
  "item_line": 358,
  "item_type": "<class 'type'>",
  "aliases": [
    "IPython.core.completer.Completion"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "8.0.0.dev",
  "signature": "Completion(start: int, end: int, text: str, *, type: str = None, _origin='', signature='') -> None",
  "references": null,
  "logo": "logo.png",
  "qa": "IPython.core.completer.Completion",
  "arbitrary": []
}