{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The CPU and wall clock times are printed, and the value of the expression (if any) is returned.  Note that under Win32, system time is always reported as 0, since it can not be measured."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function can be used both as a line and cell magic:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "In line mode you can time a single-line statement (though multiple   ones can be chained with using semicolons)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "In cell mode, you can time the cell body (a directly   following statement raises an error)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function provides very basic timing functionality.  Use the timeit magic for more control over the measurement."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Admonition",
          "data": {
            "kind": "versionchanged",
            "title": "7.3",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "User variables are no longer expanded, the magic line is always left unmodified. "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Time execution of a Python statement or expression."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples"
  ],
  "item_file": "/dev/ipython/IPython/core/magics/execution.py",
  "item_line": 1196,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.magics.ExecutionMagics.time"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "In [1]: %time 2**128",
            "CPU times: user 0.00 s, sys: 0.00 s, total: 0.00 s",
            "Wall time: 0.00",
            "Out[1]: 340282366920938463463374607431768211456L"
          ]
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "In [2]: n = 1000000"
          ]
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "In [3]: %time sum(range(n))",
            "CPU times: user 1.20 s, sys: 0.05 s, total: 1.25 s",
            "Wall time: 1.37",
            "Out[3]: 499999500000L"
          ]
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "In [4]: %time print 'hello world'",
            "hello world",
            "CPU times: user 0.00 s, sys: 0.00 s, total: 0.00 s",
            "Wall time: 0.00"
          ]
        }
      },
      {
        "type": "Admonition",
        "data": {
          "kind": "note",
          "title": "",
          "children": [
            {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "The time needed by Python to compile the given expression will be reported if it is more than 0.1s. "
                  }
                }
              ],
              "inner": []
            }
          ]
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "In the example below, the actual exponentiation is done by Python",
            "at compilation time, so while the expression can take a noticeable",
            "amount of time to compute, that time is purely due to the",
            "compilation::"
          ]
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "In [5]: %time 3**9999;",
            "CPU times: user 0.00 s, sys: 0.00 s, total: 0.00 s",
            "Wall time: 0.00 s"
          ]
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "In [6]: %time 3**999999;",
            "CPU times: user 0.00 s, sys: 0.00 s, total: 0.00 s",
            "Wall time: 0.00 s",
            "Compiler : 0.78 s"
          ]
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "version": "8.0.0.dev",
  "signature": "time(self, line='', cell=None, local_ns=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "IPython.core.magics.execution.ExecutionMagics.time",
  "arbitrary": []
}