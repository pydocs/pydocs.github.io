{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "prop",
            "type_": "`~matplotlib.font_manager.FontProperties`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The font properties for the text."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "s",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The text to be converted."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ismath",
            "type_": "{False, True, \"TeX\"}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, use mathtext parser.  If \"TeX\", use tex for rendering."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "verts",
            "type_": "list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of numpy arrays containing the x and y coordinates of the vertices."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "codes",
            "type_": "list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of path codes."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Convert text "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "s"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to path (a tuple of vertices and codes for matplotlib.path.Path)."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "item_file": "/matplotlib/textpath.py",
  "item_line": 73,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.textpath.TextToPath.get_text_path"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Create a list of vertices and codes from a text, and create a "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": ".Path",
                "reference": {
                  "module": "matplotlib",
                  "version": "3.5.0",
                  "kind": "module",
                  "path": "matplotlib.path.Path"
                },
                "kind": "module",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " from those::"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "from matplotlib.path import Path",
            "from matplotlib.textpath import TextToPath",
            "from matplotlib.font_manager import FontProperties"
          ]
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "fp = FontProperties(family=\"Humor Sans\", style=\"italic\")",
            "verts, codes = TextToPath().get_text_path(fp, \"ABC\")",
            "path = Path(verts, codes, closed=False)"
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Also see "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "TextPath",
                "reference": {
                  "module": "matplotlib",
                  "version": "3.5.0",
                  "kind": "module",
                  "path": "matplotlib.textpath.TextPath"
                },
                "kind": "module",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " for a more direct way to create a path from a text."
              }
            }
          ],
          "inner": []
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "get_text_path(self, prop, s, ismath=False)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.textpath.TextToPath.get_text_path",
  "arbitrary": []
}