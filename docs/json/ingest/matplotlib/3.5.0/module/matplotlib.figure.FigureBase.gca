{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If there is currently no Axes on this Figure, a new one is created using "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".Figure.add_subplot"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".  (To test whether there is currently an Axes on a Figure, check whether "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "figure.axes"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is empty.  To test whether there is currently a Figure on the pyplot figure stack, check whether "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".pyplot.get_fignums()"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is empty.)"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The following kwargs are supported for ensuring the returned Axes adheres to the given projection etc., and for Axes creation if the active Axes does not exist:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": []
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": []
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties:"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "adjustable: {'box', 'datalim'}     agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array     alpha: scalar or None     anchor: (float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}     animated: bool     aspect: {'auto', 'equal'} or float     autoscale_on: bool     autoscalex_on: bool     autoscaley_on: bool     axes_locator: Callable[[Axes, Renderer], Bbox]     axisbelow: bool or 'line'     box_aspect: float or None     clip_box: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Bbox"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     clip_on: bool     clip_path: Patch or (Path, Transform) or None     facecolor or fc: color     figure: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".Figure",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.figure.Figure"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     frame_on: bool     gid: str     in_layout: bool     label: object     navigate: bool     navigate_mode: unknown     path_effects: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".AbstractPathEffect",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.patheffects.AbstractPathEffect"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     picker: None or bool or float or callable     position: [left, bottom, width, height] or "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              "~matplotlib.transforms.Bbox"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     prop_cycle: unknown     rasterization_zorder: float or None     rasterized: bool     sketch_params: (scale: float, length: float, randomness: float)     snap: bool or None     title: str     transform: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".Transform",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.transforms.Transform"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     url: str     visible: bool     xbound: unknown     xlabel: str     xlim: (bottom: float, top: float)     xmargin: float greater than -0.5     xscale: {\"linear\", \"log\", \"symlog\", \"logit\", ...} or "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".ScaleBase",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.scale.ScaleBase"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     xticklabels: unknown     xticks: unknown     ybound: unknown     ylabel: str     ylim: (bottom: float, top: float)     ymargin: float greater than -0.5     yscale: {\"linear\", \"log\", \"symlog\", \"logit\", ...} or "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".ScaleBase",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.scale.ScaleBase"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     yticklabels: unknown     yticks: unknown     zorder: float"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Get the current Axes."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.figure.Figure"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.patheffects.AbstractPathEffect"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.transforms.Transform"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.scale.ScaleBase"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/matplotlib/figure.py",
  "item_line": 1483,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.figure.FigureBase.gca"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "gca(self, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.figure.FigureBase.gca",
  "arbitrary": []
}