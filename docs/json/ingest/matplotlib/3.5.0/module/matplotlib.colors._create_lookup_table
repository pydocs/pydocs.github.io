{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This assumes a mapping "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "f : [0, 1] \\rightarrow [0, 1]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". The returned data is an array of N values "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "y = f(x)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " where x is sampled from [0, 1]."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "By default ("
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "gamma"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " = 1) x is equidistantly sampled from [0, 1]. The "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "gamma"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " correction factor "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "\\gamma"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " distorts this equidistant sampling by "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "x \\rightarrow x^\\gamma"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function is internally used for "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": ".LinearSegmentedColormap",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.0",
                    "kind": "module",
                    "path": "matplotlib.colors.LinearSegmentedColormap"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "N",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of elements of the created lookup table; at least 1."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "data",
            "type_": "(M, 3) array-like or callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Defines the mapping "
                      }
                    },
                    {
                      "type": "Math",
                      "data": {
                        "value": [
                          "f"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If a (M, 3) array-like, the rows define values (x, y0, y1).  The x values must start with x=0, end with x=1, and all x values be in increasing order."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A value between "
                      }
                    },
                    {
                      "type": "Math",
                      "data": {
                        "value": [
                          "x_i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Math",
                      "data": {
                        "value": [
                          "x_{i+1}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is mapped to the range "
                      }
                    },
                    {
                      "type": "Math",
                      "data": {
                        "value": [
                          "y^1_{i-1} \\ldots y^0_i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " by linear interpolation."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For the simple case of a y-continuous mapping, y0 and y1 are identical."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The two values of y are to allow for discontinuous mapping functions. E.g. a sawtooth with a period of 0.2 and an amplitude of 1 would be::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "[(0, 1, 0), (0.2, 1, 0), (0.4, 1, 0), ..., [(1, 1, 0)]",
                        "_number": 0,
                        "_offset": 0
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "In the special case of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "N == 1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", by convention the returned value is y0 for x == 1."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "data"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a callable, it must accept and return numpy arrays::     "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "data(x : ndarray) -> ndarray",
                        "_number": 0,
                        "_offset": 0
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "and map values between 0 - 1 to 0 - 1."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "gamma",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Gamma correction factor for input distribution x of the mapping."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See also https://en.wikipedia.org/wiki/Gamma_correction."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The lookup table where "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "lut[x * (N-1)]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " gives the closest value for values of x between 0 and 1."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Create an "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "N"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " -element 1D lookup table."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.colors.LinearSegmentedColormap"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "item_file": "/matplotlib/colors.py",
  "item_line": 439,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.colors._create_lookup_table"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "_create_lookup_table(N, data, gamma=1.0)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.colors._create_lookup_table",
  "arbitrary": []
}