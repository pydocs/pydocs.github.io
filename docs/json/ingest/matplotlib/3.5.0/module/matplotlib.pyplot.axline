{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The line can be defined either by two points "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy2"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", or by one point "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and a "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "slope"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This draws a straight line \"on the screen\", regardless of the x and y scales, and is thus also suitable for drawing exponential decays in semilog plots, power laws in loglog plots, etc. However, "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "slope"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " should only be used with linear scales; It has no clear meaning for all other scales, and thus the behavior is undefined. Please specify the line using the points "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy2"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for non-linear scales."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "transform"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " keyword argument only applies to the points "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy2"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". The "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "slope"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (if given) is always in data coordinates. This can be used e.g. with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "ax.transAxes"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for drawing grid lines with a fixed slope."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Valid kwargs are "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Line2D",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.lines.Line2D"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " properties"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties: agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: scalar or None animated: bool antialiased or aa: bool clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color or c: color dash_capstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".CapStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib._enums.CapStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'butt', 'projecting', 'round'} dash_joinstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".JoinStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib._enums.JoinStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'miter', 'round', 'bevel'} dashes: sequence of floats (on/off ink in points) or (None, None) data: (2, N) array or two 1D arrays drawstyle or ds: {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default' figure: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Figure",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.figure.Figure"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fillstyle: {'full', 'left', 'right', 'bottom', 'top', 'none'} gid: str in_layout: bool label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float marker: marker style string, "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~.path.Path",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.path.Path"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~.markers.MarkerStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.markers.MarkerStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " markeredgecolor or mec: color markeredgewidth or mew: float markerfacecolor or mfc: color markerfacecoloralt or mfcalt: color markersize or ms: float markevery: None or int or (int, int) or slice or list[int] or float or (float, float) or list[bool] path_effects: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".AbstractPathEffect",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.patheffects.AbstractPathEffect"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: float or callable[[Artist, Event], tuple[bool, dict]] pickradius: float rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None solid_capstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".CapStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib._enums.CapStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'butt', 'projecting', 'round'} solid_joinstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".JoinStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib._enums.JoinStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'miter', 'round', 'bevel'} transform: unknown url: str visible: bool xdata: 1D array ydata: 1D array zorder: float"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "xy1, xy2",
            "type_": "(float, float)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Points for the line to pass through. Either "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xy2"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "slope"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " has to be given."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "slope",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The slope of the line. Either "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xy2"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "slope"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " has to be given."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "`.Line2D`",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Add an infinitely long straight line."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib._enums.CapStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.figure.Figure"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.patheffects.AbstractPathEffect"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.lines.Line2D"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib._enums.JoinStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.path.Path"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.markers.MarkerStyle"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Examples"
  ],
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2365,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.axline"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Draw a thick red line passing through (0, 0) and (1, 1)::"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            ">>> axline((0, 0), (1, 1), linewidth=4, color='r')"
          ]
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "axhline",
        "ref": "matplotlib.pyplot.axhline",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "for horizontal lines"
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "axvline",
        "ref": "matplotlib.pyplot.axvline",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "for vertical lines"
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "3.5.0",
  "signature": "axline(xy1, xy2=None, *, slope=None, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.pyplot.axline",
  "arbitrary": []
}