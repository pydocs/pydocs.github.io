{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "values",
            "type_": "array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The step heights."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "edges",
            "type_": "array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The edge positions, with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "len(edges) == len(vals) + 1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", between which the curve takes on vals values."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "orientation",
            "type_": "{'vertical', 'horizontal'}, default: 'vertical'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The direction of the steps. Vertical means that "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "values"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are along the y-axis, and edges are along the x-axis."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "baseline",
            "type_": "float, array-like or None, default: 0",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bottom value of the bounding edges or when "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fill=True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", position of lower edge. If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fill"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True or an array is passed to "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "baseline"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", a closed path is drawn."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Other valid keyword arguments are:",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Properties:",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: unknown animated: bool antialiased or aa: bool or None capstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".CapStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib._enums.CapStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'butt', 'projecting', 'round'} clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color: color edgecolor or ec: color or None facecolor or fc: color or None figure: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Figure",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.figure.Figure"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fill: bool gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".JoinStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib._enums.JoinStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'miter', 'round', 'bevel'} label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float or None path_effects: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".AbstractPathEffect",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.patheffects.AbstractPathEffect"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: None or bool or float or callable rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Transform",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.transforms.Transform"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool zorder: float"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib._enums.CapStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib._enums.JoinStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.figure.Figure"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.patheffects.AbstractPathEffect"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.transforms.Transform"
    }
  ],
  "ordered_sections": [
    "Parameters"
  ],
  "item_file": "/matplotlib/patches.py",
  "item_line": 937,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.legend.StepPatch.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "__init__(self, values, edges, *, orientation='vertical', baseline=0, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.patches.StepPatch.__init__",
  "arbitrary": []
}