{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "arrowstyle",
            "type_": "None or ArrowStyle or str, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Can be a string with arrowstyle name with optional comma-separated attributes, e.g.::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "set_arrowstyle(\"Fancy,head_length=0.2\")",
                        "_number": 0,
                        "_offset": 0
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Alternatively attributes can be provided as keywords, e.g.::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "set_arrowstyle(\"fancy\", head_length=0.2)",
                        "_number": 0,
                        "_offset": 0
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Set the arrow style. Old attributes are forgotten. Without arguments (or with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "arrowstyle=None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") returns available box styles as a list of strings."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters"
  ],
  "item_file": "/matplotlib/patches.py",
  "item_line": 4366,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.offsetbox.FancyArrowPatch.set_arrowstyle"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "set_arrowstyle(self, arrowstyle=None, **kw)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.patches.FancyArrowPatch.set_arrowstyle",
  "arbitrary": []
}