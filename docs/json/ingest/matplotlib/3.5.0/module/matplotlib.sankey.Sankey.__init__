{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The optional arguments listed below are applied to all subdiagrams so that there is consistent alignment and formatting."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "In order to draw a complex Sankey diagram, create an instance of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Sankey",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.0",
                    "kind": "module",
                    "path": "matplotlib.sankey.Sankey"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " by calling it without any kwargs::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "sankey = Sankey()",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Then add simple Sankey sub-diagrams::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "sankey.add() # 1",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "sankey.add() # 2",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "#...",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "sankey.add() # n",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Finally, create the full diagram::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "sankey.finish()",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Or, instead, simply daisy-chain those calls::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "Sankey().add().add...  .add().finish()",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            }
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "ax",
            "type_": "`~.axes.Axes`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axes onto which the data should be plotted.  If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "ax"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " isn't provided, new Axes will be created."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "scale",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Scaling factor for the flows.  "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "scale"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " sizes the width of the paths in order to maintain proper layout.  The same scale is applied to all subdiagrams.  The value should be chosen such that the product of the scale and the sum of the inputs is approximately 1.0 (and the product of the scale and the sum of the outputs is approximately -1.0)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "unit",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The physical unit associated with the flow quantities.  If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "unit"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, then none of the quantities are labeled."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "format",
            "type_": "str or callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A Python number formatting string or callable used to label the flows with their quantities (i.e., a number times a unit, where the unit is given). If a format string is given, the label will be "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "format % quantity"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If a callable is given, it will be called with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "quantity"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " as an argument."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "gap",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Space between paths that break in/break away to/from the top or bottom."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "radius",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Inner radius of the vertical paths."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "shoulder",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Size of the shoulders of output arrows."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "offset",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Text offset (from the dip or tip of the arrow)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "head_angle",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Angle, in degrees, of the arrow heads (and negative of the angle of the tails)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "margin",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Minimum space between Sankey outlines and the edge of the plot area."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "tolerance",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Acceptable maximum of the magnitude of the sum of flows.  The magnitude of the sum of connected flows cannot be greater than "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "tolerance"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Any additional keyword arguments will be passed to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "add",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.sankey.Sankey.add"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", which will create the first subdiagram."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Create a new Sankey instance."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.sankey.Sankey"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.sankey.Sankey.add"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Other Parameters",
    "See Also",
    "Examples"
  ],
  "item_file": "/matplotlib/sankey.py",
  "item_line": 42,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.sankey.Sankey.__init__"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "BlockDirective",
        "data": {
          "directive_name": "plot",
          "args0": [],
          "inner": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "gallery / specialty_plots / sankey_basics.py "
                }
              }
            ],
            "inner": []
          }
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "Sankey.add",
        "ref": "matplotlib.sankey.Sankey.add",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "Sankey.finish",
        "ref": "matplotlib.sankey.Sankey.finish",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "3.5.0",
  "signature": "__init__(self, ax=None, scale=1.0, unit='', format='%G', gap=0.25, radius=0.1, shoulder=0.03, offset=0.15, head_angle=100, margin=0.4, tolerance=1e-06, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.sankey.Sankey.__init__",
  "arbitrary": []
}