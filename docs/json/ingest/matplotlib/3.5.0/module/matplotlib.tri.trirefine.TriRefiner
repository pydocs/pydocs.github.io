{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "A TriRefiner encapsulates a Triangulation object and provides tools for mesh refinement and interpolation."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Derived classes must implement:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "refine_triangulation(return_tri_index=False, **kwargs)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " , where   the optional keyword arguments "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "kwargs"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are defined in each   TriRefiner concrete implementation, and which returns:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "a refined triangulation,"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "optionally (depending on "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "return_tri_index"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "), for each     point of the refined triangulation: the index of     the initial triangulation triangle to which it belongs."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "refine_field(z, triinterpolator=None, **kwargs)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", where:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "z"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " array of field values (to refine) defined at the base     triangulation nodes,"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "triinterpolator"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is an optional "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "~matplotlib.tri.TriInterpolator"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ","
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "the other optional keyword arguments "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "kwargs"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " are defined in     each TriRefiner concrete implementation;"
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "and which returns (as a tuple) a refined triangular mesh and the   interpolated values of the field at the refined triangulation nodes."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Abstract base class for classes implementing mesh refinement."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/matplotlib/tri/trirefine.py",
  "item_line": 12,
  "item_type": "<class 'type'>",
  "aliases": [
    "matplotlib.tri.TriRefiner"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "TriRefiner(triangulation)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.tri.trirefine.TriRefiner",
  "arbitrary": []
}