{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Call signature::    "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "savefig(fname, *, dpi='figure', format=None, metadata=None,",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "        bbox_inches=None, pad_inches=0.1,",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "        facecolor='auto', edgecolor='auto',",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "        backend=None, **kwargs",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "       )",
                  "_number": 4,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The available output formats depend on the backend being used."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "dpi",
            "type_": "float or 'figure', default: :rc:`savefig.dpi`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The resolution in dots per inch.  If 'figure', use the figure's dpi value."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "format",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The file format, e.g. 'png', 'pdf', 'svg', ... The behavior when this is unset is documented under "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fname"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "metadata",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Key/value pairs to store in the image metadata. The supported keys and defaults depend on the image format and backend:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'png' with Agg backend: See the parameter "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "metadata"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "~.FigureCanvasAgg.print_png"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'pdf' with pdf backend: See the parameter "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "metadata"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "~.backend_pdf.PdfPages"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'svg' with svg backend: See the parameter "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "metadata"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "~.FigureCanvasSVG.print_svg"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'eps' and 'ps' with PS backend: Only 'Creator' is supported."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bbox_inches",
            "type_": "str or `.Bbox`, default: :rc:`savefig.bbox`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Bounding box in inches: only the given portion of the figure is saved.  If 'tight', try to figure out the tight bbox of the figure."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "pad_inches",
            "type_": "float, default: :rc:`savefig.pad_inches`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Amount of padding around the figure when bbox_inches is 'tight'."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "facecolor",
            "type_": "color or 'auto', default: :rc:`savefig.facecolor`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The facecolor of the figure.  If 'auto', use the current figure facecolor."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "edgecolor",
            "type_": "color or 'auto', default: :rc:`savefig.edgecolor`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The edgecolor of the figure.  If 'auto', use the current figure edgecolor."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "backend",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Use a non-default backend to render the file, e.g. to render a png file with the \"cairo\" backend rather than the default \"agg\", or a pdf file with the \"pgf\" backend rather than the default \"pdf\".  Note that the default backend is normally sufficient.  See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "the-builtin-backends"
                        ],
                        "domain": null,
                        "role": "ref"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for a list of valid backends for each file format.  Custom backends can be referenced as \"module://...\"."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "orientation",
            "type_": "{'landscape', 'portrait'}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Currently only supported by the postscript backend."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "papertype",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "One of 'letter', 'legal', 'executive', 'ledger', 'a0' through 'a10', 'b0' through 'b10'. Only supported for postscript output."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "transparent",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "True"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the Axes patches will all be transparent; the Figure patch will also be transparent unless "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "facecolor"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and/or "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "edgecolor"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are specified via kwargs."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "False"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " has no effect and the color of the Axes and Figure patches are unchanged (unless the Figure patch is specified via the "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "facecolor"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and/or "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "edgecolor"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " keyword arguments in which case those colors are used)."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The transparency of these patches will be restored to their original values upon exit of this function."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This is useful, for example, for displaying a plot on top of a colored background on a web page."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bbox_extra_artists",
            "type_": "list of `~matplotlib.artist.Artist`, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of extra artists that will be considered when the tight bbox is calculated."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "pil_kwargs",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Additional keyword arguments that are passed to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "PIL.Image.Image.save"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " when saving the figure."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "fname",
            "type_": "str or path-like or binary file-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A path, or a Python file-like object, or possibly some backend-dependent object such as "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "matplotlib.backends.backend_pdf.PdfPages",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.backends.backend_pdf.PdfPages"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "format"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set, it determines the output format, and the file is saved as "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fname"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  Note that "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fname"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is used verbatim, and there is no attempt to make the extension, if any, of "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fname"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " match "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "format"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", and no extension is appended."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "format"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not set, then the format is inferred from the extension of "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fname"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", if there is one.  If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "format"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not set and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fname"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " has no extension, then the file is saved with "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "savefig.format"
                        ],
                        "domain": null,
                        "role": "rc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and the appropriate extension is appended to "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "fname"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Save the current figure."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.backends.backend_pdf.PdfPages"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Other Parameters"
  ],
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 955,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.savefig"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "savefig(*args, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.pyplot.savefig",
  "arbitrary": []
}