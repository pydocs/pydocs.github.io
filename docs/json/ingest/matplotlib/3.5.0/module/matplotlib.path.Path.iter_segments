{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Each iteration returns a pair "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "(vertices, code)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", where "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "vertices"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a sequence of 1-3 coordinate pairs, and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "code"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Path",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.0",
                    "kind": "module",
                    "path": "matplotlib.path.Path"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " code."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Additionally, this method can provide a number of standard cleanups and conversions to the path."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "transform",
            "type_": "None or :class:`~matplotlib.transforms.Transform`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not None, the given affine transformation will be applied to the path."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "remove_nans",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to remove all NaNs from the path and skip over them using MOVETO commands."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "clip",
            "type_": "None or (float, float, float, float), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not None, must be a four-tuple (x1, y1, x2, y2) defining a rectangle in which to clip the path."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "snap",
            "type_": "None or bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, snap all nodes to pixels; if False, don't snap them. If None, snap if the path contains only segments parallel to the x or y axes, and no more than 1024 of them."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "stroke_width",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The width of the stroke being drawn (used for path snapping)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "simplify",
            "type_": "None or bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to simplify the path by removing vertices that do not affect its appearance.  If None, use the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "should_simplify"
                        ],
                        "domain": null,
                        "role": "attr"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " attribute.  See also "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "path.simplify"
                        ],
                        "domain": null,
                        "role": "rc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "path.simplify_threshold"
                        ],
                        "domain": null,
                        "role": "rc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "curves",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, curve segments will be returned as curve segments. If False, all curves will be converted to line segments."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sketch",
            "type_": "None or sequence, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not None, must be a 3-tuple of the form (scale, length, randomness), representing the sketch parameters."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Iterate over all curve segments in the path."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.path.Path"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "item_file": "/matplotlib/path.py",
  "item_line": 346,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.transforms.Path.iter_segments"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "iter_segments(self, transform=None, remove_nans=True, clip=None, snap=False, stroke_width=1.0, simplify=None, curves=True, sketch=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.path.Path.iter_segments",
  "arbitrary": []
}