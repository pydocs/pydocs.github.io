{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "fps"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "codec"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "bitrate"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "extra_args"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "metadata"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are used to construct a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": ".MovieWriter",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.0",
                    "kind": "module",
                    "path": "matplotlib.animation.MovieWriter"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " instance and can only be passed if "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "writer"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a string.  If they are passed as non-"
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "None"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "writer"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": ".MovieWriter",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.0",
                    "kind": "module",
                    "path": "matplotlib.animation.MovieWriter"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "RuntimeError"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will be raised."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "filename",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The output filename, e.g., "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "mymovie.mp4"
                        ],
                        "domain": null,
                        "role": "file"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "writer",
            "type_": "`MovieWriter` or str, default: :rc:`animation.writer`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "MovieWriter",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.animation.MovieWriter"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance to use or a key that identifies a class to use, such as 'ffmpeg'."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fps",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Movie frame rate (per second).  If not set, the frame rate from the animation's frame interval."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dpi",
            "type_": "float, default: :rc:`savefig.dpi`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Controls the dots per inch for the movie frames.  Together with the figure's size in inches, this controls the size of the movie."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "codec",
            "type_": "str, default: :rc:`animation.codec`.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The video codec to use.  Not all codecs are supported by a given "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "MovieWriter",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.animation.MovieWriter"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bitrate",
            "type_": "int, default: :rc:`animation.bitrate`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bitrate of the movie, in kilobits per second.  Higher values means higher quality movies, but increase the file size.  A value of -1 lets the underlying movie encoder select the bitrate."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extra_args",
            "type_": "list of str or None, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Extra command-line arguments passed to the underlying movie encoder.  The default, None, means to use "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "animation.[name-of-encoder]_args"
                        ],
                        "domain": null,
                        "role": "rc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for the builtin writers."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "metadata",
            "type_": "dict[str, str], default: {}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dictionary of keys and values for metadata to include in the output file. Some keys that may be of use include: title, artist, genre, subject, copyright, srcform, comment."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extra_anim",
            "type_": "list, default: []",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Additional "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "Animation",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.animation.Animation"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " objects that should be included in the saved movie file. These need to be from the same "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "matplotlib.figure.Figure",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.figure.Figure"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance. Also, animation frames will just be simply combined, so there should be a 1:1 correspondence between the frames from the different animations."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "savefig_kwargs",
            "type_": "dict, default: {}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Keyword arguments passed to each "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~.Figure.savefig",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.figure.Figure.savefig"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " call used to save the individual frames."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "progress_callback",
            "type_": "function, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A callback function that will be called for every frame to notify the saving progress. It must have the signature ::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "def func(current_frame: int, total_frames: int) -> Any",
                        "_number": 0,
                        "_offset": 0
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "where "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "current_frame"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the current frame number and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "total_frames"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the total number of frames to be saved. "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "total_frames"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set to None, if the total number of frames can not be determined. Return values may exist but are ignored."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Example code to write the progress to stdout::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "progress_callback =                    lambda i, n: print(f'Saving frame {i} of {n}')",
                        "_number": 0,
                        "_offset": 0
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Save the animation as a movie file by drawing every frame."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.figure.Figure"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.animation.Animation"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.animation.MovieWriter"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.figure.Figure.savefig"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "item_file": "/matplotlib/animation.py",
  "item_line": 924,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.animation.Animation.save"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "save(self, filename, writer=None, fps=None, dpi=None, codec=None, bitrate=None, extra_args=None, metadata=None, extra_anim=None, savefig_kwargs=None, *, progress_callback=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.animation.Animation.save",
  "arbitrary": []
}