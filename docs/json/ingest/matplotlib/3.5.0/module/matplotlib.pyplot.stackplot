{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "(N,) array-like",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "y",
            "type_": "(M, N) array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The data is assumed to be unstacked. Each of the following calls is legal::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "stackplot(x, y)           # where y has shape (M, N)",
                        "_number": 0,
                        "_offset": 0
                      },
                      {
                        "_line": "stackplot(x, y1, y2, y3)  # where y1, y2, y3, y4 have length N",
                        "_number": 1,
                        "_offset": 0
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "baseline",
            "type_": "{'zero', 'sym', 'wiggle', 'weighted_wiggle'}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Method used to calculate the baseline:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "'zero'"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ": Constant zero baseline, i.e. a simple stacked plot."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "'sym'"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ":  Symmetric around zero and is sometimes called   'ThemeRiver'."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "'wiggle'"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ": Minimizes the sum of the squared slopes."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "'weighted_wiggle'"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ": Does the same but weights to account for   size of each layer. It is also called 'Streamgraph'-layout. More   details can be found at http://leebyron.com/streamgraph/."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "labels",
            "type_": "list of str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A sequence of labels to assign to each data series. If unspecified, then no labels will be applied to artists."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "colors",
            "type_": "list of color, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A sequence of colors to be cycled through and used to color the stacked areas. The sequence need not be exactly the same length as the number of provided "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "y"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", in which case the colors will repeat from the beginning."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not specified, the colors from the Axes property cycle will be used."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "data",
            "type_": "indexable object, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If given, all parameters also accept a string "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", which is interpreted as "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "data[s]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (unless this raises an exception)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "All other keyword arguments are passed to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Axes.fill_between"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "list of `.PolyCollection`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".PolyCollection"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instances, one for each element in the stacked area plot."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Draw a stacked area plot."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2858,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.stackplot"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "stackplot(x, *args, labels=(), colors=None, baseline='zero', data=None, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.pyplot.stackplot",
  "arbitrary": []
}