{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "In the simplest form, the text is placed at "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Optionally, the text can be displayed in another position "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xytext"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". An arrow pointing from the text to the annotated point "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " can then be added by defining "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "arrowprops"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "text",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The text of the annotation."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xy",
            "type_": "(float, float)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The point "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "(x, y)"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to annotate. The coordinate system is determined by "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xycoords"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xytext",
            "type_": "(float, float), default: *xy*",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The position "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "(x, y)"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to place the text at. The coordinate system is determined by "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "textcoords"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xycoords",
            "type_": "str or `.Artist` or `.Transform` or callable or (float, float), default: 'data'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The coordinate system that "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xy"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is given in. The following types of values are supported:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "One of the following strings:"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "==================== ============================================   Value                Description   ==================== ============================================   'figure points'      Points from the lower left of the figure   'figure pixels'      Pixels from the lower left of the figure   'figure fraction'    Fraction of figure from lower left   'subfigure points'   Points from the lower left of the subfigure   'subfigure pixels'   Pixels from the lower left of the subfigure   'subfigure fraction' Fraction of subfigure from lower left   'axes points'        Points from lower left corner of axes   'axes pixels'        Pixels from lower left corner of axes   'axes fraction'      Fraction of axes from lower left   'data'               Use the coordinate system of the object                        being annotated (default)   'polar'              "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "(theta, r)"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " if not native 'data'                        coordinates   ==================== ============================================"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "Note that 'subfigure pixels' and 'figure pixels' are the same   for the parent figure, so users who want code that is usable in   a subfigure can use 'subfigure pixels'."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "An "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                ".Artist"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ": "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "xy"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is interpreted as a fraction of the artist's   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "~matplotlib.transforms.Bbox"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ". E.g. "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "(0, 0)"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " would be the lower   left corner of the bounding box and "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "(0.5, 1)"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " would be the   center top of the bounding box."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "A "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                ".Transform"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " to transform "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "xy"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " to screen coordinates."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "A function with one of the following signatures::      "
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "BlockVerbatim",
                      "data": {
                        "lines": {
                          "_lines": [
                            {
                              "_line": "def transform(renderer) -> Bbox",
                              "_number": 0,
                              "_offset": 0
                            },
                            {
                              "_line": "def transform(renderer) -> Transform",
                              "_number": 1,
                              "_offset": 0
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "where "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "renderer"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is a "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                ".RendererBase"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " subclass."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "The result of the function is interpreted like the "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                ".Artist"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                ".Transform"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " cases above."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "A tuple "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "(xcoords, ycoords)"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " specifying separate coordinate   systems for "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "x"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "y"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ". "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "xcoords"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "ycoords"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " must each be   of one of the above described types."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "plotting-guide-annotation"
                        ],
                        "domain": null,
                        "role": "ref"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for more details."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "textcoords",
            "type_": "str or `.Artist` or `.Transform` or callable or (float, float), default: value of *xycoords*",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The coordinate system that "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xytext"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is given in."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "All "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xycoords"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " values are valid as well as the following strings:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "=================   ========================================= Value               Description =================   ========================================= 'offset points'     Offset (in points) from the "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xy"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " value 'offset pixels'     Offset (in pixels) from the "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xy"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " value =================   ========================================="
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "arrowprops",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The properties used to draw a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".FancyArrowPatch",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.patches.FancyArrowPatch"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " arrow between the positions "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xy"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xytext"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Note that the edge of the arrow pointing to "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xytext"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will be centered on the text itself and may not point directly to the coordinates given in "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xytext"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "arrowprops"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " does not contain the key 'arrowstyle' the allowed keys are:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "==========   ====================================================== Key          Description ==========   ====================================================== width        The width of the arrow in points headwidth    The width of the base of the arrow head in points headlength   The length of the arrow head in points shrink       Fraction of total length to shrink from both ends ?            Any key to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "matplotlib.patches.FancyArrowPatch",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.patches.FancyArrowPatch"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ==========   ======================================================"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "arrowprops"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " contains the key 'arrowstyle' the above keys are forbidden.  The allowed values of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'arrowstyle'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "============   ============================================= Name           Attrs ============   ============================================= "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'-'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "        None "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'->'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "       head_length=0.4,head_width=0.2 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'-['"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "       widthB=1.0,lengthB=0.2,angleB=None "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'|-|'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      widthA=1.0,widthB=1.0 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'-|>'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      head_length=0.4,head_width=0.2 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'<-'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "       head_length=0.4,head_width=0.2 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'<->'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      head_length=0.4,head_width=0.2 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'<|-'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      head_length=0.4,head_width=0.2 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'<|-|>'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "    head_length=0.4,head_width=0.2 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'fancy'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "    head_length=0.4,head_width=0.4,tail_width=0.4 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'simple'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   head_length=0.5,head_width=0.5,tail_width=0.2 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'wedge'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "    tail_width=0.3,shrink_factor=0.5 ============   ============================================="
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Valid keys for "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~matplotlib.patches.FancyArrowPatch",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.patches.FancyArrowPatch"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "===============  ================================================== Key              Description ===============  ================================================== arrowstyle       the arrow style connectionstyle  the connection style relpos           default is (0.5, 0.5) patchA           default is bounding box of the text patchB           default is None shrinkA          default is 2 points shrinkB          default is 2 points mutation_scale   default is text size (in points) mutation_aspect  default is 1. ?                any key for "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "matplotlib.patches.PathPatch",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.patches.PathPatch"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ===============  =================================================="
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Defaults to None, i.e. no arrow is drawn."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "annotation_clip",
            "type_": "bool or None, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to draw the annotation when the annotation point "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "xy"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is outside the axes area."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "True"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", the annotation will only be drawn when "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "xy"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is   within the axes."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "False"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", the annotation will always be drawn."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "None"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", the annotation will only be drawn when "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "xy"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is   within the axes and "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "xycoords"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is 'data'."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Additional kwargs are passed to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~matplotlib.text.Text",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.0",
                          "kind": "module",
                          "path": "matplotlib.text.Text"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "`.Annotation`",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Annotate the point "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "xy"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with text "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "text"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.text.Text"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.patches.PathPatch"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.patches.FancyArrowPatch"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "item_file": "/matplotlib/text.py",
  "item_line": 1615,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Annotation.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "plotting-guide-annotation",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "ref"
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "3.5.0",
  "signature": "__init__(self, text, xy, xytext=None, xycoords='data', textcoords=None, arrowprops=None, annotation_clip=None, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.text.Annotation.__init__",
  "arbitrary": []
}