{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Supported properties are"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": []
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": []
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties:"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array     alpha: float or 2D array-like or None     animated: bool     array: array-like     clim: (vmin: float, vmax: float)     clip_box: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Bbox"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     clip_on: bool     clip_path: Patch or (Path, Transform) or None     cmap: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".Colormap",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.colors.Colormap"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " or str or None     data: array-like or "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              "PIL.Image.Image"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     figure: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".Figure",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.figure.Figure"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     filternorm: bool     filterrad: positive float     gid: str     in_layout: bool     interpolation: {'antialiased', 'nearest', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos', 'none'} or None     interpolation_stage: {'data', 'rgba'} or None     label: object     norm: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".Normalize",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.colors.Normalize"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " or None     path_effects: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".AbstractPathEffect",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.patheffects.AbstractPathEffect"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     picker: None or bool or float or callable     rasterized: bool     resample: bool or None     sketch_params: (scale: float, length: float, randomness: float)     snap: bool or None     transform: "
                          }
                        },
                        {
                          "type": "Link",
                          "data": {
                            "value": ".Transform",
                            "reference": {
                              "module": "matplotlib",
                              "version": "3.5.0",
                              "kind": "module",
                              "path": "matplotlib.transforms.Transform"
                            },
                            "kind": "module",
                            "exists": true
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "     url: str     visible: bool     zorder: float"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Set multiple properties at once."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.colors.Normalize"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.colors.Colormap"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.figure.Figure"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.patheffects.AbstractPathEffect"
    },
    {
      "module": "matplotlib",
      "version": "3.5.0",
      "kind": "module",
      "path": "matplotlib.transforms.Transform"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/matplotlib/artist.py",
  "item_line": 116,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.image._ImageBase.set"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "set(self, *, agg_filter=<UNSET>, alpha=<UNSET>, animated=<UNSET>, array=<UNSET>, clim=<UNSET>, clip_box=<UNSET>, clip_on=<UNSET>, clip_path=<UNSET>, cmap=<UNSET>, data=<UNSET>, filternorm=<UNSET>, filterrad=<UNSET>, gid=<UNSET>, in_layout=<UNSET>, interpolation=<UNSET>, interpolation_stage=<UNSET>, label=<UNSET>, norm=<UNSET>, path_effects=<UNSET>, picker=<UNSET>, rasterized=<UNSET>, resample=<UNSET>, sketch_params=<UNSET>, snap=<UNSET>, transform=<UNSET>, url=<UNSET>, visible=<UNSET>, zorder=<UNSET>)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.artist._ImageBase.set",
  "arbitrary": []
}