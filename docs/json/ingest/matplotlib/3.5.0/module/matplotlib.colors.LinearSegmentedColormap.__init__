{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "segmentdata argument is a dictionary with a red, green and blue entries. Each entry should be a list of "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "x"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "y0"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "y1"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " tuples, forming rows in a table. Entries for alpha are optional."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Example: suppose you want red to increase from 0 to 1 over the bottom half, green to do the same over the middle half, and blue over the top half.  Then you would use::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "cdict = {'red':   [(0.0,  0.0, 0.0),",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "                   (0.5,  1.0, 1.0),",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "                   (1.0,  1.0, 1.0)],",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "         'green': [(0.0,  0.0, 0.0),",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "                   (0.25, 0.0, 0.0),",
                  "_number": 5,
                  "_offset": 0
                },
                {
                  "_line": "                   (0.75, 1.0, 1.0),",
                  "_number": 6,
                  "_offset": 0
                },
                {
                  "_line": "                   (1.0,  1.0, 1.0)],",
                  "_number": 7,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 8,
                  "_offset": 0
                },
                {
                  "_line": "         'blue':  [(0.0,  0.0, 0.0),",
                  "_number": 9,
                  "_offset": 0
                },
                {
                  "_line": "                   (0.5,  0.0, 0.0),",
                  "_number": 10,
                  "_offset": 0
                },
                {
                  "_line": "                   (1.0,  1.0, 1.0)]}",
                  "_number": 11,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Each row in the table for a given color is a sequence of "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "x"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "y0"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "y1"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " tuples.  In each sequence, "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "x"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must increase monotonically from 0 to 1.  For any input value "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "z"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " falling between "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "x[i]"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "x[i+1]"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the output value of a given color will be linearly interpolated between "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "y1[i]"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "y0[i+1]"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "row i:   x  y0  y1",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "               /",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "              /",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "row i+1: x  y0  y1",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Hence y0 in the first row and y1 in the last row are never used."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Create colormap from linear mapping segments"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "See Also"
  ],
  "item_file": "/matplotlib/colors.py",
  "item_line": 858,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.colors.LinearSegmentedColormap.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "LinearSegmentedColormap.from_list",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Static method; factory function for generating a smoothly-varying LinearSegmentedColormap."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "3.5.0",
  "signature": "__init__(self, name, segmentdata, N=256, gamma=1.0)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.colors.LinearSegmentedColormap.__init__",
  "arbitrary": []
}