{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "# In general:",
              "A - B == A + B.inverted()",
              "# (but see note regarding frozen transforms below).",
              "",
              "# If A \"ends with\" B (i.e. A == A' + B for some A') we can cancel",
              "# out B:",
              "(A' + B) - B == A'",
              "",
              "# Likewise, if B \"starts with\" A (B = A + B'), we can cancel out A:",
              "A - (A + B') == B'.inverted() == B'^-1"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Cancellation (rather than naively returning "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A + B.inverted()"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") is important for multiple reasons:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "It avoids floating-point inaccuracies when computing the inverse of   B: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "B - B"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is guaranteed to cancel out exactly (resulting in the   identity transform), whereas "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "B + B.inverted()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " may differ by a   small epsilon."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "B.inverted()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " always returns a frozen transform: if one computes   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A + B + B.inverted()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and later mutates "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "B"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", then   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "B.inverted()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " won't be updated and the last two terms won't cancel   out anymore; on the other hand, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A + B - B"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will always be equal to   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " even if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "B"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is mutated."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Compose "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "self"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with the inverse of "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "other"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", cancelling identical terms if any::"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/matplotlib/transforms.py",
  "item_line": 1426,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.transforms.Transform.__sub__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.0",
  "signature": "__sub__(self, other)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.transforms.Transform.__sub__",
  "arbitrary": []
}