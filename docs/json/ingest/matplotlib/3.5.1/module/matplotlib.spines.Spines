{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The interface is dict-like mapping names (e.g. 'left') to "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": ".Spine",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.1",
                    "kind": "module",
                    "path": "matplotlib.spines.Spine"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " objects. Additionally it implements some pandas.Series-like features like accessing elements by attribute::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "spines['top'].set_visible(False)\nspines.top.set_visible(False)"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Multiple spines can be addressed simultaneously by passing a list::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "spines[['top', 'right']].set_visible(False)"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Use an open slice to address all spines::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "spines[:].set_visible(False)"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The latter two indexing methods will return a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "SpinesProxy",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.1",
                    "kind": "module",
                    "path": "matplotlib.spines.SpinesProxy"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that broadcasts all "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "set_*"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " calls to its members, but cannot be used for any other operation."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The container of all "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": ".Spine",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.1",
                    "kind": "module",
                    "path": "matplotlib.spines.Spine"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "\\s in an Axes."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.spines.Spine"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.spines.SpinesProxy"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/matplotlib/spines.py",
  "item_line": 513,
  "item_type": "<class 'abc.ABCMeta'>",
  "aliases": [
    "matplotlib.spines.Spines"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "Spines(**kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.spines.Spines",
  "arbitrary": []
}