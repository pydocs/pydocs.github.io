{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The first five parameters (up to "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "sketch"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") are interpreted as in "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": ".cleanup_path",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".  The following ones are detailed below."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "path",
            "type_": "Path",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "trans",
            "type_": "Transform or None",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "clip_rect",
            "type_": "sequence of 4 floats, or None",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "simplify",
            "type_": "bool",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sketch",
            "type_": "tuple of 3 floats, or None",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "precision",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The precision used to \"%.*f\"-format the values.  Trailing zeros and decimal points are always removed.  (precision=-1 is a special case used to implement ttconv-back-compatible conversion.)"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "codes",
            "type_": "sequence of 5 bytestrings",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bytes representation of each opcode (MOVETO, LINETO, CURVE3, CURVE4, CLOSEPOLY), in that order.  If the bytes for CURVE3 is empty, quad segments are automatically converted to cubic ones (this is used by backends such as pdf and ps, which do not support quads)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "postfix",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether the opcode comes after the values (True) or before (False)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Convert "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "path"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to a bytestring."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "aliases": [
    "matplotlib._path.convert_to_string"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "convert_to_string(path, trans, clip_rect, simplify, sketch, precision, codes, postfix)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib._path.convert_to_string",
  "arbitrary": []
}