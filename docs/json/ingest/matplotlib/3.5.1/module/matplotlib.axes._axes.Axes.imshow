{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The input may either be actual RGB(A) data, or 2D scalar data, which will be rendered as a pseudocolor image. For displaying a grayscale image set up the colormapping using the parameters "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cmap='gray', vmin=0, vmax=255"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The number of pixels used to render an image is set by the Axes size and the "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "dpi"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of the figure. This can lead to aliasing artifacts when the image is resampled because the displayed image size will usually not match the size of "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "X"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (see "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "/gallery/images_contours_and_fields/image_antialiasing",
                  "domain": null,
                  "role": "doc"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "). The resampling can be controlled via the "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "interpolation"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " parameter and/or "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "image.interpolation",
                  "domain": null,
                  "role": "rc"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Unless "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "extent"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is used, pixel centers will be located at integer coordinates. In other words: the origin will coincide with the center of pixel (0, 0)."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "There are two common representations for RGB images with an alpha channel:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Straight (unassociated) alpha: R, G, and B channels represent the     color of the pixel, disregarding its opacity."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Premultiplied (associated) alpha: R, G, and B channels represent     the color of the pixel, adjusted for its opacity by multiplication."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Link",
                "data": {
                  "value": "~matplotlib.pyplot.imshow",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.1",
                    "kind": "module",
                    "path": "matplotlib.pyplot.imshow"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " expects RGB images adopting the straight (unassociated) alpha representation."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "data",
            "type_": "indexable object, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If given, all parameters also accept a string "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", which is interpreted as "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "data[s]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (unless this raises an exception)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "`~matplotlib.artist.Artist` properties",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "These parameters are passed on to the constructor of the "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".AxesImage",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.image.AxesImage"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " artist."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "X",
            "type_": "array-like or PIL image",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The image data. Supported array shapes are:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(M, N): an image with scalar data. The values are mapped to   colors using normalization and a colormap. See parameters "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "norm"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ",   "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "cmap"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "vmin"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "vmax"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(M, N, 3): an image with RGB values (0-1 float or 0-255 int)."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(M, N, 4): an image with RGBA values (0-1 float or 0-255 int),   i.e. including transparency."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The first two dimensions (M, N) define the rows and columns of the image."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Out-of-range RGB(A) values are clipped."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cmap",
            "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The Colormap instance or registered colormap name used to map scalar data to colors. This parameter is ignored for RGB(A) data."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "norm",
            "type_": "`~matplotlib.colors.Normalize`, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Normalize",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.colors.Normalize"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance used to scale scalar data to the [0, 1] range before mapping to colors using "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "cmap"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". By default, a linear scaling mapping the lowest value to 0 and the highest to 1 is used. This parameter is ignored for RGB(A) data."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "aspect",
            "type_": "{'equal', 'auto'} or float, default: :rc:`image.aspect`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The aspect ratio of the Axes.  This parameter is particularly relevant for images since it determines whether data pixels are square."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This parameter is a shortcut for explicitly calling "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": ".Axes.set_aspect",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". See there for further details."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'equal': Ensures an aspect ratio of 1. Pixels will be square   (unless pixel sizes are explicitly made non-square in data   coordinates using "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "extent"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ")."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'auto': The Axes is kept fixed and the aspect is adjusted so   that the data fit in the Axes. In general, this will result in   non-square pixels."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "interpolation",
            "type_": "str, default: :rc:`image.interpolation`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The interpolation method used."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Supported values are 'none', 'antialiased', 'nearest', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos', 'blackman'."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "interpolation"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is 'none', then no interpolation is performed on the Agg, ps, pdf and svg backends. Other backends will fall back to 'nearest'. Note that most SVG renderers perform interpolation at rendering and that the default interpolation method they implement may differ."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "interpolation"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the default 'antialiased', then 'nearest' interpolation is used if the image is upsampled by more than a factor of three (i.e. the number of display pixels is at least three times the size of the data array).  If the upsampling rate is smaller than 3, or the image is downsampled, then 'hanning' interpolation is used to act as an anti-aliasing filter, unless the image happens to be upsampled by exactly a factor of two or one."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "/gallery/images_contours_and_fields/interpolation_methods",
                        "domain": null,
                        "role": "doc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for an overview of the supported interpolation methods, and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "/gallery/images_contours_and_fields/image_antialiasing",
                        "domain": null,
                        "role": "doc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for a discussion of image antialiasing."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Some interpolation methods require an additional radius parameter, which can be set by "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "filterrad"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Additionally, the antigrain image resize filter is controlled by the parameter "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "filternorm"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "interpolation_stage",
            "type_": "{'data', 'rgba'}, default: 'data'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If 'data', interpolation is carried out on the data provided by the user.  If 'rgba', the interpolation is carried out after the colormapping has been applied (visual interpolation)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "alpha",
            "type_": "float or array-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The alpha blending value, between 0 (transparent) and 1 (opaque). If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "alpha"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is an array, the alpha blending values are applied pixel by pixel, and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "alpha"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must have the same shape as "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "X"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "vmin, vmax",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When using scalar data and no explicit "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "norm"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "vmin"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "vmax"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " define the data range that the colormap covers. By default, the colormap covers the complete value range of the supplied data. It is an error to use "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "vmin"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "/"
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "vmax"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " when "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "norm"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is given. When using RGB(A) data, parameters "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "vmin"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "/"
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "vmax"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are ignored."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "origin",
            "type_": "{'upper', 'lower'}, default: :rc:`image.origin`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Place the [0, 0] index of the array in the upper left or lower left corner of the Axes. The convention (the default) 'upper' is typically used for matrices and images."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Note that the vertical axis points upward for 'lower' but downward for 'upper'."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "/tutorials/intermediate/imshow_extent",
                        "domain": null,
                        "role": "doc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " tutorial for examples and a more detailed description."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extent",
            "type_": "floats (left, right, bottom, top), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bounding box in data coordinates that the image will fill. The image is stretched individually along x and y to fill the box."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The default extent is determined by the following conditions. Pixels have unit size in data coordinates. Their centers are on integer coordinates, and their center coordinates range from 0 to columns-1 horizontally and from 0 to rows-1 vertically."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Note that the direction of the vertical axis and thus the default values for top and bottom depend on "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "origin"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ":"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "For "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "origin == 'upper'"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " the default is   "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "(-0.5, numcols-0.5, numrows-0.5, -0.5)"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "For "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "origin == 'lower'"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " the default is   "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "(-0.5, numcols-0.5, -0.5, numrows-0.5)"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "/tutorials/intermediate/imshow_extent",
                        "domain": null,
                        "role": "doc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " tutorial for examples and a more detailed description."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "filternorm",
            "type_": "bool, default: True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A parameter for the antigrain image resize filter (see the antigrain documentation).  If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "filternorm"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set, the filter normalizes integer values and corrects the rounding errors. It doesn't do anything with the source floating point values, it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0.  So, the filter function must produce a graph of the proper shape."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "filterrad",
            "type_": "float > 0, default: 4.0",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The filter radius for filters that have a radius parameter, i.e. when interpolation is one of: 'sinc', 'lanczos' or 'blackman'."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "resample",
            "type_": "bool, default: :rc:`image.resample`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "True"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", use a full resampling method.  When "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "False"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", only resample when the output image is larger than the input image."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "url",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Set the url of the created "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".AxesImage",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.image.AxesImage"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". See "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Artist.set_url",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.artist.Artist.set_url"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "`~matplotlib.image.AxesImage`",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Display data as an image, i.e., on a 2D regular raster."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.colors.Normalize"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.pyplot.imshow"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.artist.Artist.set_url"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.image.AxesImage"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "item_file": "/matplotlib/axes/_axes.py",
  "item_line": 5279,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Axes.imshow"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "matshow",
        "ref": "matplotlib.axes._axes.Axes.matshow",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Plot a matrix or an array as an image."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "3.5.1",
  "signature": "imshow(self, X, cmap=None, norm=None, *, aspect=None, interpolation=None, alpha=None, vmin=None, vmax=None, origin=None, extent=None, interpolation_stage=None, filternorm=True, filterrad=4.0, resample=None, url=None, data=None, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.axes._axes.Axes.imshow",
  "arbitrary": []
}