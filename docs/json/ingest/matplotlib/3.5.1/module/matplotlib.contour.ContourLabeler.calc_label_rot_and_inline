{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "lc"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is not None or empty, also break contours and compute inlining."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "spacing"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the empty space to leave around the label, in pixels."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Both tasks are done together to avoid calculating path lengths multiple times, which is relatively costly."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The method used here involves computing the path length along the contour in pixel coordinates and then looking approximately (label width / 2) away from central point to determine rotation and then to break contour if desired."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Calculate the appropriate label rotation given the linecontour coordinates in screen units, the index of the label location and the label width."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/matplotlib/contour.py",
  "item_line": 353,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.contour.ContourLabeler.calc_label_rot_and_inline"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "calc_label_rot_and_inline(self, slc, ind, lw, lc=None, spacing=5)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.contour.ContourLabeler.calc_label_rot_and_inline",
  "arbitrary": []
}