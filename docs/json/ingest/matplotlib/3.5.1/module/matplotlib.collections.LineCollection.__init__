{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "segments",
            "type_": "list of array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A sequence of ("
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "line0"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "line1"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "line2"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), where::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "linen = (x0, y0), (x1, y1), ... (xm, ym)"
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "or the equivalent numpy array with two columns. Each line can have a different number of segments."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "linewidths",
            "type_": "float or list of float, default: :rc:`lines.linewidth`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The width of each line in points."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "colors",
            "type_": "color or list of color, default: :rc:`lines.color`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A sequence of RGBA tuples (e.g., arbitrary color strings, etc, not allowed)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "antialiaseds",
            "type_": "bool or list of bool, default: :rc:`lines.antialiased`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to use antialiasing for each line."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "zorder",
            "type_": "int, default: 2",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "zorder of the lines once drawn."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "facecolors",
            "type_": "color or list of color, default: 'none'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When setting "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "facecolors"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", each line is interpreted as a boundary for an area, implicitly closing the path from the last point to the first point. The enclosed area is filled with "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "facecolor"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". In order to manually specify what should count as the \"interior\" of each line, please use "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".PathCollection",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.collections.PathCollection"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instead, where the \"interior\" can be specified by appropriate usage of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "~.path.Path.CLOSEPOLY",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Forwarded to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Collection",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.collections.Collection"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.collections.Collection"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.collections.PathCollection"
    }
  ],
  "ordered_sections": [
    "Parameters"
  ],
  "item_file": "/matplotlib/collections.py",
  "item_line": 1392,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.collections.LineCollection.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "__init__(self, segments, *args, zorder=2, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.collections.LineCollection.__init__",
  "arbitrary": []
}