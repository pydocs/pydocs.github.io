{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "posA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "posB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are given, a path connecting two points is   created according to "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "connectionstyle"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". The path will be   clipped with "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "patchA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "patchB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and further shrunken by   "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "shrinkA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "shrinkB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". An arrow is drawn along this   resulting path using the "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "arrowstyle"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " parameter."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Alternatively if "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "path"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is provided, an arrow is drawn along this   path and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "patchA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "patchB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "shrinkA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "shrinkB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are ignored."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "`.Patch` properties, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Here is a list of available "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Patch",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.patches.Patch"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " properties:"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Properties:",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: unknown animated: bool antialiased or aa: bool or None capstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".CapStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib._enums.CapStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'butt', 'projecting', 'round'} clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": ".Bbox",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color: color edgecolor or ec: color or None facecolor or fc: color or None figure: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Figure",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.figure.Figure"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fill: bool gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".JoinStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib._enums.JoinStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or {'miter', 'round', 'bevel'} label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float or None path_effects: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": ".AbstractPathEffect",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: None or bool or float or callable rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Transform",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.transforms.Transform"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool zorder: float"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "In contrast to other patches, the default "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "capstyle"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "joinstyle"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "FancyArrowPatch",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.patches.FancyArrowPatch"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are set to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"round\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "posA, posB",
            "type_": "(float, float), default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "(x, y) coordinates of arrow tail and arrow head respectively."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "path",
            "type_": "`~matplotlib.path.Path`, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If provided, an arrow is drawn along this path and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "patchA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "patchB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "shrinkA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "shrinkB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are ignored."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "arrowstyle",
            "type_": "str or `.ArrowStyle`, default: 'simple'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".ArrowStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.patches.ArrowStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with which the fancy arrow is drawn.  If a string, it should be one of the available arrowstyle names, with optional comma-separated attributes.  The optional attributes are meant to be scaled with the "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "mutation_scale"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  The following arrow styles are available:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "=============  ==========  =============================================================================================================================== Class          Name        Attrs =============  ==========  =============================================================================================================================== Curve          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "       None CurveA         "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      head_length=0.4, head_width=0.2, widthA=1.0, widthB=1.0, lengthA=0.2, lengthB=0.2, angleA=0, angleB=0, scaleA=None, scaleB=None CurveB         "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "->"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      head_length=0.4, head_width=0.2, widthA=1.0, widthB=1.0, lengthA=0.2, lengthB=0.2, angleA=0, angleB=0, scaleA=None, scaleB=None CurveAB        "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<->"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     head_length=0.4, head_width=0.2, widthA=1.0, widthB=1.0, lengthA=0.2, lengthB=0.2, angleA=0, angleB=0, scaleA=None, scaleB=None CurveFilledA   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<|-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     head_length=0.4, head_width=0.2, widthA=1.0, widthB=1.0, lengthA=0.2, lengthB=0.2, angleA=0, angleB=0, scaleA=None, scaleB=None CurveFilledB   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-|>"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     head_length=0.4, head_width=0.2, widthA=1.0, widthB=1.0, lengthA=0.2, lengthB=0.2, angleA=0, angleB=0, scaleA=None, scaleB=None CurveFilledAB  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<|-|>"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   head_length=0.4, head_width=0.2, widthA=1.0, widthB=1.0, lengthA=0.2, lengthB=0.2, angleA=0, angleB=0, scaleA=None, scaleB=None BracketA       "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "]-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      widthA=1.0, lengthA=0.2, angleA=0 BracketB       "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-["
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      widthB=1.0, lengthB=0.2, angleB=0 BracketAB      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "]-["
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     widthA=1.0, lengthA=0.2, angleA=0, widthB=1.0, lengthB=0.2, angleB=0 BarAB          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "|-|"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     widthA=1.0, angleA=0, widthB=1.0, angleB=0 BracketCurve   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "]->"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     widthA=1.0, lengthA=0.2, angleA=None CurveBracket   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<-["
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     widthB=1.0, lengthB=0.2, angleB=None Simple         "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "simple"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "  head_length=0.5, head_width=0.5, tail_width=0.2 Fancy          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fancy"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   head_length=0.4, head_width=0.4, tail_width=0.4 Wedge          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "wedge"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   tail_width=0.3, shrink_factor=0.5 =============  ==========  ==============================================================================================================================="
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "connectionstyle",
            "type_": "str or `.ConnectionStyle` or None, optional, default: 'arc3'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".ConnectionStyle",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.patches.ConnectionStyle"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with which "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "posA"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "posB"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are connected. If a string, it should be one of the available connectionstyle names, with optional comma-separated attributes.  The following connection styles are available:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "======  ==========  ================================================= Class   Name        Attrs ======  ==========  ================================================= Arc3    "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "arc3"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "    rad=0.0 Angle3  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "angle3"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "  angleA=90, angleB=0 Angle   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "angle"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   angleA=90, angleB=0, rad=0.0 Arc     "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "arc"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     angleA=0, angleB=0, armA=None, armB=None, rad=0.0 Bar     "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "bar"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     armA=0.0, armB=0.0, fraction=0.3, angle=None ======  ==========  ================================================="
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "patchA, patchB",
            "type_": "`.Patch`, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Head and tail patches, respectively."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "shrinkA, shrinkB",
            "type_": "float, default: 2",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Shrinking factor of the tail and head of the arrow respectively."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mutation_scale",
            "type_": "float, default: 1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Value with which attributes of "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "arrowstyle"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (e.g., "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "head_length"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") will be scaled."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mutation_aspect",
            "type_": "None or float, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The height of the rectangle will be squeezed by this value before the mutation and the mutated box will be stretched by the inverse of it."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dpi_cor",
            "type_": "float, default: 1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "dpi_cor is currently used for linewidth-related things and shrink factor. Mutation scale is affected by this.  Deprecated."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "There are two ways for defining an arrow:"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.patches.Patch"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.patches.ArrowStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib._enums.JoinStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.patches.ConnectionStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.patches.FancyArrowPatch"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib._enums.CapStyle"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.figure.Figure"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.transforms.Transform"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Other Parameters"
  ],
  "item_file": "/matplotlib/patches.py",
  "item_line": 4160,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.offsetbox.FancyArrowPatch.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "__init__(self, posA=None, posB=None, path=None, arrowstyle='simple', connectionstyle='arc3', patchA=None, patchB=None, shrinkA=2, shrinkB=2, mutation_scale=1, mutation_aspect=1, dpi_cor=<deprecated parameter>, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.patches.FancyArrowPatch.__init__",
  "arbitrary": []
}