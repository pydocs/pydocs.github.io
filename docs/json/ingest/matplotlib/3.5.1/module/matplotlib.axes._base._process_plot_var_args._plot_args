{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This processes a single set of ([x], y, [fmt]) parameters; i.e. for "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "plot(x, y, x2, y2)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " it will be called twice. Once for (x, y) and once for (x2, y2)."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "x and y may be 2D and thus can still represent multiple datasets."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For multiple datasets, if the keyword argument "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "label"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a list, this will unpack the list and assign the individual labels to the datasets."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "tup",
            "type_": "tuple",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A tuple of the positional parameters. This can be one of"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(y,)"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(x, y)"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(y, fmt)"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(x, y, fmt)"
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "kwargs",
            "type_": "dict",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The keyword arguments passed to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "plot()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "return_kwargs",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If true, return the effective keyword arguments after label unpacking as well."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "result",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "return_kwargs"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is false, a list of Artists representing the dataset(s). If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "return_kwargs"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is true, a list of (Artist, effective_kwargs) representing the dataset(s). See "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "return_kwargs"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". The Artist is either "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Line2D",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.lines.Line2D"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (if called from "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "plot()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") or "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Polygon",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.patches.Polygon"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " otherwise."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Process the arguments of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "plot([x], y, [fmt], **kwargs)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " calls."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.patches.Polygon"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.lines.Line2D"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/matplotlib/axes/_base.py",
  "item_line": 406,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.axes._base._process_plot_var_args._plot_args"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "_plot_args(self, tup, kwargs, return_kwargs=False)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.axes._base._process_plot_var_args._plot_args",
  "arbitrary": []
}