{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Either "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "transform"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", or both "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "base"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "linthresh"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", must be given."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "transform",
            "type_": "`~.scale.SymmetricalLogTransform`, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If set, defines the "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "base"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "linthresh"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " of the symlog transform."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "base, linthresh",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "base"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "linthresh"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " of the symlog transform, as documented for "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".SymmetricalLogScale",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.scale.SymmetricalLogScale"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  These parameters are only used if "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "transform"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not set."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "subs",
            "type_": "sequence of float, default: [1]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The multiples of integer powers of the base where ticks are placed, i.e., ticks are placed at "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[sub * base**i for i in ... for sub in subs]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.scale.SymmetricalLogScale"
    }
  ],
  "ordered_sections": [
    "Parameters",
    "Notes"
  ],
  "item_file": "/matplotlib/ticker.py",
  "item_line": 2433,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.scale.SymmetricalLogLocator.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "__init__(self, transform=None, subs=None, linthresh=None, base=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.ticker.SymmetricalLogLocator.__init__",
  "arbitrary": []
}