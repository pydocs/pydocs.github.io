{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Each legend handle is a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": ".Line2D",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.1",
                    "kind": "module",
                    "path": "matplotlib.lines.Line2D"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " representing the Path that was drawn, and each label is a string what each Path represents."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This is useful for obtaining a legend for a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "~.Axes.scatter",
                  "reference": {
                    "module": "matplotlib",
                    "version": "3.5.1",
                    "kind": "module",
                    "path": "matplotlib.axes._axes.Axes.scatter"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " plot; e.g.::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "scatter = plt.scatter([1, 2, 3],  [4, 5, 6],  c=[7, 2, 3])\nplt.legend(*scatter.legend_elements())"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "creates three legend elements, one for each color with the numerical values passed to "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "c"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " as the labels."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Also see the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "automatedlegendcreation",
                  "domain": null,
                  "role": "ref"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " example."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "prop",
            "type_": "{\"colors\", \"sizes\"}, default: \"colors\"",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If \"colors\", the legend handles will show the different colors of the collection. If \"sizes\", the legend will show the different sizes. To set both, use "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "kwargs"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to directly edit the "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Line2D",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.lines.Line2D"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " properties."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "num",
            "type_": "int, None, \"auto\" (default), array-like, or `~.ticker.Locator`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Target number of elements to create. If None, use all unique elements of the mappable array. If an integer, target to use "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "num"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " elements in the normed range. If "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "\"auto\""
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", try to determine which option better suits the nature of the data. The number of created elements may slightly deviate from "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "num"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " due to a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~.ticker.Locator",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.ticker.Locator"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " being used to find useful locations. If a list or array, use exactly those elements for the legend. Finally, a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~.ticker.Locator",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.ticker.Locator"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " can be provided."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fmt",
            "type_": "str, `~matplotlib.ticker.Formatter`, or None (default)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The format or formatter to use for the labels. If a string must be a valid input for a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".StrMethodFormatter",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.ticker.StrMethodFormatter"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If None (the default), use a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".ScalarFormatter",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.ticker.ScalarFormatter"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "func",
            "type_": "function, default: ``lambda x: x``",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Function to calculate the labels.  Often the size (or color) argument to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "~.Axes.scatter",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.axes._axes.Axes.scatter"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will have been pre-processed by the user using a function "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s = f(x)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to make the markers visible; e.g. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "size = np.log10(x)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  Providing the inverse of this function here allows that pre-processing to be inverted, so that the legend labels have the correct values; e.g. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "func = lambda\nx: 10**x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Allowed keyword arguments are "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "color"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "size"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". E.g. it may be useful to set the color of the markers if "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "prop=\"sizes\""
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is used; similarly to set the size of the markers if "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "prop=\"colors\""
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is used. Any further parameters are passed onto the "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": ".Line2D",
                        "reference": {
                          "module": "matplotlib",
                          "version": "3.5.1",
                          "kind": "module",
                          "path": "matplotlib.lines.Line2D"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance. This may be useful to e.g. specify a different "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "markeredgecolor"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "alpha"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for the legend handles."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "handles",
            "type_": "list of `.Line2D`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Visual representation of each element of the legend."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "labels",
            "type_": "list of str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The string labels for elements of the legend."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Create legend handles and labels for a PathCollection."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.ticker.ScalarFormatter"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.ticker.Locator"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.axes._axes.Axes.scatter"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.lines.Line2D"
    },
    {
      "module": "matplotlib",
      "version": "3.5.1",
      "kind": "module",
      "path": "matplotlib.ticker.StrMethodFormatter"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/matplotlib/collections.py",
  "item_line": 1025,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.collections.PathCollection.legend_elements"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "3.5.1",
  "signature": "legend_elements(self, prop='colors', num='auto', fmt=None, func=<function PathCollection.<lambda> at 0x0000000>, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "matplotlib.collections.PathCollection.legend_elements",
  "arbitrary": []
}