{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "key"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " can be an integer or string.  If integer, it is the index in the list.  If string,"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "a. Field (column) names are case sensitive: you can have two",
              "   different columns called 'abc' and 'ABC' respectively.",
              "",
              "b. When you *refer* to a field (presumably with the field",
              "   method), it will try to match the exact name first, so in",
              "   the example in (a), field('abc') will get the first field,",
              "   and field('ABC') will get the second field.",
              "",
              "If there is no exact name matched, it will try to match the",
              "name with case insensitivity.  So, in the last example,",
              "field('Abc') will cause an exception since there is no unique",
              "mapping.  If there is a field named \"XYZ\" and no other field",
              "name is a case variant of \"XYZ\", then field('xyz'),",
              "field('Xyz'), etc. will get this field."
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Get the index of the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "key"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "names"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " list."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/astropy/io/fits/column.py",
  "item_line": 2017,
  "item_type": "<class 'function'>",
  "aliases": [
    "astropy.io.fits.column._get_index"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "5.0",
  "signature": "_get_index(names, key)",
  "references": null,
  "logo": "logo.png",
  "qa": "astropy.io.fits.column._get_index",
  "arbitrary": []
}