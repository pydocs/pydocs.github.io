{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "pos=None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the card can be anywhere in the header.  If the card does not exist, the new card will have the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "fix_value"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " as its value when created.  Also check the card's value by using the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "test"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " argument."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "keyword",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The keyword to validate"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "pos",
            "type_": "int, callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If an "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "int"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", this specifies the exact location this card should have in the header.  Remember that Python is zero-indexed, so this means "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pos=0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " requires the card to be the first card in the header.  If given a callable, it should take one argument--the actual position of the keyword--and return "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  This can be used for custom evaluation.  For example if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pos=lambda idx: idx > 10"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " this will check that the keyword's index is greater than 10."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "test",
            "type_": "callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This should be a callable (generally a function) that is passed the value of the given keyword and returns "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  This can be used to validate the value associated with the given keyword."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fix_value",
            "type_": "str, int, float, complex, bool, None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A valid value for a FITS keyword to to use if the given "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "test"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fails to replace an invalid value.  In other words, this provides a default value to use as a replacement if the keyword's current value is invalid.  If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", there is no replacement value and the keyword is unfixable."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "option",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Output verification option.  Must be one of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"fix\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"silentfix\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"ignore\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"warn\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"exception\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  May also be any combination of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"fix\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"silentfix\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"+ignore\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "+warn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "+exception\"\n(e.g. ``\"fix+warn\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "astropy:verify"
                        ],
                        "domain": null,
                        "role": "ref"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for more info."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "errlist",
            "type_": "list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of validation errors already found in the FITS file; this is used primarily for the validation system to collect errors across multiple HDUs and multiple calls to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "req_cards",
                        "reference": {
                          "module": "astropy",
                          "version": "5.0",
                          "kind": "module",
                          "path": "astropy.io.fits.hdu.base._ValidHDU.req_cards"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Check the existence, location, and value of a required "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Card"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "astropy",
      "version": "5.0",
      "kind": "module",
      "path": "astropy.io.fits.hdu.base._ValidHDU.req_cards"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "item_file": "/astropy/io/fits/hdu/base.py",
  "item_line": 1093,
  "item_type": "<class 'function'>",
  "aliases": [
    "astropy.io.fits.convenience._ValidHDU.req_cards"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "5.0",
  "signature": "req_cards(self, keyword, pos, test, fix_value, option, errlist)",
  "references": null,
  "logo": "logo.png",
  "qa": "astropy.io.fits.hdu.base._ValidHDU.req_cards",
  "arbitrary": []
}