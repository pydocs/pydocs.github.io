{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The primary use for the "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "tabledump",
                  "reference": {
                    "module": "astropy",
                    "version": "5.0",
                    "kind": "module",
                    "path": "astropy.io.fits.convenience.tabledump"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " function is to allow editing in a standard text editor of the table data and parameters.  The "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "tableload",
                  "reference": {
                    "module": "astropy",
                    "version": "5.0",
                    "kind": "module",
                    "path": "astropy.io.fits.convenience.tableload"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " function can be used to reassemble the table from the three ASCII files."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "datafile:"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " Each line of the data file represents one row of table   data.  The data is output one column at a time in column order.  If   a column contains an array, each element of the column array in the   current row is output before moving on to the next column.  Each row   ends with a new line."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Integer data is output right-justified in a 21-character field   followed by a blank.  Floating point data is output right justified   using 'g' format in a 21-character field with 15 digits of   precision, followed by a blank.  String data that does not contain   whitespace is output left-justified in a field whose width matches   the width specified in the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TFORM"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " header parameter for the   column, followed by a blank.  When the string data contains   whitespace characters, the string is enclosed in quotation marks   ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  For the last data element in a row, the trailing blank in   the field is replaced by a new line character."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For column data containing variable length arrays ('P' format), the   array data is preceded by the string "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'VLA_Length= '"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and the   integer length of the array for that row, left-justified in a   21-character field, followed by a blank."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "directive_name": "note",
                  "args0": [],
                  "inner": {
                    "inline": [
                      {
                        "type": "Words",
                        "data": {
                          "value": "This format does *not* support variable length arrays using the ( ' Q ' format) due to difficult to overcome ambiguities. What this means is that this file format cannot support VLA columns in tables stored in files that are over 2 GB in size. "
                        }
                      }
                    ],
                    "inner": []
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For column data representing a bit field ('X' format), each bit   value in the field is output right-justified in a 21-character field   as 1 (for true) or 0 (for false)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "cdfile:"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " Each line of the column definitions file provides the   definitions for one column in the table.  The line is broken up into   8, sixteen-character fields.  The first field provides the column   name ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TTYPEn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  The second field provides the column format   ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TFORMn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  The third field provides the display format   ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TDISPn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  The fourth field provides the physical units   ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TUNITn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  The fifth field provides the dimensions for a   multidimensional array ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TDIMn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  The sixth field provides the   value that signifies an undefined value ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TNULLn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  The seventh   field provides the scale factor ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TSCALn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  The eighth field   provides the offset value ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "TZEROn"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  A field value of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is   used to represent the case where no value is provided."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "hfile:"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " Each line of the header parameters file provides the   definition of a single HDU header card as represented by the card   image."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "filename",
            "type_": "path-like or file-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input fits file."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "datafile",
            "type_": "path-like or file-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Output data file.  The default is the root name of the input fits file appended with an underscore, followed by the extension number (ext), followed by the extension "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          ".txt"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cdfile",
            "type_": "path-like or file-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Output column definitions file.  The default is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", no column definitions output is produced."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "hfile",
            "type_": "path-like or file-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Output header parameters file.  The default is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", no header parameters output is produced."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ext",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of the extension containing the table HDU to be dumped."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "overwrite",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", overwrite the output file if it exists. Raises an "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "OSError"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and the output file exists. Default is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionchanged",
                  "title": "1.3",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "``overwrite`` replaces the deprecated ``clobber`` argument. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Dump a table HDU to a file in ASCII format.  The table may be dumped in three separate files, one containing column definitions, one containing header parameters, and one for table data."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "astropy",
      "version": "5.0",
      "kind": "module",
      "path": "astropy.io.fits.convenience.tabledump"
    },
    {
      "module": "astropy",
      "version": "5.0",
      "kind": "module",
      "path": "astropy.io.fits.convenience.tableload"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "item_file": "/astropy/io/fits/convenience.py",
  "item_line": 917,
  "item_type": "<class 'function'>",
  "aliases": [
    "astropy.io.fits.tabledump"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "5.0",
  "signature": "tabledump(filename, datafile=None, cdfile=None, hfile=None, ext=1, overwrite=False)",
  "references": null,
  "logo": "logo.png",
  "qa": "astropy.io.fits.convenience.tabledump",
  "arbitrary": []
}