{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "You specify each member as a positional argument specifying type"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Each type should be one of the following strings :"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "'integer', 'float', 'ip_addr', 'string', 'boolean'"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "So you can specify a list of two strings, followed by two integers as :"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "mixed_list('string', 'string', 'integer', 'integer')"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The length of the list must match the number of positional arguments you supply."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> mix_str = \"mixed_list('integer', 'float', 'ip_addr', 'string', 'boolean')\"\n>>> check_res = vtor.check(mix_str, (1, 2.0, '1.2.3.4', 'a', True))\n>>> check_res == [1, 2.0, '1.2.3.4', 'a', True]\n1\n>>> check_res = vtor.check(mix_str, ('1', '2.0', '1.2.3.4', 'a', 'True'))\n>>> check_res == [1, 2.0, '1.2.3.4', 'a', True]\n1\n>>> vtor.check(mix_str, ('b', 2.0, '1.2.3.4', 'a', True))\nTraceback (most recent call last):\nVdtTypeError: the value \"b\" is of the wrong type.\n>>> vtor.check(mix_str, (1, 2.0, '1.2.3.4', 'a'))\nTraceback (most recent call last):\nVdtValueTooShortError: the value \"(1, 2.0, '1.2.3.4', 'a')\" is too short.\n>>> vtor.check(mix_str, (1, 2.0, '1.2.3.4', 'a', 1, 'b'))\nTraceback (most recent call last):\nVdtValueTooLongError: the value \"(1, 2.0, '1.2.3.4', 'a', 1, 'b')\" is too long.\n>>> vtor.check(mix_str, 0)\nTraceback (most recent call last):\nVdtTypeError: the value \"0\" is of the wrong type."
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": ">>> vtor.check('mixed_list(\"yoda\")', ('a'))\nTraceback (most recent call last):\nVdtParamError: passed an incorrect value \"KeyError('yoda',)\" for parameter \"'mixed_list'\""
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Check that the value is a list. Allow specifying the type of each member. Work on lists of specific lengths."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/astropy/extern/configobj/validate.py",
  "item_line": 1259,
  "item_type": "<class 'function'>",
  "aliases": [
    "astropy.config.configuration.validate.is_mixed_list"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "5.0",
  "signature": "is_mixed_list(value, *args)",
  "references": null,
  "logo": "logo.png",
  "qa": "astropy.extern.configobj.validate.is_mixed_list",
  "arbitrary": []
}