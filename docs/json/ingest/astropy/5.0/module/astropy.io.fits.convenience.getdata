{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "filename",
            "type_": "path-like or file-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "File to get data from.  If opened, mode must be one of the following rb, rb+, or ab+."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ext",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The rest of the arguments are for extension specification. They are flexible and are best illustrated by examples."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "No extra arguments implies the primary header::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "getdata('in.fits')"
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "note",
                  "title": "",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "Exclusive to ``getdata`` : if extension is not specified and primary header contains no data, ``getdata`` attempts to retrieve data from first extension. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "By extension number::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "getdata('in.fits', 0)      # the primary header\ngetdata('in.fits', 2)      # the second extension\ngetdata('in.fits', ext=2)  # the second extension"
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "By name, i.e., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "EXTNAME"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " value (if unique)::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "getdata('in.fits', 'sci')\ngetdata('in.fits', extname='sci')  # equivalent"
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Note "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "EXTNAME"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " values are not case sensitive"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "By combination of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "EXTNAME"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and EXTVER`` as separate arguments or as a tuple::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "getdata('in.fits', 'sci', 2)  # EXTNAME='SCI' & EXTVER=2\ngetdata('in.fits', extname='sci', extver=2)  # equivalent\ngetdata('in.fits', ('sci', 2))  # equivalent"
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Ambiguous or conflicting specifications will raise an exception::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "getdata('in.fits', ext=('sci',1), extname='err', extver=2)"
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "header",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", return the data and the header of the specified HDU as a tuple."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "lower, upper",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "lower"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "upper"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the field names in the returned data object will be converted to lower or upper case, respectively."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "view",
            "type_": "ndarray, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When given, the data will be returned wrapped in the given ndarray subclass by calling::     "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "data.view(view)"
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Any additional keyword arguments to be passed to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "astropy.io.fits.open",
                        "reference": {
                          "module": "astropy",
                          "version": "5.0",
                          "kind": "module",
                          "path": "astropy.io.fits.hdu.hdulist.fitsopen"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "IndexError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If no data is found in searched extensions."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "array",
            "type_": "ndarray or `~numpy.recarray` or `~astropy.io.fits.Group`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Type depends on the type of the extension being referenced."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If the optional keyword "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "header"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", this function will return a ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "data"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "header"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") tuple."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Get the data from an extension of a FITS file (and optionally the header)."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "astropy",
      "version": "5.0",
      "kind": "module",
      "path": "astropy.io.fits.hdu.hdulist.fitsopen"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises"
  ],
  "item_file": "/astropy/io/fits/convenience.py",
  "item_line": 119,
  "item_type": "<class 'function'>",
  "aliases": [
    "astropy.io.fits.getdata"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "5.0",
  "signature": "getdata(filename, *args, header=None, lower=None, upper=None, view=None, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "astropy.io.fits.convenience.getdata",
  "arbitrary": []
}