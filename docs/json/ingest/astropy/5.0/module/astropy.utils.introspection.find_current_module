{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function has two modes, determined by the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "finddiff"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " option. it will either simply go the requested number of frames up the call stack (if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "finddiff"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is False), or it will go up the call stack until it reaches a module that is "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "not"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in a specified set."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "depth",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Specifies how far back to go in the call stack (0-indexed, so that passing in 0 gives back "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "astropy.utils.misc",
                        "reference": {
                          "module": "astropy",
                          "version": "5.0",
                          "kind": "module",
                          "path": "astropy.utils.misc"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ")."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "finddiff",
            "type_": "bool or list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If False, the returned "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "mod"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will just be "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "depth"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " frames up from the current frame. Otherwise, the function will start at a frame "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "depth"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " up from current, and continue up the call stack to the first module that is "
                      }
                    },
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "different"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " from those in the provided list. In this case, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "finddiff"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " can be a list of modules or modules names. Alternatively, it can be True, which will use the module "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "depth"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " call stack frames up as the module the returned module most be different from."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "ValueError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "finddiff"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a list with an invalid entry."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "mod",
            "type_": "module or None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The module object or None if the package cannot be found. The name of the module is available as the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "__name__"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " attribute of the returned object (if it isn't None)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Determines the module/package from which this function is called."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "astropy",
      "version": "5.0",
      "kind": "module",
      "path": "astropy.utils.misc"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples"
  ],
  "item_file": "/astropy/utils/introspection.py",
  "item_line": 172,
  "item_type": "<class 'function'>",
  "aliases": [
    "astropy.logger.find_current_module"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The examples below assume that there are two modules in a package named "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "pkg"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ". "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "mod1.py"
                ]
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "def find1():",
            "    from astropy.utils import find_current_module",
            "    print find_current_module(1).__name__",
            "def find2():",
            "    from astropy.utils import find_current_module",
            "    cmod = find_current_module(2)",
            "    if cmod is None:",
            "        print 'None'",
            "    else:",
            "        print cmod.__name__",
            "def find_diff():",
            "    from astropy.utils import find_current_module",
            "    print find_current_module(0,True).__name__"
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "mod2.py"
                ]
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            "def find():",
            "    from .mod1 import find2",
            "    find2()"
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "With these modules in place, the following occurs::"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            ">>> from pkg import mod1, mod2",
            ">>> from astropy.utils import find_current_module",
            ">>> mod1.find1()",
            "pkg.mod1",
            ">>> mod1.find2()",
            "None",
            ">>> mod2.find()",
            "pkg.mod2",
            ">>> find_current_module(0)",
            "<module 'astropy.utils.misc' from 'astropy/utils/misc.py'>",
            ">>> mod1.find_diff()",
            "pkg.mod1"
          ]
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "version": "5.0",
  "signature": "find_current_module(depth=1, finddiff=False)",
  "references": null,
  "logo": "logo.png",
  "qa": "astropy.utils.introspection.find_current_module",
  "arbitrary": []
}