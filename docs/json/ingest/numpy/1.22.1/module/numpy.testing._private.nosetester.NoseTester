{
  "_content": {
    "Attributes": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "package_path",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Full path to the package to test."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "package_name",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Name of the package to test."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This class is made available as numpy.testing.Tester, and a test function is typically added to a package's __init__.py like so::    "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "from numpy.testing import Tester\ntest = Tester().test"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Calling this test function finds and runs all tests associated with the package and all its sub-packages."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "package",
            "type_": "module, str or None, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The package to test. If a string, this should be the full path to the package. If None (default), "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "package",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "package"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set to the module from which "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "NoseTester",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.testing._private.nosetester.NoseTester"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is initialized."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "raise_warnings",
            "type_": "None, str or sequence of warnings, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This specifies which warnings to configure as 'raise' instead of being shown once during the test execution.  Valid strings are:"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "depth",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "package",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "package"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, then this can be used to initialize from the module of the caller of (the caller of (...)) the code that initializes "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "NoseTester",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.testing._private.nosetester.NoseTester"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Default of 0 means the module of the immediate caller; higher values are useful for utility routines that want to initialize "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "NoseTester",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.testing._private.nosetester.NoseTester"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " objects on behalf of other code."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Nose test runner."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.testing._private.nosetester.NoseTester"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Parameters"
  ],
  "item_file": "/numpy/testing/_private/nosetester.py",
  "item_line": 112,
  "item_type": "<class 'type'>",
  "aliases": [
    "numpy.Tester"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.22.1",
  "signature": "NoseTester(package=None, raise_warnings='release', depth=0, check_fpu_mode=False)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.testing._private.nosetester.NoseTester",
  "arbitrary": []
}