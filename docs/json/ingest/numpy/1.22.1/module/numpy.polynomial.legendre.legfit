{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return the coefficients of a Legendre series of degree "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "deg",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "deg"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that is the least squares fit to the data values "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "y",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "y"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " given at points "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "x",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "x"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "y",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "y"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is 1-D the returned coefficients will also be 1-D. If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "y",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "y"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is 2-D multiple fits are done, one for each column of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "y",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "y"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockMath",
          "data": {
            "value": "p ( x) = c_0 + c_1 * L_1 ( x) + ... + c_n * L_n ( x), "
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "n",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "deg",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "deg"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The solution is the coefficients of the Legendre series "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "p",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that minimizes the sum of the weighted squared errors"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockMath",
          "data": {
            "value": "E = \\sum_j w_j^2 * |y_j - p ( x_j)|^2, "
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "where "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "w_j"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are the weights. This problem is solved by setting up as the (typically) overdetermined matrix equation"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockMath",
          "data": {
            "value": "V ( x) * c = w * y, "
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "V",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the weighted pseudo Vandermonde matrix of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "x",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "x"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "c",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are the coefficients to be solved for, "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "w",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "w"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are the weights, and "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "y",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "y"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are the observed values.  This equation is then solved using the singular value decomposition of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "V",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If some of the singular values of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "V",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are so small that they are neglected, then a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "RankWarning",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.RankWarning"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will be issued. This means that the coefficient values may be poorly determined. Using a lower order fit will usually get rid of the warning.  The "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "rcond",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "rcond"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " parameter can also be set to a value smaller than its default, but the resulting fit may be spurious and have large contributions from roundoff error."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Fits using Legendre series are usually better conditioned than fits using power series, but much can depend on the distribution of the sample points and the smoothness of the data. If the quality of the fit is inadequate splines may be a good alternative."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "array_like, shape (M,)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "x-coordinates of the M sample points "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(x[i], y[i])"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "y",
            "type_": "array_like, shape (M,) or (M, K)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "y-coordinates of the sample points. Several data sets of sample points sharing the same x-coordinates can be fitted at once by passing in a 2D-array that contains one dataset per column."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "deg",
            "type_": "int or 1-D array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Degree(s) of the fitting polynomials. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "deg",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "deg"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a single integer all terms up to and including the "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "deg",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "deg"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "'th term are included in the fit. For NumPy versions >= 1.11.0 a list of integers specifying the degrees of the terms to include may be used instead."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rcond",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Relative condition number of the fit. Singular values smaller than this relative to the largest singular value will be ignored. The default value is len(x)*eps, where eps is the relative precision of the float type, about 2e-16 in most cases."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "full",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Switch determining nature of return value. When it is False (the default) just the coefficients are returned, when True diagnostic information from the singular value decomposition is also returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "w",
            "type_": "array_like, shape (`M`,), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Weights. If not None, the weight "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "w[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " applies to the unsquared residual "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "y[i] - y_hat[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " at "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Ideally the weights are chosen so that the errors of the products "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "w[i]*y[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " all have the same variance.  When using inverse-variance weighting, use "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "w[i] = 1/sigma(y[i])"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  The default value is None."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionadded",
                  "title": "TODO",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "1.5.0 "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "coef",
            "type_": "ndarray, shape (M,) or (M, K)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Legendre coefficients ordered from low to high. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " was 2-D, the coefficients for the data in column k of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are in column "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "k",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "deg",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "deg"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is specified as a list, coefficients for terms not included in the fit are set equal to zero in the returned "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "coef",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "coef"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "[residuals, rank, singular_values, rcond]",
            "type_": "list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "These values are only returned if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "full == True"
                        ]
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "residuals -- sum of squared residuals of the least squares fit"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "rank -- the numerical rank of the scaled Vandermonde matrix"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "singular_values -- singular values of the scaled Vandermonde matrix"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "rcond -- value of "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "rcond",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For more details, see "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "numpy.linalg.lstsq",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.linalg.lstsq"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Least squares fit of Legendre series to data."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "RankWarning",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The rank of the coefficient matrix in the least-squares fit is deficient. The warning is only raised if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "full == False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  The warnings can be turned off by"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": ">>> import warnings\n>>> warnings.simplefilter('ignore', np.RankWarning)"
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.RankWarning"
    },
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.linalg.lstsq"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Warns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "item_file": "/numpy/polynomial/legendre.py",
  "item_line": 1286,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.polynomial.legendre.legfit"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "legval",
        "ref": "numpy.polynomial.legendre.legval",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Evaluates a Legendre series."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "legvander",
        "ref": "numpy.polynomial.legendre.legvander",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Vandermonde matrix of Legendre series."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "legweight",
        "ref": "numpy.polynomial.legendre.legweight",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Legendre weight function (= 1)."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "numpy.linalg.lstsq",
        "ref": "numpy.linalg.lstsq",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Computes a least-squares fit from the matrix."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "numpy.polynomial.chebyshev.chebfit",
        "ref": "numpy.polynomial.chebyshev.chebfit",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "numpy.polynomial.hermite.hermfit",
        "ref": "numpy.polynomial.hermite.hermfit",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "numpy.polynomial.hermite_e.hermefit",
        "ref": "numpy.polynomial.hermite_e.hermefit",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "numpy.polynomial.laguerre.lagfit",
        "ref": "numpy.polynomial.laguerre.lagfit",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "numpy.polynomial.polynomial.polyfit",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "scipy.interpolate.UnivariateSpline",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Computes spline fits."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.22.1",
  "signature": "legfit(x, y, deg, rcond=None, full=False, w=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.polynomial.legendre.legfit",
  "arbitrary": []
}