{
  "_content": {
    "Attributes": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "lock",
            "type_": "threading.Lock",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Lock instance that is shared so that the same BitGenerator can be used in multiple Generators without corrupting the state. Code that generates values from a bit generator should hold the bit generator's lock."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "seed",
            "type_": "{None, int, array_like[ints], SeedSequence}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A seed to initialize the "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "BitGenerator",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.random.bit_generator.BitGenerator"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If None, then fresh, unpredictable entropy will be pulled from the OS. If an "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "int"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "array_like[ints]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is passed, then it will be passed to ~`numpy.random.SeedSequence` to derive the initial "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "BitGenerator",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.random.bit_generator.BitGenerator"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " state. One may also pass in a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "SeedSequence",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.random.bit_generator.SeedSequence"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Base Class for generic BitGenerators, which provide a stream of random bits based on different algorithms. Must be overridden."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.random.bit_generator.BitGenerator"
    },
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.random.bit_generator.SeedSequence"
    }
  ],
  "ordered_sections": [
    "Signature",
    "Summary",
    "Parameters",
    "Attributes",
    "See Also"
  ],
  "item_file": "/numpy/random/bit_generator.cpython-39-darwin.so",
  "item_line": null,
  "item_type": "<class 'type'>",
  "aliases": [
    "numpy.random.BitGenerator"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "SeedSequence",
        "ref": "numpy.random.bit_generator.SeedSequence",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "1.22.1",
  "signature": "BitGenerator(seed=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.random.bit_generator.BitGenerator",
  "arbitrary": []
}