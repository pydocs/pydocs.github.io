{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Link",
                "data": {
                  "value": "RandomState",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.random.mtrand.RandomState"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Generator",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.random._generator.Generator"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " expose a number of methods for generating random numbers drawn from a variety of probability distributions. In addition to the distribution-specific arguments, each method takes a keyword argument "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "size",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.size"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that defaults to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "size",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.size"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", then a single value is generated and returned. If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "size",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.size"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is an integer, then a 1-D array filled with generated values is returned. If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "size",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.size"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a tuple, then an array with that shape is filled and returned."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Strong",
                "data": {
                  "content": {
                    "value": "Compatibility Guarantee"
                  }
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "A fixed bit generator using a fixed seed and a fixed series of calls to 'RandomState' methods using the same parameters will always produce the same results up to roundoff error except when the values were incorrect. "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "RandomState",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.random.mtrand.RandomState"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is effectively frozen and will only receive updates that are required by changes in the the internals of Numpy. More substantial changes, including algorithmic improvements, are reserved for "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Generator",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.random._generator.Generator"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The Python stdlib module \"random\" also contains a Mersenne Twister pseudo-random number generator with a number of methods that are similar to the ones available in "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "RandomState",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.random.mtrand.RandomState"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "RandomState",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.random.mtrand.RandomState"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", besides being NumPy-aware, has the advantage that it provides a much larger number of probability distributions to choose from."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "seed",
            "type_": "{None, int, array_like, BitGenerator}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Random seed used to initialize the pseudo-random number generator or an instantized BitGenerator.  If an integer or array, used as a seed for the MT19937 BitGenerator. Values can be any integer between 0 and 2**32 - 1 inclusive, an array (or other sequence) of such integers, or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (the default).  If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "seed",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "seed"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", then the "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "MT19937",
                        "reference": {
                          "module": "numpy",
                          "version": "1.22.1",
                          "kind": "module",
                          "path": "numpy.random._mt19937.MT19937"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " BitGenerator is initialized by reading data from "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "/dev/urandom"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (or the Windows analogue) if available or seed from the clock otherwise."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Container for the slow Mersenne Twister pseudo-random number generator. Consider using a different BitGenerator with the Generator container instead."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.random._generator.Generator"
    },
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.size"
    },
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.random._mt19937.MT19937"
    },
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.random.mtrand.RandomState"
    }
  ],
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Notes",
    "See Also"
  ],
  "item_file": "/numpy/random/mtrand.cpython-39-darwin.so",
  "item_line": null,
  "item_type": "<class 'type'>",
  "aliases": [
    "numpy.random.RandomState"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "Generator",
        "ref": "numpy.random._generator.Generator",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "MT19937",
        "ref": "numpy.random._mt19937.MT19937",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "numpy.random.BitGenerator",
        "ref": "numpy.random.bit_generator.BitGenerator",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "1.22.1",
  "signature": "RandomState(seed=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.random.mtrand.RandomState",
  "arbitrary": []
}