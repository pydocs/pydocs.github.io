{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a.view()"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is used two different ways:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a.view(some_dtype)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a.view(dtype=some_dtype)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " constructs a view of the array's memory with a different data-type.  This can cause a reinterpretation of the bytes of memory."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a.view(ndarray_subclass)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a.view(type=ndarray_subclass)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " just returns an instance of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "ndarray_subclass",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that looks at the same array (same shape, dtype, etc.)  This does not cause a reinterpretation of the memory."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "fill_value",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "fill_value"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is not specified, but "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "dtype",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "dtype"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is specified (and is not an ndarray sub-class), the "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "fill_value",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "fill_value"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of the MaskedArray will be reset. If neither "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "fill_value",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "fill_value"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " nor "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "dtype",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "dtype"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are specified (or if "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "dtype",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "dtype"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is an ndarray sub-class), then the fill value is preserved. Finally, if "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "fill_value",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "fill_value"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is specified, but "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "dtype",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "dtype"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is not, the fill value is set to the specified value."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a.view(some_dtype)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "some_dtype"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " has a different number of bytes per entry than the previous dtype (for example, converting a regular array to a structured array), then the behavior of the view cannot be predicted just from the superficial appearance of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (shown by "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "print(a)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "). It also depends on exactly how "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is stored in memory. Therefore if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is C-ordered versus fortran-ordered, versus defined as a slice or transpose, etc., the view may give different results."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "dtype",
            "type_": "data-type or ndarray sub-class, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Data-type descriptor of the returned view, e.g., float32 or int16. The default, None, results in the view having the same data-type as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "a",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". As with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ndarray.view"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", dtype can also be specified as an ndarray sub-class, which then specifies the type of the returned object (this is equivalent to setting the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "type"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " parameter)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "type",
            "type_": "Python type, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Type of the returned view, either ndarray or a subclass.  The default None results in type preservation."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fill_value",
            "type_": "scalar, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The value to use for invalid entries (None by default). If None, then this argument is inferred from the passed "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "dtype",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "dtype"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or in its absence the original array, as discussed in the notes below."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return a view of the MaskedArray data."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also",
    "Notes"
  ],
  "item_file": "/numpy/ma/core.py",
  "item_line": 3121,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.ma.MaskedArray.view"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "numpy.ndarray.view",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Equivalent method on ndarray object."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.22.1",
  "signature": "view(self, dtype=None, type=None, fill_value=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.ma.core.MaskedArray.view",
  "arbitrary": []
}