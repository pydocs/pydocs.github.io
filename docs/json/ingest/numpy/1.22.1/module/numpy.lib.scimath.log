{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return the \"principal value\" (for a description of this, see "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "numpy.log",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.logspace"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") of "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "log_e(x)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". For real "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "x > 0",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", this is a real number ("
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "log(0)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " returns "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "-inf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "log(np.inf)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " returns "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "inf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "). Otherwise, the complex principle value is returned."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For a log() that returns "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "NAN"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " when real "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "x < 0",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", use "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "numpy.log",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.logspace"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (note, however, that otherwise "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "numpy.log",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.logspace"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and this "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "log",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.lib.scimath.log"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are identical, i.e., both return "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "-inf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "x = 0",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "inf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "x = inf",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and, notably, the complex principle value if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "x.imag != 0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ")."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The value(s) whose log is (are) required."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "ndarray or scalar",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The log of the "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "x",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "x"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " value(s). If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "x",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "x"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " was a scalar, so is "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "out",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "out"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", otherwise an array is returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute the natural logarithm of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "x",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "x"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.logspace"
    },
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.lib.scimath.log"
    },
    {
      "module": "numpy",
      "version": "1.22.1",
      "kind": "module",
      "path": "numpy.ma.core.exp"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/numpy/lib/scimath.py",
  "item_line": 242,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.emath.log"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "emath"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "log",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.lib.scimath.log"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "exp",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.ma.core.exp"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "1.0",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Negative arguments are handled \"correctly\" (recall that "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "exp(log(x)) == x"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " does "
              }
            },
            {
              "type": "Emph",
              "data": {
                "value": {
                  "value": "not"
                }
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " hold for real "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "x < 0"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "):"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "emath"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "log",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.lib.scimath.log"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "-"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "exp",
                  "reference": {
                    "module": "numpy",
                    "version": "1.22.1",
                    "kind": "module",
                    "path": "numpy.ma.core.exp"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "=="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "+"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pi"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "*"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "j"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "True",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "numpy.log",
        "ref": "numpy.logspace",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "1.22.1",
  "signature": "log(x)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.lib.scimath.log",
  "arbitrary": []
}