{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Assume "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "mask_func",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "mask_func"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a function that, for a square array a of size "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "(n, n)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with a possible offset argument "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "k",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "k"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", when called as "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "mask_func(a, k)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " returns a new array with zeros in certain locations (functions like "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "triu",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.triu"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "tril",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.tril"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " do precisely this). Then this function returns the indices where the non-zero values would be located."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Admonition",
          "data": {
            "kind": "versionadded",
            "title": "TODO",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "1.4.0 "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "n",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The returned indices will be valid to access arrays of shape (n, n)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mask_func",
            "type_": "callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A function whose call signature is similar to that of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "triu",
                        "reference": {
                          "module": "numpy",
                          "version": "1.21.3",
                          "kind": "module",
                          "path": "numpy.triu"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "tril",
                        "reference": {
                          "module": "numpy",
                          "version": "1.21.3",
                          "kind": "module",
                          "path": "numpy.tril"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". That is, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "mask_func(x, k)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " returns a boolean array, shaped like "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "x"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "k",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "k"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is an optional argument to the function."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "k",
            "type_": "scalar",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An optional argument which is passed through to "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "mask_func",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "mask_func"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Functions like "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "triu",
                        "reference": {
                          "module": "numpy",
                          "version": "1.21.3",
                          "kind": "module",
                          "path": "numpy.triu"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "tril",
                        "reference": {
                          "module": "numpy",
                          "version": "1.21.3",
                          "kind": "module",
                          "path": "numpy.tril"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " take a second argument that is interpreted as an offset."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "indices",
            "type_": "tuple of arrays.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "n",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "n"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " arrays of indices corresponding to the locations where "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "mask_func(np.ones((n, n)), k)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return the indices to access (n, n) arrays, given a masking function."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.reshape"
    },
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.arange"
    },
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.tril"
    },
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.mask_indices"
    },
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.triu"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/numpy/lib/twodim_base.py",
  "item_line": 755,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.mask_indices"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "These are the indices that would allow you to access the upper triangular part of any 3x3 array:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "iu"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "mask_indices",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.mask_indices"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "3"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "triu",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.triu"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "For example, if "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "a"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " is a 3x3 array:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "a"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "arange",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.arange"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "9"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "reshape",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.reshape"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "3"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "3"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "a"
              }
            }
          ],
          "out": "array([[0, 1, 2],\n       [3, 4, 5],\n       [6, 7, 8]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "a"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "iu"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            }
          ],
          "out": "array([0, 1, 2, 4, 5, 8])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "An offset can be passed also to the masking function.  This gets us the indices starting on the first diagonal right of the main one:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "iu1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "mask_indices",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.mask_indices"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "3"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "triu",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.triu"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "with which we now extract only three elements:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "a"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "iu1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            }
          ],
          "out": "array([1, 2, 5])",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "tril",
        "ref": "numpy.tril",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "tril_indices",
        "ref": "numpy.tril_indices",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "triu",
        "ref": "numpy.triu",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "triu_indices",
        "ref": "numpy.triu_indices",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "1.21.3",
  "signature": "mask_indices(n, mask_func, k=0)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.mask_indices",
  "arbitrary": []
}