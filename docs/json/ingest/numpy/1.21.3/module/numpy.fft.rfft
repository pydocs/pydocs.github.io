{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function computes the one-dimensional "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "n"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "-point discrete Fourier Transform (DFT) of a real-valued array by means of an efficient algorithm called the Fast Fourier Transform (FFT)."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "When the DFT is computed for purely real input, the output is Hermitian-symmetric, i.e. the negative frequency terms are just the complex conjugates of the corresponding positive-frequency terms, and the negative-frequency terms are therefore redundant.  This function does not compute the negative frequency terms, and the length of the transformed axis of the output is therefore "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "n//2 + 1"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "When "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A = rfft(a)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and fs is the sampling frequency, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A[0]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " contains the zero-frequency term 0*fs, which is real due to Hermitian symmetry."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "n",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "n"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is even, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A[-1]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " contains the term representing both positive and negative Nyquist frequency (+fs/2 and -fs/2), and must also be purely real. If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "n",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "n"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is odd, there is no term at fs/2; "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A[-1]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " contains the largest positive frequency (fs/2*(n-1)/n), and is complex in the general case."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If the input "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "a",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "a"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " contains an imaginary part, it is silently discarded."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input array"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "n",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of points along transformation axis in the input to use. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "n",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "n"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is smaller than the length of the input, the input is cropped. If it is larger, the input is padded with zeros. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "n",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "n"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not given, the length of the input along the axis specified by "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "axis",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "axis"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is used."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axis over which to compute the FFT. If not given, the last axis is used."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "norm",
            "type_": "{\"backward\", \"ortho\", \"forward\"}, optional",
            "desc": [
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionadded",
                  "title": "TODO",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "1.10.0 "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Normalization mode (see "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "numpy.fft"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "). Default is \"backward\". Indicates which direction of the forward/backward pair of transforms is scaled and with what normalization factor."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionadded",
                  "title": "1.20.0",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "The \" backward \" , \" forward \" values were added. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "IndexError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "axis",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "axis"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not a valid axis of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "a",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "a"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "complex ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The truncated or zero-padded input, transformed along the axis indicated by "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "axis",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "axis"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or the last one if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "axis",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "axis"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not specified. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "n",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "n"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is even, the length of the transformed axis is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(n/2)+1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "n",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "n"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is odd, the length is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(n+1)/2"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute the one-dimensional discrete Fourier Transform for real input."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.fft.fft"
    },
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.fft.rfft"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/numpy/fft/_pocketfft.py",
  "item_line": 320,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.fft.rfft"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "fft",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.fft.fft"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "fft",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.fft.fft"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "array([ 1.+0.j,  0.-1.j, -1.+0.j,  0.+1.j]) # may vary",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "np"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "fft",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.fft.fft"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "rfft",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.fft.rfft"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "array([ 1.+0.j,  0.-1.j, -1.+0.j]) # may vary",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Notice how the final element of the "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "fft",
                "reference": {
                  "module": "numpy",
                  "version": "1.21.3",
                  "kind": "module",
                  "path": "numpy.fft.fft"
                },
                "kind": "module",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " output is the complex conjugate of the second element, for real input. For "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "rfft",
                "reference": {
                  "module": "numpy",
                  "version": "1.21.3",
                  "kind": "module",
                  "path": "numpy.fft.rfft"
                },
                "kind": "module",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", this symmetry is exploited to compute only the non-negative frequency terms."
              }
            }
          ],
          "inner": []
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "fft",
        "ref": "numpy.fft.fft",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The one-dimensional FFT of general (complex) input."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "fftn",
        "ref": "numpy.fft.fftn",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The "
              }
            },
            {
              "type": "Emph",
              "data": {
                "value": {
                  "value": "n"
                }
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "-dimensional FFT."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "irfft",
        "ref": "numpy.fft.irfft",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The inverse of "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "rfft",
                "reference": {
                  "module": "numpy",
                  "version": "1.21.3",
                  "kind": "module",
                  "path": "numpy.fft.rfft"
                },
                "kind": "module",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "numpy.fft",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "For definition of the DFT and conventions used."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "rfftn",
        "ref": "numpy.fft.rfftn",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The "
              }
            },
            {
              "type": "Emph",
              "data": {
                "value": {
                  "value": "n"
                }
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "-dimensional FFT of real input."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.21.3",
  "signature": "rfft(a, n=None, axis=-1, norm=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.fft.rfft",
  "arbitrary": []
}