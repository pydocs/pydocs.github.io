{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "To remove in the future \u2013\u2013 numpy.core.records"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/numpy/core/records.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "aliases": [
    "numpy.rec"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.21.3",
  "signature": null,
  "references": null,
  "logo": "logo.png",
  "qa": "numpy.core.records",
  "arbitrary": [
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Record arrays expose the fields of structured arrays as properties."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Most commonly, ndarrays contain elements of a single type, e.g. floats, integers, bools etc.  However, it is possible for elements to be combinations of these using structured types, such as::    "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> a = np.array([(1, 2.0), (1, 2.0)], dtype=[('x', np.int64), ('y', np.float64)])",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": ">>> a",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "array([(1, 2.), (1, 2.)], dtype=[('x', '<i8'), ('y', '<f8')])",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Here, each element consists of two fields: x (and int), and y (a float). This is known as a structured array.  The different fields are analogous to columns in a spread-sheet.  The different fields can be accessed as one would a dictionary::    "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> a['x']",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "array([1, 1])",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": ">>> a['y']",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "array([2., 2.])",
                  "_number": 4,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Record arrays allow us to access fields as properties::    "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> ar = np.rec.array(a)",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              ">>> ar.x",
              "array([1, 1])",
              "",
              ">>> ar.y",
              "array([2., 2.])"
            ]
          }
        }
      ],
      "title": "Record Arrays"
    }
  ]
}