{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "To remove in the future \u2013\u2013 scipy.integrate._ode"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/scipy/integrate/_ode.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "aliases": [
    "scipy.signal.ltisys.integrate._ode"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.7.1",
  "signature": null,
  "references": null,
  "logo": "logo.png",
  "qa": "scipy.integrate._ode",
  "arbitrary": [
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "First-order ODE integrators."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "User-friendly interface to various numerical integrators for solving a system of first order ODEs with prescribed initial conditions::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "d y(t)[i]",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "---------  = f(t,y(t))[i],",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "   d t",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "y(t=0)[i] = y0[i],",
                  "_number": 4,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "where::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "i = 0, ..., len(y0) - 1",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            }
          }
        }
      ],
      "title": null
    },
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "A generic interface class to numeric integrators. It has the following methods::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "integrator = ode(f, jac=None)",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "integrator = integrator.set_integrator(name, **params)",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "integrator = integrator.set_initial_value(y0, t0=0.0)",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "integrator = integrator.set_f_params(*args)",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "integrator = integrator.set_jac_params(*args)",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "y1 = integrator.integrate(t1, step=False, relax=False)",
                  "_number": 5,
                  "_offset": 0
                },
                {
                  "_line": "flag = integrator.successful()",
                  "_number": 6,
                  "_offset": 0
                }
              ]
            }
          }
        }
      ],
      "title": "class ode"
    },
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This class has the same generic interface as ode, except it can handle complex f, y and Jacobians by transparently translating them into the equivalent real-valued system. It supports the real-valued solvers (i.e., not zvode) and is an alternative to ode with the zvode solver, sometimes performing better."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": "class complex_ode"
    }
  ]
}