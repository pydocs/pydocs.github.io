{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Minimize::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "c @ x",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Subject to::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "A @ x == b",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "    x >= 0",
                  "_number": 1,
                  "_offset": 0
                }
              ]
            }
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "T",
            "type_": "2-D array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A 2-D array representing the simplex tableau, T, corresponding to the linear programming problem. It should have the form:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": []
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": []
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "[[A[0, 0], A[0, 1], ..., A[0, n_total], b[0]],"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "[A[1, 0], A[1, 1], ..., A[1, n_total], b[1]],  .  .  .  [A[m, 0], A[m, 1], ..., A[m, n_total], b[m]],  [c[0],   c[1], ...,   c[n_total],    0]]"
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "for a Phase 2 problem, or the form:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": []
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": []
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "[[A[0, 0], A[0, 1], ..., A[0, n_total], b[0]],"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "[A[1, 0], A[1, 1], ..., A[1, n_total], b[1]],  .  .  .  [A[m, 0], A[m, 1], ..., A[m, n_total], b[m]],  [c[0],   c[1], ...,   c[n_total],   0],  [c'[0],  c'[1], ...,  c'[n_total],  0]]"
                                }
                              }
                            ],
                            "inner": []
                          }
                        },
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "for a Phase 1 problem (a problem in which a basic feasible solution is  sought prior to maximizing the actual objective. "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "T"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " is modified in  place by "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "_solve_simplex"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "n",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of true variables in the problem."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "basis",
            "type_": "1-D array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An array of the indices of the basic variables, such that basis[i] contains the column corresponding to the basic variable for row i. Basis is modified in place by _solve_simplex"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "callback",
            "type_": "callable, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If a callback function is provided, it will be called within each iteration of the algorithm. The callback must accept a "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "scipy.optimize.OptimizeResult"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " consisting of the following fields:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockQuote",
                "data": {
                  "value": [
                    "x : 1-D array",
                    "    Current solution vector",
                    "fun : float",
                    "    Current value of the objective function",
                    "success : bool",
                    "    True only when a phase has completed successfully. This",
                    "    will be False for most iterations.",
                    "slack : 1-D array",
                    "    The values of the slack variables. Each slack variable",
                    "    corresponds to an inequality constraint. If the slack is zero,",
                    "    the corresponding constraint is active.",
                    "con : 1-D array",
                    "    The (nominally zero) residuals of the equality constraints,",
                    "    that is, ``b - A_eq @ x``",
                    "phase : int",
                    "    The phase of the optimization being executed. In phase 1 a basic",
                    "    feasible solution is sought and the T has an additional row",
                    "    representing an alternate objective function.",
                    "status : int",
                    "    An integer representing the exit status of the optimization::",
                    "",
                    "         0 : Optimization terminated successfully",
                    "         1 : Iteration limit reached",
                    "         2 : Problem appears to be infeasible",
                    "         3 : Problem appears to be unbounded",
                    "         4 : Serious numerical difficulties encountered",
                    "",
                    "nit : int",
                    "    The number of iterations performed.",
                    "message : str",
                    "    A string descriptor of the exit status of the optimization."
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "postsolve_args",
            "type_": "tuple",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Data needed by _postsolve to convert the solution to the standard-form problem into the solution to the original problem."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "maxiter",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The maximum number of iterations to perform before aborting the optimization."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "tol",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The tolerance which determines when a solution is \"close enough\" to zero in Phase 1 to be considered a basic feasible solution or close enough to positive to serve as an optimal solution."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "phase",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The phase of the optimization being executed. In phase 1 a basic feasible solution is sought and the T has an additional row representing an alternate objective function."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bland",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, choose pivots using Bland's rule . In problems which fail to converge due to cycling, using Bland's rule can provide convergence at the expense of a less optimal path about the simplex."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "nit0",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The initial iteration number used to keep an accurate iteration total in a two-phase problem."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "nit",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of iterations. Used to keep an accurate iteration total in the two-phase problem."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "status",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An integer representing the exit status of the optimization::   "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "0 : Optimization terminated successfully",
                        "_number": 0,
                        "_offset": 0
                      },
                      {
                        "_line": "1 : Iteration limit reached",
                        "_number": 1,
                        "_offset": 0
                      },
                      {
                        "_line": "2 : Problem appears to be infeasible",
                        "_number": 2,
                        "_offset": 0
                      },
                      {
                        "_line": "3 : Problem appears to be unbounded",
                        "_number": 3,
                        "_offset": 0
                      },
                      {
                        "_line": "4 : Serious numerical difficulties encountered",
                        "_number": 4,
                        "_offset": 0
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Solve a linear programming problem in \"standard form\" using the Simplex Method. Linear Programming is intended to solve the following problem form:"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/scipy/optimize/_linprog_simplex.py",
  "item_line": 232,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.signal.filter_design.optimize._linprog_simplex._solve_simplex"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.7.1",
  "signature": "_solve_simplex(T, n, basis, callback, postsolve_args, maxiter=1000, tol=1e-09, phase=2, bland=False, nit0=0)",
  "references": null,
  "logo": "logo.png",
  "qa": "scipy.optimize._linprog_simplex._solve_simplex",
  "arbitrary": []
}