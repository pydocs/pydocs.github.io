{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If some values of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "b",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "b"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are too close to 0, they are removed. In that case, a BadCoefficients warning is emitted."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "b",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "b"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "a",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "a"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " arrays are interpreted as coefficients for positive, descending powers of the transfer function variable. So the inputs "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "b = [b_0, b_1, ..., b_M]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Math",
                "data": {
                  "value": [
                    "a =[a_0, a_1, ..., a_N]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " can represent an analog filter of the form:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockMath",
          "data": {
            "value": "H ( s) = \\frac { b_0 s^M + b_1 s^ { ( M - 1)} + \\cdots + b_M} { a_0 s^N + a_1 s^ { ( N - 1)} + \\cdots + a_N} "
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "or a discrete-time filter of the form:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockMath",
          "data": {
            "value": "H ( z) = \\frac { b_0 z^M + b_1 z^ { ( M - 1)} + \\cdots + b_M} { a_0 z^N + a_1 z^ { ( N - 1)} + \\cdots + a_N} "
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This \"positive powers\" form is found more commonly in controls engineering. If "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "M",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "N",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are equal (which is true for all filters generated by the bilinear transform), then this happens to be equivalent to the \"negative powers\" discrete-time form preferred in DSP:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockMath",
          "data": {
            "value": "H ( z) = \\frac { b_0 + b_1 z^ { - 1} + \\cdots + b_M z^ { - M}} { a_0 + a_1 z^ { - 1} + \\cdots + a_N z^ { - N}} "
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Although this is true for common filters, remember that this is not true in the general case. If "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "M",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "N",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are not equal, the discrete-time transfer function coefficients must first be converted to the \"positive powers\" form before finding the poles and zeros."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "b",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Numerator polynomial coefficients."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Denominator polynomial coefficients."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "z",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Zeros of the transfer function."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "p",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Poles of the transfer function."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "k",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "System gain."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return zero, pole, gain (z, p, k) representation from a numerator, denominator representation of a linear filter."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "item_file": "/scipy/signal/filter_design.py",
  "item_line": 1009,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.signal.tf2zpk"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.7.1",
  "signature": "tf2zpk(b, a)",
  "references": null,
  "logo": "logo.png",
  "qa": "scipy.signal.filter_design.tf2zpk",
  "arbitrary": []
}