{
  "_content": {
    "Attributes": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "t_min, t_max",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Time range of the interpolation."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "It is organized as a collection of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "DenseOutput",
                  "reference": {
                    "module": "scipy",
                    "version": "1.7.1",
                    "kind": "module",
                    "path": "scipy.integrate._ivp.base.DenseOutput"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " objects which represent local interpolants. It provides an algorithm to select a right interpolant for each given point."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The interpolants cover the range between "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "t_min",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "t_min"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "t_max",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "t_max"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (see Attributes below). Evaluation outside this interval is not forbidden, but the accuracy is not guaranteed."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "When evaluating at a breakpoint (one of the values in "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "ts",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "ts"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") a segment with the lower index is selected."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "ts",
            "type_": "array_like, shape (n_segments + 1,)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Time instants between which local interpolants are defined. Must be strictly increasing or decreasing (zero segment with two points is also allowed)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "interpolants",
            "type_": "list of DenseOutput with n_segments elements",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Local interpolants. An i-th interpolant is assumed to be defined between "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ts[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ts[i + 1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Continuous ODE solution."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "scipy",
      "version": "1.7.1",
      "kind": "module",
      "path": "scipy.integrate._ivp.base.DenseOutput"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Attributes"
  ],
  "item_file": "/scipy/integrate/_ivp/common.py",
  "item_line": 122,
  "item_type": "<class 'type'>",
  "aliases": [
    "scipy.signal.ltisys.integrate.OdeSolution"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.7.1",
  "signature": "OdeSolution(ts, interpolants)",
  "references": null,
  "logo": "logo.png",
  "qa": "scipy.integrate._ivp.common.OdeSolution",
  "arbitrary": []
}