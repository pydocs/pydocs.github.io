{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "From the given frequencies "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "freq",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "freq"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and corresponding gains "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "gain",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "gain"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", this function constructs an FIR filter with linear phase and (approximately) the given frequency response."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "From the given set of frequencies and gains, the desired response is constructed in the frequency domain. The inverse FFT is applied to the desired response to create the associated convolution kernel, and the first "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "numtaps",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "numtaps"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " coefficients of this kernel, scaled by "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "window",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "window"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", are returned."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The FIR filter will have linear phase. The type of filter is determined by the value of 'numtaps` and "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "antisymmetric",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "antisymmetric"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " flag. There are four possible combinations:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "- odd  `numtaps`, `antisymmetric` is False, type I filter is produced",
              "- even `numtaps`, `antisymmetric` is False, type II filter is produced",
              "- odd  `numtaps`, `antisymmetric` is True, type III filter is produced",
              "- even `numtaps`, `antisymmetric` is True, type IV filter is produced"
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Magnitude response of all but type I filters are subjects to following constraints:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "- type II  -- zero at the Nyquist frequency",
              "- type III -- zero at zero and Nyquist frequencies",
              "- type IV  -- zero at zero frequency"
            ]
          }
        },
        {
          "type": "Admonition",
          "data": {
            "kind": "versionadded",
            "title": "TODO",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "0.9.0 "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "numtaps",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of taps in the FIR filter.  "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "numtaps",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "numtaps"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be less than "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "nfreqs",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "nfreqs"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "freq",
            "type_": "array_like, 1-D",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The frequency sampling points. Typically 0.0 to 1.0 with 1.0 being Nyquist.  The Nyquist frequency is half "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "fs",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "fs"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". The values in "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "freq",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "freq"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be nondecreasing. A value can be repeated once to implement a discontinuity. The first value in "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "freq",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "freq"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be 0, and the last value must be "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fs/2"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Values 0 and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fs/2"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must not be repeated."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "gain",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The filter gains at the frequency sampling points. Certain constraints to gain values, depending on the filter type, are applied, see Notes for details."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "nfreqs",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The size of the interpolation mesh used to construct the filter. For most efficient behavior, this should be a power of 2 plus 1 (e.g, 129, 257, etc). The default is one more than the smallest power of 2 that is not less than "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "numtaps",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "numtaps"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "nfreqs",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "nfreqs"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be greater than "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "numtaps",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "numtaps"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "window",
            "type_": "string or (string, float) or float, or None, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Window function to use. Default is \"hamming\". See "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "scipy.signal.get_window",
                        "reference": {
                          "module": "scipy",
                          "version": "1.7.1",
                          "kind": "module",
                          "path": "scipy.signal.windows.windows.get_window"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for the complete list of possible values. If None, no window function is applied."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "nyq",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Emph",
                      "data": {
                        "value": {
                          "value": "Deprecated. Use `fs` instead."
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " This is the Nyquist frequency. Each frequency in "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "freq",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "freq"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be between 0 and "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "nyq",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "nyq"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  Default is 1."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "antisymmetric",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether resulting impulse response is symmetric/antisymmetric. See Notes for more details."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fs",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The sampling frequency of the signal. Each frequency in "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "cutoff",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be between 0 and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fs/2"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Default is 2."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "taps",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The filter coefficients of the FIR filter, as a 1-D array of length "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "numtaps",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "numtaps"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "FIR filter design using the window method."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "scipy",
      "version": "1.7.1",
      "kind": "module",
      "path": "scipy.signal.fir_filter_design.firwin2"
    },
    {
      "module": "scipy",
      "version": "1.7.1",
      "kind": "module",
      "path": "scipy"
    },
    {
      "module": "scipy",
      "version": "1.7.1",
      "kind": "module",
      "path": "scipy.signal.windows.windows.get_window"
    },
    {
      "module": "scipy",
      "version": "1.7.1",
      "kind": "module",
      "path": "scipy.signal"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "item_file": "/scipy/signal/fir_filter_design.py",
  "item_line": 487,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.signal.firwin2"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "A lowpass FIR filter with a response that is 1 on [0.0, 0.5], and that decreases linearly on [0.5, 1.0] from 1 to 0:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "from"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "scipy",
                  "reference": {
                    "module": "scipy",
                    "version": "1.7.1",
                    "kind": "module",
                    "path": "scipy"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "import"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "signal",
                  "reference": {
                    "module": "scipy",
                    "version": "1.7.1",
                    "kind": "module",
                    "path": "scipy.signal"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "taps"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "signal",
                  "reference": {
                    "module": "scipy",
                    "version": "1.7.1",
                    "kind": "module",
                    "path": "scipy.signal"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "firwin2",
                  "reference": {
                    "module": "scipy",
                    "version": "1.7.1",
                    "kind": "module",
                    "path": "scipy.signal.fir_filter_design.firwin2"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "150"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mf",
              "link": {
                "type": "str",
                "data": "0.0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mf",
              "link": {
                "type": "str",
                "data": "0.5"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mf",
              "link": {
                "type": "str",
                "data": "1.0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mf",
              "link": {
                "type": "str",
                "data": "1.0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mf",
              "link": {
                "type": "str",
                "data": "1.0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mf",
              "link": {
                "type": "str",
                "data": "0.0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "nb",
              "link": {
                "type": "str",
                "data": "print"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "taps"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "72"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ":"
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "78"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "[-0.02286961 -0.06362756  0.57310236  0.57310236 -0.06362756 -0.02286961]",
          "ce_status": "compiled"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "firls",
        "ref": "scipy.signal.fir_filter_design.firls",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "firwin",
        "ref": "scipy.signal.fir_filter_design.firwin",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "minimum_phase",
        "ref": "scipy.signal.fir_filter_design.minimum_phase",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "remez",
        "ref": "scipy.signal.fir_filter_design.remez",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "1.7.1",
  "signature": "firwin2(numtaps, freq, gain, nfreqs=None, window='hamming', nyq=None, antisymmetric=False, fs=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "scipy.signal.fir_filter_design.firwin2",
  "arbitrary": []
}