{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Extract Histogram of Oriented Gradients (HOG) for a given image."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute a Histogram of Oriented Gradients (HOG) by"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockQuote",
          "data": {
            "value": [
              "1. (optional) global image normalization",
              "2. computing the gradient image in `row` and `col`",
              "3. computing gradient histograms",
              "4. normalizing across blocks",
              "5. flattening into a feature vector"
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "image",
            "type_": "(M, N[, C]) ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input image."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "orientations",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of orientation bins."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "pixels_per_cell",
            "type_": "2-tuple (int, int), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Size (in pixels) of a cell."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cells_per_block",
            "type_": "2-tuple (int, int), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of cells in each block."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "block_norm",
            "type_": "str {'L1', 'L1-sqrt', 'L2', 'L2-Hys'}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Block normalization method:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "``L1``",
                            "_number": 2,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "   Normalization using L1-norm.",
                            "_number": 3,
                            "_offset": 3
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "L1"
                              ]
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Normalization using L1-norm."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "``L1-sqrt``",
                            "_number": 4,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "   Normalization using L1-norm, followed by square root.",
                            "_number": 5,
                            "_offset": 3
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "L1-sqrt"
                              ]
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Normalization using L1-norm, followed by square root."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "``L2``",
                            "_number": 6,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "   Normalization using L2-norm.",
                            "_number": 7,
                            "_offset": 3
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "L2"
                              ]
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Normalization using L2-norm."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "``L2-Hys``",
                            "_number": 8,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "   Normalization using L2-norm, followed by limiting the",
                            "_number": 9,
                            "_offset": 3
                          },
                          {
                            "_line": "   maximum values to 0.2 (`Hys` stands for `hysteresis`) and",
                            "_number": 10,
                            "_offset": 3
                          },
                          {
                            "_line": "   renormalization using L2-norm. (default)",
                            "_number": 11,
                            "_offset": 3
                          },
                          {
                            "_line": "   For details, see [3]_, [4]_.",
                            "_number": 12,
                            "_offset": 3
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "L2-Hys"
                              ]
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Normalization using L2-norm, followed by limiting the maximum values to 0.2 ("
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    "Hys"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " stands for "
                                }
                              },
                              {
                                "type": "Link",
                                "data": {
                                  "value": "hysteresis",
                                  "reference": {
                                    "module": "skimage",
                                    "version": "0.17.2",
                                    "kind": "module",
                                    "path": "skimage.filters.thresholding.apply_hysteresis_threshold"
                                  },
                                  "kind": "module",
                                  "exists": true
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": ") and renormalization using L2-norm. (default) For details, see [3]_, [4]_."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "visualize",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Also return an image of the HOG.  For each cell and orientation bin, the image contains a line segment that is centered at the cell center, is perpendicular to the midpoint of the range of angles spanned by the orientation bin, and has intensity proportional to the corresponding histogram value."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "transform_sqrt",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Apply power law compression to normalize the image before processing. DO NOT use this if the image contains negative values. Also see "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "notes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " section below."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "feature_vector",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Return the data as a feature vector by calling .ravel() on the result just before returning."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "multichannel",
            "type_": "boolean, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, the last "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "image",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "image"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " dimension is considered as a color channel, otherwise as spatial."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "(n_blocks_row, n_blocks_col, n_cells_row, n_cells_col, n_orient) ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "HOG descriptor for the image. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "feature_vector",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "feature_vector"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True, a 1D (flattened) array is returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "hog_image",
            "type_": "(M, N) ndarray, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A visualisation of the HOG image. Only provided if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "visualize",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "visualize"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The presented code implements the HOG extraction method from  with the following changes: (I) blocks of (3, 3) cells are used ((2, 2) in the paper); (II) no smoothing within cells (Gaussian spatial window with sigma=8pix in the paper); (III) L1 block normalization is used (L2-Hys in the paper)."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Power law compression, also known as Gamma correction, is used to reduce the effects of shadowing and illumination variations. The compression makes the dark regions lighter. When the kwarg "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "transform_sqrt",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "transform_sqrt"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is set to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the function computes the square root of each color channel and then applies the hog algorithm to the image."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "skimage",
      "version": "0.17.2",
      "kind": "module",
      "path": "skimage.filters.thresholding.apply_hysteresis_threshold"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "References",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3-intel/envs/papyri/lib/python3.9/site-packages/skimage/feature/_hog.py",
  "item_line": 46,
  "item_type": "<class 'function'>",
  "aliases": [
    "skimage.feature.hog"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "0.18.3",
  "signature": "hog(image, orientations=9, pixels_per_cell=(8, 8), cells_per_block=(3, 3), block_norm='L2-Hys', visualize=False, transform_sqrt=False, feature_vector=True, multichannel=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "skimage.feature._hog.hog",
  "arbitrary": []
}