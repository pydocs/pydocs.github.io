{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "An algorithm for local contrast enhancement, that uses histograms computed over different tile regions of the image. Local details can therefore be enhanced even in regions that are darker or lighter than most of the image."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": []
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": []
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "For color images, the following steps are performed:"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "BulletList",
                          "data": {
                            "value": [
                              {
                                "type": "Paragraph",
                                "data": {
                                  "inline": [
                                    {
                                      "type": "Words",
                                      "data": {
                                        "value": "The image is converted to HSV color space"
                                      }
                                    }
                                  ],
                                  "inner": []
                                }
                              },
                              {
                                "type": "Paragraph",
                                "data": {
                                  "inline": [
                                    {
                                      "type": "Words",
                                      "data": {
                                        "value": "The CLAHE algorithm is run on the V (Value) channel"
                                      }
                                    }
                                  ],
                                  "inner": []
                                }
                              },
                              {
                                "type": "Paragraph",
                                "data": {
                                  "inline": [
                                    {
                                      "type": "Words",
                                      "data": {
                                        "value": "The image is converted back to RGB space and returned"
                                      }
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For RGBA images, the original alpha channel is removed."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Admonition",
          "data": {
            "kind": "versionchanged",
            "title": "0.17",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "The values returned by this function are slightly shifted upwards because of an internal change in rounding behavior. "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "image",
            "type_": "(N1, ...,NN[, C]) ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input image."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "kernel_size: int or array_like, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Defines the shape of contextual regions used in the algorithm. If iterable is passed, it must have the same number of elements as "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "image.ndim"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (without color channel). If integer, it is broadcasted to each "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "image",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "image"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " dimension. By default, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "kernel_size"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is 1/8 of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "image"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " height by 1/8 of its width."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "clip_limit",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Clipping limit, normalized between 0 and 1 (higher values give more contrast)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "nbins",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of gray bins for histogram (\"data range\")."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "(N1, ...,NN[, C]) ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Equalized image with float64 dtype."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Contrast Limited Adaptive Histogram Equalization (CLAHE)."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References"
  ],
  "item_file": "/skimage/exposure/_adapthist.py",
  "item_line": 26,
  "item_type": "<class 'function'>",
  "aliases": [
    "skimage.exposure.equalize_adapthist"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "equalize_hist",
        "ref": "skimage.exposure.exposure.equalize_hist",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "rescale_intensity",
        "ref": "skimage.exposure.exposure.rescale_intensity",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "0.17.2",
  "signature": "equalize_adapthist(image, kernel_size=None, clip_limit=0.01, nbins=256)",
  "references": null,
  "logo": "logo.png",
  "qa": "skimage.exposure._adapthist.equalize_adapthist",
  "arbitrary": []
}