{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "arr",
            "type_": "ndarray of float64",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "reach",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "By default ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "reach = 1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), the shortest path can only move one row up or down for every step it moves forward (i.e., the path gradient is limited to 1). "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "reach",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "reach"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " defines the number of elements that can be skipped along each non-axis dimension at each step."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The axis along which the path must always move forward (default -1)"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "output_indexlist",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See return value "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "p",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "p"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for explanation."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "p",
            "type_": "iterable of int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For each step along "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "axis",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "axis"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the coordinate of the shortest path. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "output_indexlist",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "output_indexlist"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True, then the path is returned as a list of n-d tuples that index into "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "arr",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "arr"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If False, then the path is returned as an array listing the coordinates of the path along the non-axis dimensions for each step along the axis dimension. That is, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "p.shape == (arr.shape[axis], arr.ndim-1)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " except that p is squeezed before returning so if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "arr.ndim == 2"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", then "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "p.shape == (arr.shape[axis],)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cost",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Cost of path.  This is the absolute sum of all the differences along the path."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Find the shortest path through an n-d array from one side to another."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/skimage/graph/spath.py",
  "item_line": 5,
  "item_type": "<class 'function'>",
  "aliases": [
    "skimage.graph.shortest_path"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "0.17.2",
  "signature": "shortest_path(arr, reach=1, axis=-1, output_indexlist=False)",
  "references": null,
  "logo": "logo.png",
  "qa": "skimage.graph.spath.shortest_path",
  "arbitrary": []
}