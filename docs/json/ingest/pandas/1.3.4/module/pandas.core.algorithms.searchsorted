{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Admonition",
          "data": {
            "kind": "versionadded",
            "title": "TODO",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "0.25.0 "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Find the indices into a sorted array "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "arr"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (a) such that, if the corresponding elements in "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "value",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "value"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " were inserted before the indices, the order of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "arr"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " would be preserved."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Assuming that "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "arr"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is sorted:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "======  ================================ "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "side",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "side"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "  returned index "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "i"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " satisfies ======  ================================ left    "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "arr[i-1] < value <= self[i]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " right   "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "arr[i-1] <= value < self[i]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " ======  ================================"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "arr: array-like",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input array. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "sorter",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "sorter"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, then it must be sorted in ascending order, otherwise "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "sorter",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "sorter"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be an array of indices that sort it."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "value",
            "type_": "array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Values to insert into "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "arr"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "side",
            "type_": "{'left', 'right'}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If 'left', the index of the first suitable location found is given. If 'right', return the last such index.  If there is no suitable index, return either 0 or N (where N is the length of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "self"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ")."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sorter",
            "type_": "1-D array-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Optional array of integer indices that sort array a into ascending order. They are typically the result of argsort."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "array of ints",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Array of insertion points with the same shape as "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "value",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "value"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Find indices where elements should be inserted to maintain order."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "item_file": "/pandas/core/algorithms.py",
  "item_line": 1525,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.core.algorithms.searchsorted"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "numpy.searchsorted",
        "ref": "numpy.searchsorted",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Similar method from NumPy."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.3.4",
  "signature": "searchsorted(arr, value, side='left', sorter=None) -> 'np.ndarray'",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.algorithms.searchsorted",
  "arbitrary": []
}