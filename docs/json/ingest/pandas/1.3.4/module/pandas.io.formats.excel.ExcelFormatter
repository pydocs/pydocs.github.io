{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "df",
            "type_": "DataFrame or Styler",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "na_rep: na representation",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "float_format",
            "type_": "str, default None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Format string for floating point numbers"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cols",
            "type_": "sequence, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Columns to write"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "header",
            "type_": "bool or sequence of str, default True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Write out column names. If a list of string is given it is assumed to be aliases for the column names"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "index",
            "type_": "bool, default True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "output row names (index)"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "index_label",
            "type_": "str or sequence, default None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Column label for index column(s) if desired. If None is given, and "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "header",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "header"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "index",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "index"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are True, then the index names are used. A sequence should be given if the DataFrame uses MultiIndex."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "merge_cells",
            "type_": "bool, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Format MultiIndex and Hierarchical Rows as merged cells."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "inf_rep",
            "type_": "str, default `'inf'`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "representation for np.inf values (which aren't representable in Excel) A "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "'-'"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " sign will be added in front of -inf."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "style_converter",
            "type_": "callable, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This translates Styler styles (CSS) into ExcelWriter styles. Defaults to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "CSSToExcelConverter()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". It should have signature css_declarations string -> excel style. This is only called for body cells."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Class for formatting a DataFrame to a list of ExcelCells,"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters"
  ],
  "item_file": "/pandas/io/formats/excel.py",
  "item_line": 422,
  "item_type": "<class 'type'>",
  "aliases": [
    "pandas.io.formats.excel.ExcelFormatter"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.3.4",
  "signature": "ExcelFormatter(df, na_rep: 'str' = '', float_format: 'str | None' = None, cols: 'Sequence[Hashable] | None' = None, header: 'Sequence[Hashable] | bool' = True, index: 'bool' = True, index_label: 'IndexLabel | None' = None, merge_cells: 'bool' = False, inf_rep: 'str' = 'inf', style_converter: 'Callable | None' = None)",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.io.formats.excel.ExcelFormatter",
  "arbitrary": []
}