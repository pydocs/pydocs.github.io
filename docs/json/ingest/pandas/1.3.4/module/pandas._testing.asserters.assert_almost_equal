{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "By approximately equal, we refer to objects that are numbers or that contain numbers which may be equivalent to specific levels of precision."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "left",
            "type_": "object",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "right",
            "type_": "object",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "check_dtype",
            "type_": "bool or {'equiv'}, default 'equiv'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Check dtype if both a and b are the same type. If 'equiv' is passed in, then "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "RangeIndex",
                        "reference": {
                          "module": "pandas",
                          "version": "1.3.4",
                          "kind": "module",
                          "path": "pandas.core.indexes.range.RangeIndex"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "Int64Index",
                        "reference": {
                          "module": "pandas",
                          "version": "1.3.4",
                          "kind": "module",
                          "path": "pandas.core.indexes.numeric.Int64Index"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are also considered equivalent when doing type checking."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "check_less_precise",
            "type_": "bool or int, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Specify comparison precision. 5 digits (False) or 3 digits (True) after decimal points are compared. If int, then specify the number of digits to compare."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When comparing two numbers, if the first number has magnitude less than 1e-5, we compare the two numbers directly and check whether they are equivalent within the specified precision. Otherwise, we compare the "
                      }
                    },
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "ratio"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " of the second number to the first number and check whether it is equivalent to 1 within the specified precision."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "deprecated",
                  "title": "1.1.0",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "Use `rtol` and `atol` instead to define relative / absolute tolerance, respectively. Similar to : func : `math.isclose`. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rtol",
            "type_": "float, default 1e-5",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Relative tolerance."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionadded",
                  "title": "TODO",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "1.1.0 "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "atol",
            "type_": "float, default 1e-8",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Absolute tolerance."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionadded",
                  "title": "TODO",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "1.1.0 "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Check that the left and right objects are approximately equal."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "pandas",
      "version": "1.3.4",
      "kind": "module",
      "path": "pandas.core.indexes.range.RangeIndex"
    },
    {
      "module": "pandas",
      "version": "1.3.4",
      "kind": "module",
      "path": "pandas.core.indexes.numeric.Int64Index"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "item_file": "/pandas/_testing/asserters.py",
  "item_line": 56,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas._testing.assert_almost_equal"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.3.4",
  "signature": "assert_almost_equal(left, right, check_dtype: 'bool | str' = 'equiv', check_less_precise: 'bool | int | NoDefault' = <no_default>, rtol: 'float' = 1e-05, atol: 'float' = 1e-08, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas._testing.asserters.assert_almost_equal",
  "arbitrary": []
}