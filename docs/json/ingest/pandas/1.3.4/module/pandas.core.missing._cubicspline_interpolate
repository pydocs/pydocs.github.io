{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "See "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "scipy.interpolate.CubicSpline"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for details."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "xi",
            "type_": "array-like, shape (n,)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "1-d array containing values of the independent variable. Values must be real, finite and in strictly increasing order."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "yi",
            "type_": "array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Array containing values of the dependent variable. It can have arbitrary number of dimensions, but the length along "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "axis"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (see below) must match the length of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Values must be finite."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "scalar or array-like, shape (m,)",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axis along which "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is assumed to be varying. Meaning that for "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " the corresponding values are "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.take(y, i, axis=axis)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Default is 0."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bc_type",
            "type_": "string or 2-tuple, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Boundary condition type. Two additional equations, given by the boundary conditions, are required to determine all coefficients of polynomials on each segment . If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "bc_type",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "bc_type"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a string, then the specified condition will be applied at both ends of a spline. Available conditions are: * 'not-a-knot' (default): The first and second segment at a curve end   are the same polynomial. It is a good default when there is no   information on boundary conditions. * 'periodic': The interpolated functions is assumed to be periodic   of period "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x[-1] - x[0]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". The first and last value of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be   identical: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "y[0] == y[-1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". This boundary condition will result in   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "y'[0] == y'[-1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "y''[0] == y''[-1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". * 'clamped': The first derivative at curves ends are zero. Assuming   a 1D "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "bc_type=((1, 0.0), (1, 0.0))"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the same condition. * 'natural': The second derivative at curve ends are zero. Assuming   a 1D "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "bc_type=((2, 0.0), (2, 0.0))"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the same condition. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "bc_type",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "bc_type"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a 2-tuple, the first and the second value will be applied at the curve start and end respectively. The tuple values can be one of the previously mentioned strings (except 'periodic') or a tuple "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "(order, deriv_values)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " allowing to specify arbitrary derivatives at curve ends: * "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "order"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": the derivative order, 1 or 2. * "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "deriv_value"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": array-like containing derivative values, shape must   be the same as "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", excluding "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "axis"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " dimension. For example, if   "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is 1D, then "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "deriv_value"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be a scalar. If "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "y",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "y"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is 3D with   the shape (n0, n1, n2) and axis=2, then "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "deriv_value"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be 2D   and have the shape (n0, n1)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extrapolate",
            "type_": "{bool, 'periodic', None}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If bool, determines whether to extrapolate to out-of-bounds points based on first and last intervals, or to return NaNs. If 'periodic', periodic extrapolation is used. If None (default), "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "extrapolate"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set to 'periodic' for "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "bc_type='periodic'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and to True otherwise."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "y",
            "type_": "scalar or array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The result, of shape (m,)"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Convenience function for cubic spline data interpolator."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Returns",
    "References"
  ],
  "item_file": "/pandas/core/missing.py",
  "item_line": 604,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.core.missing._cubicspline_interpolate"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "scipy.interpolate.CubicHermiteSpline",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "1.3.4",
  "signature": "_cubicspline_interpolate(xi, yi, x, axis=0, bc_type='not-a-knot', extrapolate=None)",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.missing._cubicspline_interpolate",
  "arbitrary": []
}