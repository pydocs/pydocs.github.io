{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "table_name",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Name of SQL table in database."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "index_col",
            "type_": "string, optional, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Column to set as index."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "coerce_float",
            "type_": "bool, default True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Attempts to convert values of non-string, non-numeric objects (like decimal.Decimal) to floating point. This can result in loss of precision."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "parse_dates",
            "type_": "list or dict, default: None",
            "desc": [
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "List of column names to parse as dates."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "Dict of "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "{column_name: format string}"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " where format string is   strftime compatible in case of parsing string times, or is one of   (D, s, ns, ms, us) in case of parsing integer timestamps."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "Dict of "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "{column_name: arg}"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", where the arg corresponds   to the keyword arguments of "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "pandas.to_datetime"
                              ],
                              "domain": null,
                              "role": "func"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ".   Especially useful with databases without native Datetime support,   such as SQLite."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "columns",
            "type_": "list, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "List of column names to select from SQL table."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "schema",
            "type_": "string, default None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Name of SQL schema in database to query (if database flavor supports this).  If specified, this overwrites the default schema of the SQL database object."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "chunksize",
            "type_": "int, default None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If specified, return an iterator where "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "chunksize",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "chunksize"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the number of rows to include in each chunk."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "DataFrame",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Read SQL database table into a DataFrame."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "item_file": "/pandas/io/sql.py",
  "item_line": 1426,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.io.sql.SQLDatabase.read_table"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "SQLDatabase.read_query",
        "ref": "pandas.io.sql.SQLDatabase.read_query",
        "exists": true
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "pandas.read_sql_table",
        "ref": "pandas.io.sql.read_sql_table",
        "exists": true
      },
      "descriptions": [],
      "type": null
    }
  ],
  "version": "1.3.4",
  "signature": "read_table(self, table_name: 'str', index_col: 'str | Sequence[str] | None' = None, coerce_float: 'bool' = True, parse_dates=None, columns=None, schema: 'str | None' = None, chunksize: 'int | None' = None)",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.io.sql.SQLDatabase.read_table",
  "arbitrary": []
}