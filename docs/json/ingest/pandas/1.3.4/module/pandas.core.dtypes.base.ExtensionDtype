{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The interface includes the following abstract methods that must be implemented by subclasses:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "type"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "name"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "construct_array_type"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The following attributes and methods influence the behavior of the dtype in pandas operations"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "_is_numeric"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "_is_boolean"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "_get_common_dtype"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "na_value"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " class attribute can be used to set the default NA value for this type. "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "numpy.nan"
                  ],
                  "domain": null,
                  "role": "attr"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is used by default."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "ExtensionDtypes are required to be hashable. The base class provides a default implementation, which relies on the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "_metadata"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " class attribute. "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "_metadata"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " should be a tuple containing the strings that define your data type. For example, with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "PeriodDtype"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that's the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "freq"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " attribute."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Strong",
                "data": {
                  "content": {
                    "value": "If you have a parametrized dtype you should set the ``_metadata``\nclass property"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Ideally, the attributes in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "_metadata"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will match the parameters to your "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "ExtensionDtype.__init__"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (if any). If any of the attributes in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "_metadata"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " don't implement the standard "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "__eq__"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "__hash__"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the default implementations here will not work."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For interaction with Apache Arrow (pyarrow), a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "__from_arrow__"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method can be implemented: this method receives a pyarrow Array or ChunkedArray as only argument and is expected to return the appropriate pandas ExtensionArray for this dtype and the passed values::      "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "class ExtensionDtype:",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "    def __from_arrow__(",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "        self, array: Union[pyarrow.Array, pyarrow.ChunkedArray]",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "    ) -> ExtensionArray:",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "        ...",
                  "_number": 5,
                  "_offset": 0
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This class does not inherit from 'abc.ABCMeta' for performance reasons. Methods and properties required by the interface raise "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "pandas.errors.AbstractMethodError"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and no "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "register"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method is provided for registering virtual subclasses."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "A custom data type, to be paired with an ExtensionArray."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "See Also",
    "Notes"
  ],
  "item_file": "/pandas/core/dtypes/base.py",
  "item_line": 35,
  "item_type": "<class 'type'>",
  "aliases": [
    "pandas.api.extensions.ExtensionDtype"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "extensions.ExtensionArray",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Abstract base class for custom 1-D array types."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "extensions.register_extension_dtype",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Register an ExtensionType with pandas as class decorator."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.3.4",
  "signature": "ExtensionDtype()",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.dtypes.base.ExtensionDtype",
  "arbitrary": []
}