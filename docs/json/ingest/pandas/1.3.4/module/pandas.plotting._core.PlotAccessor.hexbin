{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Generate a hexagonal binning plot of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "x",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "x"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " versus "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "y",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "y"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "C",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "C"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (the default), this is a histogram of the number of occurrences of the observations at "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "(x[i], y[i])"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "C",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "C"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is specified, specifies values at given coordinates "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "(x[i], y[i])"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". These values are accumulated for each hexagonal bin and then reduced according to "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "reduce_C_function",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "reduce_C_function"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", having as default the NumPy's mean function ("
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "numpy.mean",
                  "reference": {
                    "module": "numpy",
                    "version": "1.21.3",
                    "kind": "module",
                    "path": "numpy.mean"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "). (If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "C",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "C"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is specified, it must also be a 1-D sequence of the same length as "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "x",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "x"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "y",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "y"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", or a column label.)"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "int or str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The column label or position for x points."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "y",
            "type_": "int or str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The column label or position for y points."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "C",
            "type_": "int or str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The column label or position for the value of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "(x, y)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " point."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "reduce_C_function",
            "type_": "callable, default `np.mean`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Function of one argument that reduces all the values in a bin to a single number (e.g. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "np.mean"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "np.max"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "np.sum"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "np.std"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ")."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "gridsize",
            "type_": "int or tuple of (int, int), default 100",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of hexagons in the x-direction. The corresponding number of hexagons in the y-direction is chosen in a way that the hexagons are approximately regular. Alternatively, gridsize can be a tuple with two elements specifying the number of hexagons in the x-direction and the y-direction."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Additional keyword arguments are documented in "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "DataFrame.plot"
                        ],
                        "domain": null,
                        "role": "meth"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "matplotlib.AxesSubplot",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The matplotlib "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "Axes"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " on which the hexbin is plotted."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Generate a hexagonal binning plot."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "numpy",
      "version": "1.21.3",
      "kind": "module",
      "path": "numpy.mean"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "item_file": "/pandas/plotting/_core.py",
  "item_line": 1638,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.plotting.PlotAccessor.hexbin"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The following examples are generated with random data from a normal distribution."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockDirective",
        "data": {
          "directive_name": "plot",
          "args0": [],
          "inner": {
            "inline": [],
            "inner": []
          }
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            ">>> n = 10000",
            ">>> df = pd.DataFrame({'x': np.random.randn(n),",
            "...                    'y': np.random.randn(n)})",
            ">>> ax = df.plot.hexbin(x='x', y='y', gridsize=20)"
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The next example uses "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "C",
                "reference": {
                  "module": null,
                  "version": null,
                  "kind": "local",
                  "path": "C"
                },
                "kind": "local",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "np.sum"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " as "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "reduce_C_function",
                "reference": {
                  "module": null,
                  "version": null,
                  "kind": "local",
                  "path": "reduce_C_function"
                },
                "kind": "local",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ". Note that "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "'observations'"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " values ranges from 1 to 5 but the result plot shows values up to more than 25. This is because of the "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "reduce_C_function",
                "reference": {
                  "module": null,
                  "version": null,
                  "kind": "local",
                  "path": "reduce_C_function"
                },
                "kind": "local",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockDirective",
        "data": {
          "directive_name": "plot",
          "args0": [],
          "inner": {
            "inline": [],
            "inner": []
          }
        }
      },
      {
        "type": "BlockQuote",
        "data": {
          "value": [
            ">>> n = 500",
            ">>> df = pd.DataFrame({",
            "...     'coord_x': np.random.uniform(-3, 3, size=n),",
            "...     'coord_y': np.random.uniform(30, 50, size=n),",
            "...     'observations': np.random.randint(1,5, size=n)",
            "...     })",
            ">>> ax = df.plot.hexbin(x='coord_x',",
            "...                     y='coord_y',",
            "...                     C='observations',",
            "...                     reduce_C_function=np.sum,",
            "...                     gridsize=10,",
            "...                     cmap=\"viridis\")"
          ]
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "DataFrame.plot",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Make plots of a DataFrame."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "matplotlib.pyplot.hexbin",
        "ref": "matplotlib.pyplot.hexbin",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Hexagonal binning plot using matplotlib, the matplotlib function that is used under the hood."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.3.4",
  "signature": "hexbin(self, x, y, C=None, reduce_C_function=None, gridsize=None, **kwargs)",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.plotting._core.PlotAccessor.hexbin",
  "arbitrary": []
}