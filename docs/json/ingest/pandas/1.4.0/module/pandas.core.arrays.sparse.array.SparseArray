{
  "_content": {
    "Attributes": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "None",
            "type_": "",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "None",
            "type_": "",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "data",
            "type_": "array-like or scalar",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A dense array of values to store in the SparseArray. This may contain "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "fill_value",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "fill_value"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sparse_index",
            "type_": "SparseIndex, optional",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "index",
            "type_": "Index",
            "desc": [
              {
                "type": "Admonition",
                "data": {
                  "kind": "deprecated",
                  "title": "1.4.0",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "Use a function like `np.full` to construct an array with the desired repeats of the scalar value instead. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fill_value",
            "type_": "scalar, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Elements in data that are "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fill_value"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are not stored in the SparseArray. For memory savings, this should be the most common value in "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "data",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "data"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". By default, "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "fill_value",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "fill_value"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " depends on the dtype of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "data",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "data"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ":"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "=========== ========== data.dtype  na_value =========== ========== float       "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.nan"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " int         "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " bool        False datetime64  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pd.NaT"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " timedelta64 "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pd.NaT"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " =========== =========="
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The fill value is potentially specified in three ways. In order of precedence, these are"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "EnumeratedList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "The "
                            }
                          },
                          {
                            "type": "Link",
                            "data": {
                              "value": "fill_value",
                              "reference": {
                                "module": null,
                                "version": null,
                                "kind": "local",
                                "path": "fill_value"
                              },
                              "kind": "local",
                              "exists": true
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " argument"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "dtype.fill_value"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " if "
                            }
                          },
                          {
                            "type": "Link",
                            "data": {
                              "value": "fill_value",
                              "reference": {
                                "module": null,
                                "version": null,
                                "kind": "local",
                                "path": "fill_value"
                              },
                              "kind": "local",
                              "exists": true
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is None and "
                            }
                          },
                          {
                            "type": "Link",
                            "data": {
                              "value": "dtype",
                              "reference": {
                                "module": null,
                                "version": null,
                                "kind": "local",
                                "path": "dtype"
                              },
                              "kind": "local",
                              "exists": true
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is    a "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "SparseDtype"
                              ]
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "data.dtype.fill_value"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " if "
                            }
                          },
                          {
                            "type": "Link",
                            "data": {
                              "value": "fill_value",
                              "reference": {
                                "module": null,
                                "version": null,
                                "kind": "local",
                                "path": "fill_value"
                              },
                              "kind": "local",
                              "exists": true
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is None and "
                            }
                          },
                          {
                            "type": "Link",
                            "data": {
                              "value": "dtype",
                              "reference": {
                                "module": null,
                                "version": null,
                                "kind": "local",
                                "path": "dtype"
                              },
                              "kind": "local",
                              "exists": true
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "    is not a "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "SparseDtype"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and "
                            }
                          },
                          {
                            "type": "Link",
                            "data": {
                              "value": "data",
                              "reference": {
                                "module": null,
                                "version": null,
                                "kind": "local",
                                "path": "data"
                              },
                              "kind": "local",
                              "exists": true
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is a "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "SparseArray"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "kind",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Can be 'integer' or 'block', default is 'integer'. The type of storage for sparse locations."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'block': Stores a "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "block",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "block_length",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " for each   contiguous "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "span"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of sparse values. This is best when   sparse data tends to be clumped together, with large   regions of "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "fill-value"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " values between sparse values."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'integer': uses an integer to store the location of   each sparse value."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dtype",
            "type_": "np.dtype or SparseDtype, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The dtype to use for the SparseArray. For numpy dtypes, this determines the dtype of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self.sp_values"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". For SparseDtype, this determines "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self.sp_values"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self.fill_value"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "copy",
            "type_": "bool, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to explicitly copy the incoming "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "data",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "data"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " array."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "An ExtensionArray for storing sparse data."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.arrays"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.compat._optional.import_optional_dependency"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.arrays.sparse.array.SparseArray"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Attributes",
    "Methods",
    "Examples"
  ],
  "item_file": "/pandas/core/arrays/sparse/array.py",
  "item_line": 284,
  "item_type": "<class 'type'>",
  "aliases": [
    "pandas.arrays.SparseArray"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "from"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "pandas",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "arrays",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.arrays"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "kn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "import",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.compat._optional.import_optional_dependency"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "SparseArray",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.arrays.sparse.array.SparseArray"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "arr"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "SparseArray",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.arrays.sparse.array.SparseArray"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "arr"
              }
            }
          ],
          "out": "[0, 0, 1, 2]\nFill: 0\nIntIndex\nIndices: array([2, 3], dtype=int32)",
          "ce_status": "compiled"
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "version": "1.4.0",
  "signature": "SparseArray(data, sparse_index=None, index=None, fill_value=None, kind: 'SparseIndexKind' = 'integer', dtype: 'Dtype | None' = None, copy: 'bool' = False)",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.arrays.sparse.array.SparseArray",
  "arbitrary": []
}