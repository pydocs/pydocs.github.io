{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "prefix",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " then return only those locales with the prefix provided. For example to get all English language locales (those that start with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"en\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), pass "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "prefix=\"en\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "normalize",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Call "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "locale.normalize"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " on the resulting list of available locales. If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", only locales that can be set without throwing an "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "Exception"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "locale_getter",
            "type_": "callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The function to use to retrieve the current locales. This should return a string with each locale separated by a newline character."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "locales",
            "type_": "list of strings",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of locale strings that can be set with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "locale.setlocale()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". For example::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "locale.setlocale(locale.LC_ALL, locale_string)"
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "On error will return None (no locale available, e.g. Windows)",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Get all the locales that are available on the system."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/pandas/_config/localization.py",
  "item_line": 113,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas._testing.get_locales"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.4.0",
  "signature": "get_locales(prefix: 'str | None' = None, normalize: 'bool' = True, locale_getter: 'Callable[[], bytes]' = <function _default_locale_getter at 0x0000000>) -> 'list[str] | None'",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas._config.localization.get_locales",
  "arbitrary": []
}