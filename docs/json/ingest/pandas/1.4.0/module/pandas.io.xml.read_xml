{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Admonition",
          "data": {
            "kind": "versionadded",
            "title": "TODO",
            "children": [
              {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "1.3.0 "
                    }
                  }
                ],
                "inner": []
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This method is best designed to import shallow XML documents in following format which is the ideal fit for the two-dimensions of a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "DataFrame"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (row by column). ::          "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "value": "<root>\n    <row>\n      <column1>data</column1>\n      <column2>data</column2>\n      <column3>data</column3>\n      ...\n   </row>\n   <row>\n      ...\n   </row>\n   ...\n</root>"
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "As a file format, XML documents can be designed any way including layout of elements and attributes as long as it conforms to W3C specifications. Therefore, this method is a convenience handler for a specific flatter design and not all possible XML structures."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "However, for more complex XML documents, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "stylesheet"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " allows you to temporarily redesign original document with XSLT (a special purpose language) for a flatter version for migration to a DataFrame."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function will "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "always"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " return a single "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "DataFrame",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.frame.DataFrame"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or raise exceptions due to issues with XML document, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "xpath"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", or other parameters."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "path_or_buffer",
            "type_": "str, path object, or file-like object",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "String, path object (implementing "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "os.PathLike[str]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), or file-like object implementing a "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "read()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " function. The string can be any valid XML string or a path. The string can further be a URL. Valid URL schemes include http, ftp, s3, and file."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xpath",
            "type_": "str, optional, default './\\*'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The XPath to parse required set of nodes for migration to DataFrame. XPath should return a collection of elements and not a single element. Note: The "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "etree"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " parser supports limited XPath expressions. For more complex XPath, use "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "lxml"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " which requires installation."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "namespaces",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The namespaces defined in XML document as dicts with key being namespace prefix and value the URI. There is no need to include all namespaces in XML, only the ones used in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "xpath"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " expression. Note: if XML document uses default namespace denoted as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "xmlns='<URI>'",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " without a prefix, you must assign any temporary namespace prefix such as 'doc' to the URI in order to parse underlying nodes and/or attributes. For example, ::      "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "value": "namespaces = {\"doc\": \"https://example.com\"}"
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "elems_only",
            "type_": "bool, optional, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Parse only the child elements at the specified "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "xpath"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". By default, all child elements and non-empty text nodes are returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "attrs_only",
            "type_": "bool, optional, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Parse only the attributes at the specified "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "xpath"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". By default, all attributes are returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "names",
            "type_": "list-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Column names for DataFrame of parsed XML data. Use this parameter to rename original element names and distinguish same named elements."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "encoding",
            "type_": "str, optional, default 'utf-8'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Encoding of XML document."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "parser",
            "type_": "{'lxml','etree'}, default 'lxml'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Parser module to use for retrieval of data. Only 'lxml' and 'etree' are supported. With 'lxml' more complex XPath searches and ability to use XSLT stylesheet are supported."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "stylesheet",
            "type_": "str, path object or file-like object",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A URL, file-like object, or a raw string containing an XSLT script. This stylesheet should flatten complex, deeply nested XML documents for easier parsing. To use this feature you must have "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "lxml"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " module installed and specify 'lxml' as "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "parser"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". The "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "xpath"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must reference nodes of transformed XML document generated after XSLT transformation and not the original XML document. Only XSLT 1.0 scripts and not later versions is currently supported."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "compression",
            "type_": "str or dict, default 'infer'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For on-the-fly decompression of on-disk data. If 'infer' and 'path_or_buffer' is path-like, then detect compression from the following extensions: '.gz', '.bz2', '.zip', '.xz', or '.zst' (otherwise no compression). If using 'zip', the ZIP file must contain only one data file to be read in. Set to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for no decompression. Can also be a dict with key "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'method'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " set to one of {"
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'zip'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'gzip'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'bz2'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'zstd'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "} and other key-value pairs are forwarded to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "zipfile.ZipFile"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "gzip.GzipFile"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "bz2.BZ2File"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "zstandard.ZstdDecompressor"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", respectively. As an example, the following could be passed for Zstandard decompression using a custom compression dictionary: "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "compression={'method': 'zstd', 'dict_data': my_compression_dict}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionchanged",
                  "title": "TODO",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "1.4.0 Zstandard support. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "storage_options",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "urllib"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " as header options. For other URLs (e.g. starting with \"s3://\", and \"gcs://\") the key-value pairs are forwarded to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fsspec"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Please see "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fsspec"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "urllib"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for more details."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "df",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A DataFrame."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Read XML document into a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "DataFrame"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " object."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.frame.DataFrame"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.io.xml"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.io.html._build_xpath_expr"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.io.xml.read_xml"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/pandas/io/xml.py",
  "item_line": 738,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.read_xml"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'''"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "<?xml version="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "1.0"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " encoding="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "utf-8"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "?>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "<data xmlns="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "http://example.com"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": ">"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " <row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <shape>square</shape>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <degrees>360</degrees>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <sides>4.0</sides>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " </row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " <row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <shape>circle</shape>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <degrees>360</degrees>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <sides/>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " </row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " <row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <shape>triangle</shape>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <degrees>180</degrees>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "   <sides>3.0</sides>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " </row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "</data>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'''"
              }
            }
          ],
          "out": "",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "read_xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml.read_xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            }
          ],
          "out": "      shape  degrees  sides\n0    square      360    4.0\n1    circle      360    NaN\n2  triangle      180    3.0",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'''"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "<?xml version="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "1.0"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " encoding="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "utf-8"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "?>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "<data>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  <row shape="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "square"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " degrees="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "360"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " sides="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "4.0"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "/>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  <row shape="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "circle"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " degrees="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "360"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "/>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  <row shape="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "triangle"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " degrees="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "180"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " sides="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "3.0"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "/>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "</data>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'''"
              }
            }
          ],
          "out": "",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "read_xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml.read_xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xpath",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.html._build_xpath_expr"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": ".//row"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            }
          ],
          "out": "      shape  degrees  sides\n0    square      360    4.0\n1    circle      360    NaN\n2  triangle      180    3.0",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'''"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "<?xml version="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "1.0"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": " encoding="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "utf-8"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "?>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "<doc:data xmlns:doc="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "https://example.com"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": ">"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  <doc:row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:shape>square</doc:shape>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:degrees>360</doc:degrees>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:sides>4.0</doc:sides>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  </doc:row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  <doc:row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:shape>circle</doc:shape>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:degrees>360</doc:degrees>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:sides/>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  </doc:row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  <doc:row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:shape>triangle</doc:shape>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:degrees>180</doc:degrees>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "    <doc:sides>3.0</doc:sides>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "  </doc:row>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "</doc:data>"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'''"
              }
            }
          ],
          "out": "",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "read_xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml.read_xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xml",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.xml"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "                 "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "xpath",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.io.html._build_xpath_expr"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "//doc:row"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "                 "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "namespaces"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "{"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "doc"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ":"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "https://example.com"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "}"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            }
          ],
          "out": "      shape  degrees  sides\n0    square      360    4.0\n1    circle      360    NaN\n2  triangle      180    3.0",
          "ce_status": "compiled"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "read_html",
        "ref": "pandas.io.html.read_html",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Read HTML tables into a list of DataFrame objects."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "read_json",
        "ref": "pandas.io.json._json.read_json",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Convert a JSON string to pandas object."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.4.0",
  "signature": "read_xml(path_or_buffer: 'FilePath | ReadBuffer[bytes] | ReadBuffer[str]', xpath: 'str' = './*', namespaces: 'dict[str, str] | None' = None, elems_only: 'bool' = False, attrs_only: 'bool' = False, names: 'Sequence[str] | None' = None, encoding: 'str | None' = 'utf-8', parser: 'XMLParsers' = 'lxml', stylesheet: 'FilePath | ReadBuffer[bytes] | ReadBuffer[str] | None' = None, compression: 'CompressionOptions' = 'infer', storage_options: 'StorageOptions' = None) -> 'DataFrame'",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.io.xml.read_xml",
  "arbitrary": []
}