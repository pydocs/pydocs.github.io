{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function converts a scalar, array-like, "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Series",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.series.Series"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "DataFrame",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.frame.DataFrame"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "/dict-like to a pandas datetime object."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Many input types are supported, and lead to different output types:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "scalars"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " can be int, float, str, datetime object (from stdlib "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "datetime",
                        "domain": null,
                        "role": "mod"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   module or "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "numpy",
                        "domain": null,
                        "role": "mod"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "). They are converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Timestamp",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " when   possible, otherwise they are converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "datetime.datetime",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".   None/NaN/null scalars are converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "NaT",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "array-like"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " can contain int, float, str, datetime objects. They are   converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "DatetimeIndex",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " when possible, otherwise they are   converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Index",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "object",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " dtype, containing   "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "datetime.datetime",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". None/NaN/null entries are converted to   "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "NaT",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " in both cases."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "Series"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Series",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "datetime64",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   dtype when possible, otherwise they are converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Series",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with   "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "object",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " dtype, containing "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "datetime.datetime",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". None/NaN/null   entries are converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "NaT",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " in both cases."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Strong",
                      "data": {
                        "content": {
                          "value": "DataFrame/dict-like"
                        }
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are converted to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Series",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with   "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "datetime64",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " dtype. For each row a datetime is created from assembling   the various dataframe columns. Column keys can be common abbreviations   like [\u2018year\u2019, \u2018month\u2019, \u2018day\u2019, \u2018minute\u2019, \u2018second\u2019, \u2018ms\u2019, \u2018us\u2019, \u2018ns\u2019]) or   plurals of the same."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The following causes are responsible for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "datetime.datetime",
                  "domain": null,
                  "role": "class"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " objects being returned (possibly inside an "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Index",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.indexes.base.Index"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or a "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Series",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.series.Series"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "object",
                  "domain": null,
                  "role": "class"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " dtype) instead of a proper pandas designated type ("
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Timestamp",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas._libs.tslibs.timestamps.Timestamp"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "DatetimeIndex",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.indexes.datetimes.DatetimeIndex"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "Series",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.series.Series"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "datetime64",
                  "domain": null,
                  "role": "class"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " dtype):"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "when any input element is before "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Timestamp.min",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or after   "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Timestamp.max",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", see "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "timestamp limitations\n  <https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html\n  #timeseries-timestamp-limits>",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "when "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "utc=False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (default) and the input is an array-like or   "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "Series",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " containing mixed naive/aware datetime, or aware with mixed   time offsets. Note that this happens in the (quite frequent) situation when   the timezone has a daylight savings policy. In that case you may wish to   use "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "utc=True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "arg",
            "type_": "int, float, str, datetime, list, tuple, 1-d array, Series, DataFrame/dict-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The object to convert to a datetime. If a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "DataFrame",
                        "reference": {
                          "module": "pandas",
                          "version": "1.4.0",
                          "kind": "module",
                          "path": "pandas.core.frame.DataFrame"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is provided, the method expects minimally the following columns: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "\"year\"",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "\"month\"",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "\"day\"",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "errors",
            "type_": "{'ignore', 'raise', 'coerce'}, default 'raise'",
            "desc": [
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "'raise'",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", then invalid parsing will raise an exception."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "'coerce'",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", then invalid parsing will be set as "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "NaT",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "'ignore'",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", then invalid parsing will return the input."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dayfirst",
            "type_": "bool, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Specify a date parse order if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "arg",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "arg"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is str or is list-like. If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "True",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", parses dates with the day first, e.g. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "\"10/11/12\"",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is parsed as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "2012-11-10",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "warning",
                  "title": "",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "``dayfirst=True`` is not strict, but will prefer to parse with day first. If a delimited date string cannot be parsed in accordance with the given `dayfirst` option, e.g. ``to_datetime ( [ ' 31 - 12 - 2021 ' ])``, then a warning will be shown. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "yearfirst",
            "type_": "bool, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Specify a date parse order if "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "arg",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "arg"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is str or is list-like."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "True",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " parses dates with the year first, e.g.   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "\"10/11/12\"",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is parsed as "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "2010-11-12",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": "."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If both "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "dayfirst",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "yearfirst",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " are "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "True",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "yearfirst",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is   preceded (same as "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "dateutil",
                              "domain": null,
                              "role": "mod"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ")."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "warning",
                  "title": "",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "``yearfirst=True`` is not strict, but will prefer to parse with year first. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "utc",
            "type_": "bool, default None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Control timezone-related parsing, localization and conversion."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "True",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", the function "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "always"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " returns a timezone-aware   UTC-localized "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Timestamp",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Series",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " or   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "DatetimeIndex",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ". To do this, timezone-naive inputs are   "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "localized"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " as UTC, while timezone-aware inputs are "
                            }
                          },
                          {
                            "type": "Emph",
                            "data": {
                              "value": {
                                "value": "converted"
                              }
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " to UTC."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "False",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " (default), inputs will not be coerced to UTC.   Timezone-naive inputs will remain naive, while timezone-aware ones   will keep their time offsets. Limitations exist for mixed   offsets (typically, daylight savings), see "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Examples\n  <to_datetime_tz_examples>",
                              "domain": null,
                              "role": "ref"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " section for details."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See also: pandas general documentation about "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "timezone conversion and\nlocalization\n<https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html\n#time-zone-handling>",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "format",
            "type_": "str, default None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The strftime to parse time, e.g. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "\"%d/%m/%Y\"",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Note that "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "\"%f\"",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will parse all the way up to nanoseconds. See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "strftime documentation\n<https://docs.python.org/3/library/datetime.html\n#strftime-and-strptime-behavior>",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for more information on choices."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "exact",
            "type_": "bool, default True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Control how "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "format",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "format"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is used:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "True",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", require an exact "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "format",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " match."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "False",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", allow the "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "format",
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " to match anywhere in the target   string."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "unit",
            "type_": "str, default 'ns'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The unit of the arg (D,s,ms,us,ns) denote the unit, which is an integer or float number. This will be based off the origin. Example, with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "unit='ms'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "origin='unix'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (the default), this would calculate the number of milliseconds to the unix epoch start."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "infer_datetime_format",
            "type_": "bool, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "True",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and no "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "format",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "format"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is given, attempt to infer the format of the datetime strings based on the first non-NaN element, and if it can be inferred, switch to a faster method of parsing them. In some cases this can increase the parsing speed by ~5-10x."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "origin",
            "type_": "scalar, default 'unix'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Define the reference date. The numeric values would be parsed as number of units (defined by "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "unit",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "unit"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") since this reference date."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "'unix'",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " (or POSIX) time; origin is set to 1970-01-01."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "'julian'",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", unit must be "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "'D'",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", and origin is set to   beginning of Julian Calendar. Julian day number "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "0",
                              "domain": null,
                              "role": "const"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " is assigned   to the day starting at noon on January 1, 4713 BC."
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "If Timestamp convertible, origin is set to Timestamp identified by   origin."
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cache",
            "type_": "bool, default True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "True",
                        "domain": null,
                        "role": "const"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", use a cache of unique, converted dates to apply the datetime conversion. May produce significant speed-up when parsing duplicate date strings, especially ones with timezone offsets. The cache is only used when there are at least 50 values. The presence of out-of-bounds values will render the cache unusable and may slow down parsing."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Admonition",
                "data": {
                  "kind": "versionchanged",
                  "title": "0.25.0",
                  "children": [
                    {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "changed default value from : const : `False` to : const : `True`. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "ParserError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When parsing a date from string fails."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "ValueError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When another datetime conversion error happens. For example when one of 'year', 'month', day' columns is missing in a "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "DataFrame",
                        "reference": {
                          "module": "pandas",
                          "version": "1.4.0",
                          "kind": "module",
                          "path": "pandas.core.frame.DataFrame"
                        },
                        "kind": "module",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or when a Timezone-aware "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "datetime.datetime",
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is found in an array-like of mixed time offsets, and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "utc=False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "datetime",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If parsing succeeded. Return type depends on input (types in parenthesis correspond to fallback in case of unsuccessful timezone or out-of-range timestamp parsing):"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BulletList",
                "data": {
                  "value": [
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "scalar: "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Timestamp",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " (or "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "datetime.datetime",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ")"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "array-like: "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "DatetimeIndex",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " (or "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Series",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " with   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "object",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " dtype containing "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "datetime.datetime",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ")"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "Series: "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Series",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "datetime64",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " dtype (or   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Series",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "object",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " dtype containing   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "datetime.datetime",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ")"
                            }
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "type": "Paragraph",
                      "data": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "DataFrame: "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Series",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "datetime64",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " dtype (or   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "Series",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " of "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "object",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " dtype containing   "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": "datetime.datetime",
                              "domain": null,
                              "role": "class"
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ")"
                            }
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Convert argument to datetime."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas._libs.tslibs.timestamps.Timestamp"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.indexes.datetimes.DatetimeIndex"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.series.Series"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.tools.datetimes._adjust_to_origin"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.tools.datetimes.to_datetime"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.indexes.base.Index"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.compat._optional.import_optional_dependency"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.errors"
    },
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.frame.DataFrame"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/pandas/core/tools/datetimes.py",
  "item_line": 678,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.to_datetime"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Strong",
              "data": {
                "content": {
                  "value": "Handling various input formats"
                }
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Assembling a datetime from multiple columns of a "
              }
            },
            {
              "type": "Link",
              "data": {
                "value": "DataFrame",
                "reference": {
                  "module": "pandas",
                  "version": "1.4.0",
                  "kind": "module",
                  "path": "pandas.core.frame.DataFrame"
                },
                "kind": "module",
                "exists": true
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ". The keys can be common abbreviations like ['year', 'month', 'day', 'minute', 'second', 'ms', 'us', 'ns']) or plurals of the same"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "DataFrame",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.frame.DataFrame"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "{"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "year"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ":"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2015"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2016"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "                   "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "month"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ":"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "3"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "                   "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "day"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ":"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "4"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "5"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "}"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "df"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "0   2015-02-04\n1   2016-03-05\ndtype: datetime64[ns]",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Passing "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "infer_datetime_format=True"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " can often-times speedup a parsing if its not an ISO8601 format exactly, but in a regular format."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "s"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "Series",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.series.Series"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "3/11/2000"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "3/12/2000"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "3/13/2000"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "*"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1000"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "s"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "head"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "0    3/11/2000\n1    3/12/2000\n2    3/13/2000\n3    3/11/2000\n4    3/12/2000\ndtype: object",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "%"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timeit"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "s"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "infer_datetime_format"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "kc",
              "link": {
                "type": "str",
                "data": "True"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "  "
              }
            },
            {
              "type": "c1",
              "link": {
                "type": "str",
                "data": "# doctest: +SKIP"
              }
            }
          ],
          "out": "100 loops, best of 3: 10.4 ms per loop",
          "ce_status": "syntax_error"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "%"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timeit"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "s"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "infer_datetime_format"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "kc",
              "link": {
                "type": "str",
                "data": "False"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "  "
              }
            },
            {
              "type": "c1",
              "link": {
                "type": "str",
                "data": "# doctest: +SKIP"
              }
            }
          ],
          "out": "1 loop, best of 3: 471 ms per loop",
          "ce_status": "syntax_error"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Using a unix epoch time"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1490195805"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "unit"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "s"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "Timestamp('2017-03-22 15:16:45')",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1490195805433502912"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "unit"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "ns"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "Timestamp('2017-03-22 15:16:45.433502912')",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Admonition",
        "data": {
          "kind": "warning",
          "title": "For float arg, precision rounding might happen. To prevent",
          "children": [
            {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "unexpected behavior use a fixed - width exact type. "
                  }
                }
              ],
              "inner": []
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Using a non-unix epoch origin"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "3"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "unit"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "D"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "               "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "origin",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes._adjust_to_origin"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "Timestamp",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas._libs.tslibs.timestamps.Timestamp"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "1960-01-01"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "DatetimeIndex(['1960-01-02', '1960-01-03', '1960-01-04'],\n              dtype='datetime64[ns]', freq=None)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Strong",
              "data": {
                "content": {
                  "value": "Non-convertible date/times"
                }
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "If a date does not meet the "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": "timestamp limitations\n<https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html\n#timeseries-timestamp-limits>",
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", passing "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "errors='ignore'"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " will return the original input instead of raising any exception."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Passing "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "errors='coerce'"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " will force an out-of-bounds date to "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": "NaT",
                "domain": null,
                "role": "const"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", in addition to forcing non-dates (or non-parseable dates) to "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": "NaT",
                "domain": null,
                "role": "const"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "13000101"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nb",
              "link": {
                "type": "str",
                "data": "format"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "%"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "Y"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "%"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "m"
              }
            },
            {
              "type": "si",
              "link": {
                "type": "str",
                "data": "%d"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "errors",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.errors"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "ignore"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "datetime.datetime(1300, 1, 1, 0, 0)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "13000101"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nb",
              "link": {
                "type": "str",
                "data": "format"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "%"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "Y"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "%"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "m"
              }
            },
            {
              "type": "si",
              "link": {
                "type": "str",
                "data": "%d"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "errors",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.errors"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "coerce"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "NaT",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Unimplemented",
        "data": {
          "value": ".. _to_datetime_tz_examples:",
          "placeholder": "target"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Strong",
              "data": {
                "content": {
                  "value": "Timezones and time offsets"
                }
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The default behaviour ("
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "utc=False"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ") is as follows:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "Timezone-naive inputs are converted to timezone-naive "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "DatetimeIndex",
                      "domain": null,
                      "role": "class"
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": ":"
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 12:00"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 13:00:15"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "DatetimeIndex(['2018-10-26 12:00:00', '2018-10-26 13:00:15'],\n              dtype='datetime64[ns]', freq=None)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "Timezone-aware inputs "
                    }
                  },
                  {
                    "type": "Emph",
                    "data": {
                      "value": {
                        "value": "with constant time offset"
                      }
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " are converted to   timezone-aware "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "DatetimeIndex",
                      "domain": null,
                      "role": "class"
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": ":"
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 12:00 -0500"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 13:00 -0500"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "DatetimeIndex(['2018-10-26 12:00:00-05:00', '2018-10-26 13:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq=None)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "However, timezone-aware inputs "
                    }
                  },
                  {
                    "type": "Emph",
                    "data": {
                      "value": {
                        "value": "with mixed time offsets"
                      }
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " (for example   issued from a timezone with daylight savings, such as Europe/Paris)   are "
                    }
                  },
                  {
                    "type": "Strong",
                    "data": {
                      "content": {
                        "value": "not successfully converted"
                      }
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " to a "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "DatetimeIndex",
                      "domain": null,
                      "role": "class"
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": ". Instead a   simple "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "Index",
                      "domain": null,
                      "role": "class"
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " containing "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "datetime.datetime",
                      "domain": null,
                      "role": "class"
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " objects is   returned:"
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2020-10-25 02:00 +0200"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2020-10-25 04:00 +0100"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "Index([2020-10-25 02:00:00+02:00, 2020-10-25 04:00:00+01:00],\n      dtype='object')",
          "ce_status": "compiled"
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "A mix of timezone-aware and timezone-naive inputs is converted to   a timezone-aware "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "DatetimeIndex",
                      "domain": null,
                      "role": "class"
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " if the offsets of the timezone-aware   are constant:"
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "from"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "kn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "import",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.compat._optional.import_optional_dependency"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "2020-01-01 01:00 -01:00"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2020"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "3"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "0"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "DatetimeIndex(['2020-01-01 01:00:00-01:00', '2020-01-01 02:00:00-01:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-60)]', freq=None)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "Finally, mixing timezone-aware strings and "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "datetime.datetime",
                      "domain": null,
                      "role": "class"
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " always   raises an error, even if the elements all have the same time offset."
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "kn",
              "link": {
                "type": "str",
                "data": "from"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "nn",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "kn",
              "link": {
                "type": "Link",
                "data": {
                  "value": "import",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.compat._optional.import_optional_dependency"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timezone"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timedelta"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "d"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2020"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "18"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "tzinfo"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timezone"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "-"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timedelta"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "hours"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "2020-01-01 17:00 -0100"
              }
            },
            {
              "type": "s2",
              "link": {
                "type": "str",
                "data": "\""
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "d"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "Traceback (most recent call last):\n    ...\nValueError: Tz-aware datetime.datetime cannot be converted to datetime64\n            unless utc=True",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Setting "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "utc=True"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " solves most of the above issues:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "Timezone-naive inputs are "
                    }
                  },
                  {
                    "type": "Emph",
                    "data": {
                      "value": {
                        "value": "localized"
                      }
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " as UTC"
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 12:00"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 13:00"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "utc"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "kc",
              "link": {
                "type": "str",
                "data": "True"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "DatetimeIndex(['2018-10-26 12:00:00+00:00', '2018-10-26 13:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq=None)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "Timezone-aware inputs are "
                    }
                  },
                  {
                    "type": "Emph",
                    "data": {
                      "value": {
                        "value": "converted"
                      }
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": " to UTC (the output represents the   exact same datetime, but viewed from the UTC time offset "
                    }
                  },
                  {
                    "type": "Directive",
                    "data": {
                      "value": "+00:00",
                      "domain": null,
                      "role": null
                    }
                  },
                  {
                    "type": "Words",
                    "data": {
                      "value": ")."
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 12:00 -0530"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 12:00 -0500"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "               "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "utc"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "kc",
              "link": {
                "type": "str",
                "data": "True"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "DatetimeIndex(['2018-10-26 17:30:00+00:00', '2018-10-26 17:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq=None)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "BulletList",
        "data": {
          "value": [
            {
              "type": "Paragraph",
              "data": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "Inputs can contain both naive and aware, string or datetime, the above   rules still apply"
                    }
                  }
                ],
                "inner": []
              }
            }
          ]
        }
      },
      {
        "type": "Code2",
        "data": {
          "entries": [
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "pd"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "."
              }
            },
            {
              "type": "",
              "link": {
                "type": "Link",
                "data": {
                  "value": "to_datetime",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.tools.datetimes.to_datetime"
                  },
                  "kind": "module",
                  "exists": true
                }
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "["
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 12:00"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "2018-10-26 12:00 -0530"
              }
            },
            {
              "type": "s1",
              "link": {
                "type": "str",
                "data": "'"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "               "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2020"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "18"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "               "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "datetime"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "2020"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": " "
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "18"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "               "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "tzinfo"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timezone"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "-"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "timedelta"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "("
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "hours"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "mi",
              "link": {
                "type": "str",
                "data": "1"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "]"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ","
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "\n"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "               "
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": "utc"
              }
            },
            {
              "type": "o",
              "link": {
                "type": "str",
                "data": "="
              }
            },
            {
              "type": "kc",
              "link": {
                "type": "str",
                "data": "True"
              }
            },
            {
              "type": "",
              "link": {
                "type": "str",
                "data": ")"
              }
            }
          ],
          "out": "DatetimeIndex(['2018-10-26 12:00:00+00:00', '2018-10-26 17:30:00+00:00',\n               '2020-01-01 18:00:00+00:00', '2020-01-01 19:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq=None)",
          "ce_status": "compiled"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "DataFrame.astype",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Cast argument to a specified dtype."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "convert_dtypes",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Convert dtypes."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "to_timedelta",
        "ref": "pandas.core.tools.timedeltas.to_timedelta",
        "exists": true
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Convert argument to timedelta."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "version": "1.4.0",
  "signature": "to_datetime(arg: 'DatetimeScalarOrArrayConvertible', errors: 'str' = 'raise', dayfirst: 'bool' = False, yearfirst: 'bool' = False, utc: 'bool | None' = None, format: 'str | None' = None, exact: 'bool' = True, unit: 'str | None' = None, infer_datetime_format: 'bool' = False, origin='unix', cache: 'bool' = True) -> 'DatetimeIndex | Series | DatetimeScalar | NaTType | None'",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.tools.datetimes.to_datetime",
  "arbitrary": []
}