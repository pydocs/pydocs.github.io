{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "numeric_only",
            "type_": "bool, default False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Include only float, int, boolean columns. If None, will attempt to use everything, then use only numeric data."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "min_count",
            "type_": "int, default -1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The required number of valid values to perform the operation. If fewer than "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "min_count"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " non-NA values are present the result will be NA."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "Series or DataFrame",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Computed first of values within each group."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute first of group values."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/pandas/core/groupby/groupby.py",
  "item_line": 2223,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.core.groupby.GroupBy.first"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.4.0",
  "signature": "first(self, numeric_only: 'bool' = False, min_count: 'int' = -1)",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.groupby.groupby.GroupBy.first",
  "arbitrary": []
}