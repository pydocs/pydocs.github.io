{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The length of "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "labels",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "labels"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "shape",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "shape"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must be identical."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "labels",
            "type_": "sequence of arrays",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Integers identifying levels at each location"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "shape",
            "type_": "tuple[int, ...]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of unique levels at each location"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sort",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If the ranks of returned ids should match lexical ranks of labels"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xnull",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If true nulls are excluded. i.e. -1 values in the labels are passed through."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "An array of type int64 where two elements are equal if their corresponding",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "labels are equal at all location.",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For the particular label_list, gets the offsets into the hypothetical list representing the totally ordered cartesian product of all possible label combinations, "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "as long as"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " this space fits within int64 bounds; otherwise, though group indices identify unique combinations of labels, they cannot be deconstructed. - If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "sort",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "sort"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", rank of returned ids preserve lexical ranks of labels.   i.e. returned id's can be used to do lexical sort on labels; - If "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "xnull",
                  "reference": {
                    "module": null,
                    "version": null,
                    "kind": "local",
                    "path": "xnull"
                  },
                  "kind": "local",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " nulls (-1 labels) are passed through."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "item_file": "/pandas/core/sorting.py",
  "item_line": 99,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.core.frame.get_group_index"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.4.0",
  "signature": "get_group_index(labels, shape: 'Shape', sort: 'bool', xnull: 'bool') -> 'npt.NDArray[np.int64]'",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.sorting.get_group_index",
  "arbitrary": []
}