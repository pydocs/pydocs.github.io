{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "dialect",
            "type_": "str or csv.Dialect",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If provided, this parameter will override values (default or not) for the following parameters: "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "delimiter",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "delimiter"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "doublequote",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "escapechar",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "skipinitialspace",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "quotechar",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "quoting",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If it is necessary to override values, a ParserWarning will be issued. See csv.Dialect documentation for more details."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "delimiter",
            "type_": "str or object",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Alias for sep."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "delim_whitespace",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Specifies whether or not whitespace (e.g. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "' '"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'\t'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") will be used as the sep. Equivalent to setting "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "sep='\\s+'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If this option is set to True, nothing should be passed in for the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "delimiter"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " parameter."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "engine",
            "type_": "{{'c', 'python'}}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Parser engine to use. The C engine is faster while the python engine is currently more feature-complete."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sep",
            "type_": "str or object",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A delimiter provided by the user (str) or a sentinel value, i.e. pandas._libs.lib.no_default."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "error_bad_lines",
            "type_": "str or None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to error on a bad line or not."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "warn_bad_lines",
            "type_": "str or None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to warn on a bad line or not."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "on_bad_lines",
            "type_": "str, callable or None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An option for handling bad lines or a sentinel value(None)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "names",
            "type_": "array-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "List of column names to use. If the file contains a header row, then you should explicitly pass "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "header=0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to override the column names. Duplicates in this list are not allowed."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "prefix",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Prefix to add to column numbers when no header, e.g. 'X' for X0, X1, ..."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "defaults: dict",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Default values of input parameters."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "ValueError",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If a delimiter was specified with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "sep"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "delimiter"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "delim_whitespace=True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If on_bad_lines is specified(not "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "error_bad_lines"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "/ "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "warn_bad_lines"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "kwds",
            "type_": "dict",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input parameters with correct values."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Validate/refine default values of input parameters of read_csv, read_table."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises"
  ],
  "item_file": "/pandas/io/parsers/readers.py",
  "item_line": 1424,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.io.parsers.readers._refine_defaults_read"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.4.0",
  "signature": "_refine_defaults_read(dialect: 'str | csv.Dialect', delimiter: 'str | object', delim_whitespace: 'bool', engine: 'CSVEngine | None', sep: 'str | object', error_bad_lines: 'bool | None', warn_bad_lines: 'bool | None', on_bad_lines: 'str | Callable | None', names: 'ArrayLike | None | object', prefix: 'str | None | object', defaults: 'dict[str, Any]')",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.io.parsers.readers._refine_defaults_read",
  "arbitrary": []
}