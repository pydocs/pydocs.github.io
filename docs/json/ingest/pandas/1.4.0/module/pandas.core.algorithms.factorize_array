{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This doesn't do any coercion of types or unboxing before factorization."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "values",
            "type_": "ndarray",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "na_sentinel",
            "type_": "int, default -1",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "size_hint",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Passed through to the hashtable's 'get_labels' method"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "na_value",
            "type_": "object, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A value in "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "values",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "values"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to consider missing. Note: only use this parameter when you know that you don't have any values pandas would consider missing in the array (NaN for float data, iNaT for datetimes, etc.)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mask",
            "type_": "ndarray[bool], optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not None, the mask is used as indicator for missing values (True = missing, False = valid) instead of "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "na_value",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "na_value"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or condition \"val != val\"."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "codes",
            "type_": "ndarray[np.intp]",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "uniques",
            "type_": "ndarray",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Factorize a numpy array to codes and uniques."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/pandas/core/algorithms.py",
  "item_line": 524,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.core.algorithms.factorize_array"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.4.0",
  "signature": "factorize_array(values: 'np.ndarray', na_sentinel: 'int' = -1, size_hint: 'int | None' = None, na_value=None, mask: 'np.ndarray | None' = None) -> 'tuple[npt.NDArray[np.intp], np.ndarray]'",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.algorithms.factorize_array",
  "arbitrary": []
}