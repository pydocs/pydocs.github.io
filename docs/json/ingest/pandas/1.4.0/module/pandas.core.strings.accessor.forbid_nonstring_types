{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For calling "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": ".str.{method}",
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " on a Series or Index, it is necessary to first initialize the "
                }
              },
              {
                "type": "Link",
                "data": {
                  "value": "StringMethods",
                  "reference": {
                    "module": "pandas",
                    "version": "1.4.0",
                    "kind": "module",
                    "path": "pandas.core.strings.accessor.StringMethods"
                  },
                  "kind": "module",
                  "exists": true
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " object, and then call the method. However, different methods allow different input types, and so this can not be checked during "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "StringMethods.__init__",
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", but must be done on a per-method basis. This decorator exists to facilitate this process, and make it explicit which (inferred) types are disallowed by the method."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Directive",
                "data": {
                  "value": "StringMethods.__init__",
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " allows the "
                }
              },
              {
                "type": "Emph",
                "data": {
                  "value": {
                    "value": "union"
                  }
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of types its different methods allow (after skipping NaNs; see "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": "StringMethods._validate",
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "), namely: ['string', 'empty', 'bytes', 'mixed', 'mixed-integer']."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The default string types ['string', 'empty'] are allowed for all methods. For the additional types ['bytes', 'mixed', 'mixed-integer'], each method then needs to forbid the types it is not intended for."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "forbidden",
            "type_": "list-of-str or None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "List of forbidden non-string types, may be one or more of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": "['bytes', 'mixed', 'mixed-integer']",
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "name",
            "type_": "str, default None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Name of the method to use in the error message. By default, this is None, in which case the name from the method being wrapped will be copied. However, for working with further wrappers (like _pat_wrapper and _noarg_wrapper), it is necessary to specify the name."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "TypeError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If the inferred type of the underlying data is in "
                      }
                    },
                    {
                      "type": "Link",
                      "data": {
                        "value": "forbidden",
                        "reference": {
                          "module": null,
                          "version": null,
                          "kind": "local",
                          "path": "forbidden"
                        },
                        "kind": "local",
                        "exists": true
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "func",
            "type_": "wrapper",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The method to which the decorator is applied, with an added check that enforces the inferred type to not be in the list of forbidden types."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Decorator to forbid specific types for a method of StringMethods."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    {
      "module": "pandas",
      "version": "1.4.0",
      "kind": "module",
      "path": "pandas.core.strings.accessor.StringMethods"
    }
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises"
  ],
  "item_file": "/pandas/core/strings/accessor.py",
  "item_line": 64,
  "item_type": "<class 'function'>",
  "aliases": [
    "pandas.core.strings.accessor.forbid_nonstring_types"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "version": "1.4.0",
  "signature": "forbid_nonstring_types(forbidden: 'list[str] | None', name: 'str | None' = None) -> 'Callable[[F], F]'",
  "references": null,
  "logo": "logo.png",
  "qa": "pandas.core.strings.accessor.forbid_nonstring_types",
  "arbitrary": []
}